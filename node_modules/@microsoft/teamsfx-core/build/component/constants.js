"use strict";
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT license.
Object.defineProperty(exports, "__esModule", { value: true });
exports.FunctionAppSetting = exports.AadAppOutputs = exports.BotServiceOutputs = exports.StorageOutputs = exports.FunctionOutputs = exports.WebAppOutputs = exports.APIMOutputs = exports.KeyVaultOutputs = exports.IdentityOutputs = exports.AzureSqlOutputs = exports.ErrorConstants = exports.TelemetryConstants = exports.BicepConstants = exports.ActionTypeShell = exports.ActionTypeGroup = exports.ActionTypeCall = exports.ActionTypeFunction = exports.ActionNames = exports.languageToRuntime = exports.Runtime = exports.ProgrammingLanguage = exports.scenarioToComponent = exports.componentToScenario = exports.Scenarios = exports.AzureResources = exports.ComponentNames = void 0;
exports.ComponentNames = {
    TeamsTab: "teams-tab",
    TeamsBot: "teams-bot",
    TeamsApi: "teams-api",
    AppManifest: "app-manifest",
    AadApp: "aad-app",
    AzureWebApp: "azure-web-app",
    AzureStorage: "azure-storage",
    BotService: "bot-service",
    SPFxTab: "spfx-tab",
    SPFx: "spfx",
    Identity: "identity",
    APIMFeature: "apim-feature",
    APIM: "apim",
    KeyVault: "key-vault",
    AzureSQL: "azure-sql",
    TabCode: "tab-code",
    BotCode: "bot-code",
    SPFxTabCode: "spfx-tab-code",
    ApiCode: "api-code",
    Function: "azure-function",
    SimpleAuth: "simple-auth",
    SSO: "sso",
    ApiConnector: "api-connector",
    CICD: "cicd",
};
exports.AzureResources = [
    exports.ComponentNames.APIM,
    exports.ComponentNames.AzureWebApp,
    exports.ComponentNames.Function,
    exports.ComponentNames.Identity,
    exports.ComponentNames.KeyVault,
    exports.ComponentNames.AzureSQL,
    exports.ComponentNames.AzureStorage,
];
var Scenarios;
(function (Scenarios) {
    Scenarios["Tab"] = "Tab";
    Scenarios["Bot"] = "Bot";
    Scenarios["Api"] = "Api";
})(Scenarios = exports.Scenarios || (exports.Scenarios = {}));
exports.componentToScenario = new Map([
    [exports.ComponentNames.TeamsApi, Scenarios.Api],
    [exports.ComponentNames.TeamsBot, Scenarios.Bot],
    [exports.ComponentNames.TeamsTab, Scenarios.Tab],
]);
exports.scenarioToComponent = new Map([
    [Scenarios.Api, exports.ComponentNames.TeamsApi],
    [Scenarios.Bot, exports.ComponentNames.TeamsBot],
    [Scenarios.Tab, exports.ComponentNames.TeamsTab],
]);
var ProgrammingLanguage;
(function (ProgrammingLanguage) {
    ProgrammingLanguage["JS"] = "javascript";
    ProgrammingLanguage["TS"] = "typescript";
    ProgrammingLanguage["CSharp"] = "csharp";
})(ProgrammingLanguage = exports.ProgrammingLanguage || (exports.ProgrammingLanguage = {}));
var Runtime;
(function (Runtime) {
    Runtime["nodejs"] = "node";
    Runtime["dotnet"] = "dotnet";
})(Runtime = exports.Runtime || (exports.Runtime = {}));
exports.languageToRuntime = new Map([
    [ProgrammingLanguage.JS, Runtime.nodejs],
    [ProgrammingLanguage.TS, Runtime.nodejs],
    [ProgrammingLanguage.CSharp, Runtime.dotnet],
]);
exports.ActionNames = {
    provision: "provision",
    configure: "configure",
    generateBicep: "generateBicep",
};
exports.ActionTypeFunction = "function";
exports.ActionTypeCall = "call";
exports.ActionTypeGroup = "group";
exports.ActionTypeShell = "shell";
exports.BicepConstants = {
    writeFile: "1",
};
exports.TelemetryConstants = {
    eventPrefix: "-start",
    properties: {
        component: "component",
        appId: "appid",
        tenantId: "tenant-id",
        success: "success",
        errorCode: "error-code",
        errorType: "error-type",
        errorMessage: "error-message",
    },
    values: {
        yes: "yes",
        no: "no",
        userError: "user",
        systemError: "system",
    },
};
exports.ErrorConstants = {
    unhandledError: "UnhandledError",
    unhandledErrorMessage: "Unhandled Error",
};
exports.AzureSqlOutputs = {
    sqlResourceId: {
        key: "sqlResourceId",
        bicepVariable: "provisionOutputs.azureSqlOutput.value.sqlResourceId",
    },
    sqlEndpoint: {
        key: "sqlEndpoint",
        bicepVariable: "provisionOutputs.azureSqlOutput.value.sqlEndpoint",
    },
    databaseName: {
        key: "databaseName",
        bicepVariable: "provisionOutputs.azureSqlOutput.value.databaseName",
    },
};
exports.IdentityOutputs = {
    identityResourceId: {
        key: "identityResourceId",
        bicepVariable: "userAssignedIdentityProvision.outputs.identityResourceId",
    },
    identityName: {
        key: "identityName",
        bicepVariable: "provisionOutputs.identityOutput.value.identityName",
    },
    identityClientId: {
        key: "identityClientId",
        bicepVariable: "provisionOutputs.identityOutput.value.identityClientId",
    },
    identityPrincipalId: {
        key: "identityPrincipalId",
        bicepVariable: "userAssignedIdentityProvision.outputs.identityPrincipalId",
    },
};
exports.KeyVaultOutputs = {
    keyVaultResourceId: {
        key: "keyVaultResourceId",
        bicepVariable: "provisionOutputs.keyVaultOutput.value.keyVaultResourceId",
    },
    m365ClientSecretReference: {
        key: "m365ClientSecretReference",
        bicepVariable: "provisionOutputs.keyVaultOutput.value.m365ClientSecretReference",
    },
    botClientSecretReference: {
        key: "botClientSecretReference",
        bicepVariable: "provisionOutputs.keyVaultOutput.value.botClientSecretReference",
    },
};
exports.APIMOutputs = {
    serviceResourceId: {
        key: "serviceResourceId",
        bicepVariable: "provisionOutputs.apimOutput.value.serviceResourceId",
    },
    productResourceId: {
        key: "productResourceId",
        bicepVariable: "provisionOutputs.apimOutput.value.productResourceId",
    },
    authServerResourceId: {
        key: "authServerResourceId",
    },
    apimClientAADObjectId: {
        key: "apimClientAADObjectId",
    },
    apimClientAADClientId: {
        key: "apimClientAADClientId",
    },
    apimClientAADClientSecret: {
        key: "apimClientAADClientSecret",
    },
};
exports.WebAppOutputs = {
    resourceId: {
        key: "resourceId",
        bicepVariable: "provisionOutputs.azureWebApp{{scenario}}Output.value.resourceId",
    },
    endpoint: {
        key: "siteEndpoint",
        bicepVariable: "provisionOutputs.azureWebApp{{scenario}}Output.value.siteEndpoint",
    },
    endpointAsParam: {
        key: "siteEndpointAsParam",
        bicepVariable: "azureWebApp{{scenario}}Provision.outputs.siteEndpoint",
    },
};
exports.FunctionOutputs = {
    resourceId: {
        key: "functionAppResourceId",
        bicepVariable: "provisionOutputs.azureFunction{{scenario}}Output.value.functionAppResourceId",
    },
    endpoint: {
        key: "functionEndpoint",
        bicepVariable: "provisionOutputs.azureFunction{{scenario}}Output.value.functionEndpoint",
    },
    endpointAsParam: {
        key: "functionEndpointAsParam",
        bicepVariable: "azureFunction{{scenario}}Provision.outputs.functionEndpoint",
    },
};
exports.StorageOutputs = {
    endpoint: {
        key: "endpoint",
        bicepVariable: "provisionOutputs.azureStorage{{scenario}}Output.value.endpoint",
    },
    storageResourceId: {
        key: "storageResourceId",
        bicepVariable: "provisionOutputs.azureStorage{{scenario}}Output.value.storageResourceId",
    },
    domain: {
        key: "domain",
        bicepVariable: "provisionOutputs.azureStorage{{scenario}}Output.value.domain",
    },
    indexPath: {
        key: "indexPath",
        bicepVariable: "provisionOutputs.azureStorage{{scenario}}Output.value.indexPath",
    },
};
exports.BotServiceOutputs = {
    botId: {
        key: "botId",
    },
    botPassword: {
        key: "botPassword",
    },
};
exports.AadAppOutputs = {
    applicationIdUris: {
        key: "applicationIdUris",
    },
    clientId: {
        key: "clientId",
    },
    clientSecret: {
        key: "clientSecret",
    },
    objectId: {
        key: "objectId",
    },
    oauth2PermissionScopeId: {
        key: "oauth2PermissionScopeId",
    },
    frontendEndpoint: {
        key: "frontendEndpoint",
    },
    botId: {
        key: "botId",
    },
    botEndpoint: {
        key: "botEndpoint",
    },
    domain: {
        key: "domain",
    },
    endpoint: {
        key: "endpoint",
    },
    oauthAuthority: {
        key: "oauthAuthority",
    },
    oauthHost: {
        key: "oauthHost",
    },
    tenantId: {
        key: "tenantId",
    },
};
exports.FunctionAppSetting = {
    keys: {
        allowedAppIds: "ALLOWED_APP_IDS",
    },
    allowedAppIdSep: ";",
};
//# sourceMappingURL=constants.js.map