import { Effect } from "@microsoft/teamsfx-api";
export declare class ProgressTitles {
    static readonly scaffoldTab: string;
    static readonly scaffoldBot: string;
    static readonly scaffoldApi = "Scaffolding Api";
    static readonly buildingTab = "Building Tab";
    static readonly buildingBot = "Building Bot";
    static readonly buildingApi = "Building Api";
    static readonly provisionBot = "Registering Bot";
    static readonly configureStorage: string;
    static readonly deploying: (component: string, scenario?: string | undefined) => string;
    static readonly deployingStorage: string;
}
export declare class ProgressMessages {
    static readonly scaffoldTab: string;
    static readonly scaffoldBot = "Retrieving templates.";
    static readonly scaffoldApi = "Scaffolding Function Api project.";
    static readonly buildingTab: string;
    static readonly buildingBot = "Installing dependencies.";
    static readonly buildingApi = "Building Function Api.";
    static readonly packingCode = "Creating application package.";
    static readonly enableStaticWebsite: string;
    static readonly provisionBot = "Registering bot.";
}
export declare class LogMessages {
    static readonly updateFunctionAppSettings = "Updating Azure Function app settings.";
    static readonly enableStaticWebsite = "Enabling static website feature for Azure Storage.";
}
export interface LocalizedMessage {
    default: string;
    localized: string;
}
export declare class ErrorMessage {
    static readonly programmingLanguageInvalid = "Invalid programming language found in project settings.";
    static readonly SomethingIsMissing: (something: string) => LocalizedMessage;
    static readonly SomethingIsNotExisting: (something: string) => LocalizedMessage;
    static readonly WorkingDirIsMissing: LocalizedMessage;
    static readonly RetryTheCurrentStep: LocalizedMessage;
    static readonly RecreateTheProject: LocalizedMessage;
    static readonly CheckOutputLogAndTryToFix: {
        default: string;
        localized: string;
    };
    static readonly ReopenWorkingDir: (path?: string) => LocalizedMessage;
}
export declare class Plans {
    static readonly scaffold: (scenario: string, folder: string) => Effect;
    static readonly buildProject: (folder: string) => Effect;
    static readonly deploy: (component: string, folder: string) => Effect;
    static readonly enableStaticWebsite: () => Effect;
    static readonly createAADforBot: () => Effect;
    static readonly registerBot: () => Effect;
    static readonly updateBotEndpoint: () => Effect;
    static readonly generateSourceCodeAndConfig: (feature: string) => Effect;
    static readonly generateBicepAndConfig: (feature: string) => Effect;
    static readonly addFeature: (feature: string) => Effect;
}
//# sourceMappingURL=messages.d.ts.map