import { FxError, Result, TokenProvider, v2, v3, Json, Inputs, QTreeNode, ContextV3 } from "@microsoft/teamsfx-api";
import { ListCollaboratorResult, PermissionsResult } from "../common/permissionInterface";
export declare function listCollaborator(ctx: ContextV3, inputs: v2.InputsWithProjectPath, envInfo: v3.EnvInfoV3, tokenProvider: TokenProvider, telemetryProps?: Json): Promise<Result<ListCollaboratorResult, FxError>>;
export declare function checkPermission(ctx: ContextV3, inputs: v2.InputsWithProjectPath, envInfo: v3.EnvInfoV3, tokenProvider: TokenProvider, telemetryProps?: Json): Promise<Result<PermissionsResult, FxError>>;
export declare function grantPermission(ctx: ContextV3, inputs: v2.InputsWithProjectPath, envInfo: v3.EnvInfoV3, tokenProvider: TokenProvider, telemetryProps?: Json): Promise<Result<PermissionsResult, FxError>>;
export declare function getQuestionsForGrantPermission(inputs: Inputs): Promise<Result<QTreeNode | undefined, FxError>>;
//# sourceMappingURL=collaborator.d.ts.map