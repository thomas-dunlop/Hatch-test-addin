"use strict";
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT license.
Object.defineProperty(exports, "__esModule", { value: true });
exports.Messages = void 0;
const localizeUtils_1 = require("../../../../common/localizeUtils");
class Messages {
}
exports.Messages = Messages;
Messages.SomethingIsInvalidWithValue = (something, value) => [
    localizeUtils_1.getDefaultString("plugins.bot.InvalidValue", something, value),
    localizeUtils_1.getLocalizedString("plugins.bot.InvalidValue", something, value),
];
Messages.SomethingIsMissing = (something) => [
    localizeUtils_1.getDefaultString("plugins.bot.SomethingIsMissing", something),
    localizeUtils_1.getLocalizedString("plugins.bot.SomethingIsMissing", something),
];
Messages.SomethingIsNotExisting = (something) => [
    localizeUtils_1.getDefaultString("plugins.bot.SomethingNotExisting", something),
    localizeUtils_1.getLocalizedString("plugins.bot.SomethingNotExisting", something),
];
Messages.FailToProvisionSomeResource = (resource) => [
    localizeUtils_1.getDefaultString("plugins.bot.FailedToProvision", resource),
    localizeUtils_1.getLocalizedString("plugins.bot.FailedToProvision", resource),
];
Messages.FailToUpdateConfigs = (something) => [
    localizeUtils_1.getDefaultString("plugins.bot.FailedToUpdateConfigs", something),
    localizeUtils_1.getLocalizedString("plugins.bot.FailedToUpdateConfigs", something),
];
Messages.FailToUpdateMessageEndpoint = (endpoint) => [
    localizeUtils_1.getDefaultString("plugins.bot.FailedUpdateMessageEndpoint", endpoint),
    localizeUtils_1.getLocalizedString("plugins.bot.FailedUpdateMessageEndpoint", endpoint),
];
Messages.CommandExecutionFailed = (command) => [
    localizeUtils_1.getDefaultString("plugins.bot.FailToRun", command),
    localizeUtils_1.getLocalizedString("plugins.bot.FailToRun", command),
];
Messages.FailToCallAppStudioForCheckingAADApp = [
    localizeUtils_1.getDefaultString("plugins.bot.FailToCallAppStudioApi"),
    localizeUtils_1.getLocalizedString("plugins.bot.FailToCallAppStudioApi"),
];
Messages.SuccessfullyRetrievedTemplateZip = (zipUrl) => localizeUtils_1.getLocalizedString("plugins.bot.SuccessfullyRetrievedZip", zipUrl);
Messages.FallingBackToUseLocalTemplateZip = localizeUtils_1.getLocalizedString("plugins.bot.FallingUseLocalTemplate");
Messages.ResourceProviderExist = (rp) => localizeUtils_1.getLocalizedString("plugins.bot.ResourceProvider", rp);
Messages.BotResourceExist = (where) => localizeUtils_1.getLocalizedString("plugins.bot.BotResourceExists", where);
Messages.WorkingDirIsMissing = [
    localizeUtils_1.getDefaultString("plugins.bot.WorkingDirMissing"),
    localizeUtils_1.getLocalizedString("plugins.bot.WorkingDirMissing"),
];
Messages.FailToGetAzureCreds = [
    localizeUtils_1.getDefaultString("plugins.bot.FailRetrieveAzureCredentials"),
    localizeUtils_1.getLocalizedString("plugins.bot.FailRetrieveAzureCredentials"),
];
Messages.TryLoginAzure = localizeUtils_1.getLocalizedString("plugins.bot.LoginToAzure");
Messages.SkipDeployNoUpdates = localizeUtils_1.getLocalizedString("plugins.bot.SkipDeployment");
Messages.ScaffoldingBot = localizeUtils_1.getLocalizedString("plugins.bot.ScaffoldingBot");
Messages.SuccessfullyScaffoldedBot = localizeUtils_1.getLocalizedString("plugins.bot.ScaffoldingBotSuccess");
Messages.PreProvisioningBot = localizeUtils_1.getLocalizedString("plugins.bot.PreProvisionBot");
Messages.ProvisioningBot = localizeUtils_1.getLocalizedString("plugins.bot.ProvisionBot");
Messages.PreDeployingBot = localizeUtils_1.getLocalizedString("plugins.bot.PreDeployingBot");
Messages.DeployingBot = localizeUtils_1.getLocalizedString("plugins.bot.DeployingBot");
Messages.SuccessfullyDeployedBot = localizeUtils_1.getLocalizedString("plugins.bot.DeployingBotSuccess");
Messages.GeneratingArmTemplatesBot = localizeUtils_1.getLocalizedString("plugins.bot.GeneratingBotARMTemplates");
Messages.SuccessfullyGenerateArmTemplatesBot = localizeUtils_1.getLocalizedString(
// eslint-disable-next-line no-secrets/no-secrets
"plugins.bot.GeneratingARMTemplatesSuccess");
Messages.UpdatingArmTemplatesBot = localizeUtils_1.getLocalizedString("plugins.bot.UpdateBotARMTemplates");
Messages.SuccessfullyUpdateArmTemplatesBot = localizeUtils_1.getLocalizedString(
// eslint-disable-next-line no-secrets/no-secrets
"plugins.bot.UpdateBotARMTemplatesSuccess");
Messages.SuccessfullyGetExistingBotAadAppCredential = localizeUtils_1.getLocalizedString("plugins.bot.GetBotAADSuccess");
Messages.SuccessfullyCreatedBotAadApp = localizeUtils_1.getLocalizedString("plugins.bot.CreateBotAADSuccess");
Messages.ProvisioningBotRegistration = localizeUtils_1.getLocalizedString("plugins.bot.ProvisionBotRegistration");
Messages.SuccessfullyProvisionedBotRegistration = localizeUtils_1.getLocalizedString("plugins.bot.ProvisionBotRegistrationSuccess");
// Suggestions
Messages.RetryTheCurrentStep = localizeUtils_1.getLocalizedString("suggestions.retryTheCurrentStep");
Messages.RecoverConfig = localizeUtils_1.getLocalizedString("plugins.bot.RecoverConfig");
Messages.RecreateTheProject = [
    localizeUtils_1.getDefaultString("plugins.bot.RecreateProject"),
    localizeUtils_1.getLocalizedString("plugins.bot.RecreateProject"),
];
Messages.CheckCommandOutputAndTryToFixIt = localizeUtils_1.getLocalizedString("plugins.bot.CheckCommandOutput");
Messages.RunFailedCommand = (command, path) => localizeUtils_1.getLocalizedString("plugins.bot.RunFailedCommand", command, path);
Messages.DeleteExistingBotChannelRegistration = localizeUtils_1.getLocalizedString(
// eslint-disable-next-line no-secrets/no-secrets
"plugins.bot.DeleteExistsAzureBotChannelRegistrations");
Messages.DeleteBotAfterAzureAccountSwitching = localizeUtils_1.getLocalizedString("plugins.bot.DelAzureBotChannel");
Messages.CheckOutputLogAndTryToFix = localizeUtils_1.getLocalizedString("plugins.bot.CheckLogAndFix");
Messages.RegisterRequiredRP = (resourceProviders) => localizeUtils_1.getLocalizedString("plugins.bot.RegisterResourceProviderManually", resourceProviders.join(","));
Messages.ReopenWorkingDir = (path = "") => localizeUtils_1.getLocalizedString("plugins.bot.CheckPathWriteAccess", path);
//# sourceMappingURL=messages.js.map