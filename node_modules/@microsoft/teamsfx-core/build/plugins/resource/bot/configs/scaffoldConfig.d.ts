import { PluginContext } from "@microsoft/teamsfx-api";
import { BotCapability, NotificationTrigger } from "../resources/strings";
import { ProgrammingLanguage } from "../enums/programmingLanguage";
import { HostType } from "../v2/enum";
export declare class ScaffoldConfig {
    botId?: string;
    botPassword?: string;
    objectId?: string;
    programmingLanguage?: ProgrammingLanguage;
    workingDir?: string;
    hostType?: HostType;
    triggers: NotificationTrigger[];
    botCapabilities: BotCapability[];
    botAADCreated(): boolean;
    restoreConfigFromContext(context: PluginContext, isScaffold: boolean): Promise<void>;
    saveConfigIntoContext(context: PluginContext): void;
    /**
     * Get bot host type from plugin context.
     * For stages like scaffolding (including create new and add capability),
     *    the host type is from user inputs of question model (i.e. context.answers).
     * For later stages, the host type is persisted in projectSettings.json.
     * @param isScaffold true for the `scaffold` lifecycle, false otherwise.
     */
    static getBotHostType(context: PluginContext, isScaffold: boolean): HostType | undefined;
    private static getHostTypeFromHostTypeTriggerQuestion;
    private static getHostTypeFromProjectSettings;
    private static getBotCapabilities;
}
//# sourceMappingURL=scaffoldConfig.d.ts.map