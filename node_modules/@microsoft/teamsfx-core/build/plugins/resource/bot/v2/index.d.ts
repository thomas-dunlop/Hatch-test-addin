import { Func, FxError, Inputs, Json, ProjectSettings, QTreeNode, Result, TokenProvider, v2, Void } from "@microsoft/teamsfx-api";
import { Context, DeploymentInputs, DeepReadonly, ProvisionInputs, ResourcePlugin, ResourceTemplate, EnvInfoV2 } from "@microsoft/teamsfx-api/build/v2";
import { TeamsBot } from "../index";
import { TeamsBotV2Impl } from "./plugin";
export declare class BotPluginV2 implements ResourcePlugin {
    name: string;
    displayName: string;
    plugin: TeamsBot;
    impl: TeamsBotV2Impl;
    activate(projectSettings: ProjectSettings): boolean;
    getQuestionsForScaffolding(ctx: v2.Context, inputs: Inputs): Promise<Result<QTreeNode | undefined, FxError>>;
    scaffoldSourceCode(ctx: Context, inputs: Inputs): Promise<Result<Void, FxError>>;
    generateResourceTemplate(ctx: Context, inputs: Inputs): Promise<Result<ResourceTemplate, FxError>>;
    updateResourceTemplate(ctx: Context, inputs: Inputs): Promise<Result<v2.ResourceTemplate, FxError>>;
    provisionResource(ctx: Context, inputs: ProvisionInputs, envInfo: v2.EnvInfoV2, tokenProvider: TokenProvider): Promise<Result<Void, FxError>>;
    configureResource(ctx: Context, inputs: ProvisionInputs, envInfo: v2.EnvInfoV2, tokenProvider: TokenProvider): Promise<Result<Void, FxError>>;
    provisionLocalResource(ctx: Context, inputs: Inputs, localSettings: Json, tokenProvider: TokenProvider, envInfo?: EnvInfoV2): Promise<Result<Void, FxError>>;
    configureLocalResource(ctx: Context, inputs: Inputs, localSettings: Json, tokenProvider: TokenProvider, envInfo?: EnvInfoV2): Promise<Result<Void, FxError>>;
    deploy(ctx: Context, inputs: DeploymentInputs, envInfo: DeepReadonly<v2.EnvInfoV2>, tokenProvider: TokenProvider): Promise<Result<Void, FxError>>;
    getQuestionsForUserTask(ctx: v2.Context, inputs: Inputs, func: Func, envInfo: v2.DeepReadonly<v2.EnvInfoV2>, tokenProvider: TokenProvider): Promise<Result<QTreeNode | undefined, FxError>>;
    executeUserTask(ctx: Context, inputs: Inputs, func: Func, localSettings: Json, envInfo: v2.EnvInfoV2, tokenProvider: TokenProvider): Promise<Result<unknown, FxError>>;
}
//# sourceMappingURL=index.d.ts.map