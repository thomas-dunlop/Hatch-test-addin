"use strict";
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT license.
Object.defineProperty(exports, "__esModule", { value: true });
exports.SpfxPluginV2 = void 0;
const tslib_1 = require("tslib");
const typedi_1 = require("typedi");
const __1 = require("../..");
const ResourcePluginContainer_1 = require("../../../solution/fx-solution/ResourcePluginContainer");
const utils4v2_1 = require("../../utils4v2");
let SpfxPluginV2 = class SpfxPluginV2 {
    constructor() {
        this.name = "fx-resource-spfx";
        this.displayName = "SharePoint Framework (SPFx)";
    }
    activate(projectSettings) {
        const solutionSettings = projectSettings.solutionSettings;
        return this.plugin.activate(solutionSettings);
    }
    async getQuestionsForScaffolding(ctx, inputs) {
        return await utils4v2_1.getQuestionsForScaffoldingAdapter(ctx, inputs, this.plugin);
    }
    async getQuestionsForUserTask(ctx, inputs, func, envInfo, tokenProvider) {
        return await utils4v2_1.getQuestionsForUserTaskAdapter(ctx, inputs, func, envInfo, tokenProvider, this.plugin);
    }
    async scaffoldSourceCode(ctx, inputs) {
        return await utils4v2_1.scaffoldSourceCodeAdapter(ctx, inputs, this.plugin);
    }
    async deploy(ctx, inputs, envInfo, tokenProvider) {
        return await utils4v2_1.deployAdapter(ctx, inputs, envInfo, tokenProvider, this.plugin);
    }
};
tslib_1.__decorate([
    typedi_1.Inject(ResourcePluginContainer_1.ResourcePlugins.SpfxPlugin),
    tslib_1.__metadata("design:type", __1.SpfxPlugin)
], SpfxPluginV2.prototype, "plugin", void 0);
SpfxPluginV2 = tslib_1.__decorate([
    typedi_1.Service(ResourcePluginContainer_1.ResourcePluginsV2.SpfxPlugin)
], SpfxPluginV2);
exports.SpfxPluginV2 = SpfxPluginV2;
//# sourceMappingURL=index.js.map