import { Providers, ResourceManagementClient } from "@azure/arm-resources";
import { StorageManagementClient, StorageManagementModels } from "@azure/arm-storage";
import { TokenCredentialsBase } from "@azure/ms-rest-nodeauth";
import { WebSiteManagementClient, WebSiteManagementModels } from "@azure/arm-appservice";
import { Provider } from "@azure/arm-resources/esm/models";
export declare class AzureClientFactory {
    static getStorageManagementClient(credentials: TokenCredentialsBase, subscriptionId: string): StorageManagementClient;
    static getWebSiteManagementClient(credentials: TokenCredentialsBase, subscriptionId: string): WebSiteManagementClient;
    static getResourceManagementClient(credentials: TokenCredentialsBase, subscriptionId: string): ResourceManagementClient;
    static getResourceProviderClient(credentials: TokenCredentialsBase, subscriptionId: string): Providers;
}
declare type Site = WebSiteManagementModels.Site;
declare type AppServicePlan = WebSiteManagementModels.AppServicePlan;
declare type StorageAccount = StorageManagementModels.StorageAccount;
declare type StorageAccountCreateParameters = StorageManagementModels.StorageAccountCreateParameters;
export declare class AzureLib {
    static doesResourceGroupExist(client: ResourceManagementClient, resourceGroupName: string): Promise<boolean>;
    private static ensureResource;
    static findResourceProvider(client: Providers, namespace: string): Promise<Provider | undefined>;
    static ensureResourceProviders(client: Providers, providerNamespaces: string[]): Promise<Provider[]>;
    static findAppServicePlans(client: WebSiteManagementClient, resourceGroupName: string, appServicePlanName: string): Promise<AppServicePlan | undefined>;
    static ensureAppServicePlans(client: WebSiteManagementClient, resourceGroupName: string, appServicePlanName: string, options: AppServicePlan): Promise<AppServicePlan>;
    static findStorageAccount(client: StorageManagementClient, resourceGroupName: string, storageName: string): Promise<StorageAccount | undefined>;
    static ensureStorageAccount(client: StorageManagementClient, resourceGroupName: string, storageName: string, params: StorageAccountCreateParameters): Promise<StorageAccount>;
    static getConnectionString(client: StorageManagementClient, resourceGroupName: string, storageAccountName: string): Promise<string | undefined>;
    static findFunctionApp(client: WebSiteManagementClient, resourceGroupName: string, functionAppName: string): Promise<Site | undefined>;
    static ensureFunctionApp(client: WebSiteManagementClient, resourceGroupName: string, functionAppName: string, siteEnvelope: Site): Promise<Site>;
}
export {};
//# sourceMappingURL=azure-client.d.ts.map