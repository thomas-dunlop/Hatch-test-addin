export declare enum FunctionLanguage {
    JavaScript = "javascript",
    TypeScript = "typescript"
}
export declare enum FunctionConfigKey {
    resourceGroupName = "resourceGroupName",
    subscriptionId = "subscriptionId",
    credential = "credential",
    location = "location",
    resourceNameSuffix = "resourceNameSuffix",
    functionLanguage = "programmingLanguage",
    functionAppName = "functionAppName",
    defaultFunctionName = "defaultFunctionName",
    storageAccountName = "storageAccountName",
    appServicePlanName = "appServicePlanName",
    functionEndpoint = "functionEndpoint",
    functionAppResourceId = "functionAppResourceId",
    functionName = "functionName",
    skipDeploy = "skipDeploy",
    site = "site"
}
export declare enum QuestionKey {
    functionName = "function-name",
    programmingLanguage = "programming-language",
    nodeVersion = "node-version",
    stage = "stage"
}
export declare enum ResourceType {
    storageAccount = "Azure storage account",
    appServicePlan = "Azure App Service plan",
    functionApp = "Azure function app"
}
export declare enum TelemetryKey {
    Component = "component",
    Success = "success",
    ErrorType = "error-type",
    ErrorMessage = "error-message",
    ErrorCode = "error-code",
    AppId = "appid",
    OSArch = "os-arch",
    OSRelease = "os-release"
}
export declare enum TelemetryValue {
    Success = "yes",
    Fail = "no",
    UserError = "user",
    SystemError = "system"
}
export declare enum FunctionEvent {
    preScaffold = "pre-scaffold",
    scaffold = "scaffold",
    postScaffold = "post-scaffold",
    preProvision = "pre-provision",
    provision = "provision",
    postProvision = "post-provision",
    preDeploy = "pre-deploy",
    deploy = "deploy",
    postDeploy = "post-deploy",
    getQuestions = "get-questions",
    executeUserTask = "execute-user-task",
    callFunc = "call-func",
    scaffoldFallback = "scaffold-fallback",
    skipDeploy = "skip-deploy",
    DeploymentInfoNotFound = "deployment-info-not-found",
    generateArmTemplates = "generate-arm-templates",
    updateArmTemplates = "update-arm-templates",
    addResource = "add-resource"
}
export declare enum CustomizedTask {
    addResource = "addResource",
    addFeature = "addFeature"
}
//# sourceMappingURL=enums.d.ts.map