"use strict";
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT license.
Object.defineProperty(exports, "__esModule", { value: true });
exports.InstallTeamsFxBindingError = exports.ConfigFunctionAppError = exports.InstallNpmPackageError = exports.InitAzureSDKError = exports.FindAppError = exports.FunctionNameConflictError = exports.FetchConfigError = exports.ValidationError = void 0;
const teamsfx_api_1 = require("@microsoft/teamsfx-api");
const localizeUtils_1 = require("../../../../common/localizeUtils");
const constants_1 = require("../constants");
const errors_1 = require("../resources/errors");
class ValidationError extends teamsfx_api_1.UserError {
    constructor(key) {
        super(constants_1.FunctionPluginInfo.alias, new.target.name, localizeUtils_1.getDefaultString("plugins.baseErrorMessage", localizeUtils_1.getDefaultString("error.function.ValidationError", key), [errors_1.tips.recoverTeamsFxConfigFiles, errors_1.tips.recreateProject].join(" ")), localizeUtils_1.getLocalizedString("plugins.baseErrorMessage", localizeUtils_1.getLocalizedString("error.function.ValidationError", key), [errors_1.tips.recoverTeamsFxConfigFiles, errors_1.tips.recreateProject].join(" ")));
    }
}
exports.ValidationError = ValidationError;
class FetchConfigError extends teamsfx_api_1.UserError {
    constructor(key) {
        super(constants_1.FunctionPluginInfo.alias, new.target.name, localizeUtils_1.getDefaultString("plugins.baseErrorMessage", localizeUtils_1.getDefaultString("error.function.FetchConfigError", key), [errors_1.tips.recoverTeamsFxConfigFiles, errors_1.tips.recreateProject].join(" ")), localizeUtils_1.getLocalizedString("plugins.baseErrorMessage", localizeUtils_1.getLocalizedString("error.function.FetchConfigError", key), [errors_1.tips.recoverTeamsFxConfigFiles, errors_1.tips.recreateProject].join(" ")));
    }
}
exports.FetchConfigError = FetchConfigError;
class FunctionNameConflictError extends teamsfx_api_1.UserError {
    constructor() {
        super(constants_1.FunctionPluginInfo.alias, new.target.name, localizeUtils_1.getDefaultString("plugins.baseErrorMessage", localizeUtils_1.getDefaultString("error.function.FunctionNameConfigError"), errors_1.tips.checkLog), localizeUtils_1.getLocalizedString("plugins.baseErrorMessage", localizeUtils_1.getLocalizedString("error.function.FunctionNameConfigError"), errors_1.tips.checkLog));
    }
}
exports.FunctionNameConflictError = FunctionNameConflictError;
class FindAppError extends teamsfx_api_1.SystemError {
    constructor() {
        super(constants_1.FunctionPluginInfo.alias, new.target.name, localizeUtils_1.getDefaultString("plugins.baseErrorMessage", localizeUtils_1.getDefaultString("error.function.FunctionAppError"), [errors_1.tips.doProvision].join(" ")), localizeUtils_1.getLocalizedString("plugins.baseErrorMessage", localizeUtils_1.getLocalizedString("error.function.FunctionAppError"), [errors_1.tips.doProvision].join(" ")));
    }
}
exports.FindAppError = FindAppError;
class InitAzureSDKError extends teamsfx_api_1.UserError {
    constructor() {
        super(constants_1.FunctionPluginInfo.alias, new.target.name, localizeUtils_1.getDefaultString("plugins.baseErrorMessage", localizeUtils_1.getDefaultString("error.function.InitAzureSDKError"), [errors_1.tips.checkCredential, errors_1.tips.checkSubscriptionId].join(" ")), localizeUtils_1.getLocalizedString("plugins.baseErrorMessage", localizeUtils_1.getLocalizedString("error.function.InitAzureSDKError"), [errors_1.tips.checkCredential, errors_1.tips.checkSubscriptionId].join(" ")));
    }
}
exports.InitAzureSDKError = InitAzureSDKError;
class InstallNpmPackageError extends teamsfx_api_1.UserError {
    constructor() {
        super(constants_1.FunctionPluginInfo.alias, new.target.name, localizeUtils_1.getDefaultString("plugins.baseErrorMessage", localizeUtils_1.getDefaultString("error.function.InstallNpmPackageError"), [errors_1.tips.checkPackageJson].join(" ")), localizeUtils_1.getLocalizedString("plugins.baseErrorMessage", localizeUtils_1.getLocalizedString("error.function.InstallNpmPackageError"), [errors_1.tips.checkPackageJson].join(" ")));
    }
}
exports.InstallNpmPackageError = InstallNpmPackageError;
class ConfigFunctionAppError extends teamsfx_api_1.UserError {
    constructor() {
        super(constants_1.FunctionPluginInfo.alias, new.target.name, localizeUtils_1.getDefaultString("plugins.baseErrorMessage", localizeUtils_1.getDefaultString("error.function.ConfigFunctionAppError"), [errors_1.tips.checkSubscriptionId, errors_1.tips.checkNetwork, errors_1.tips.retryRequest].join(" ")), localizeUtils_1.getLocalizedString("plugins.baseErrorMessage", localizeUtils_1.getLocalizedString("error.function.ConfigFunctionAppError"), [errors_1.tips.checkSubscriptionId, errors_1.tips.checkNetwork, errors_1.tips.retryRequest].join(" ")));
    }
}
exports.ConfigFunctionAppError = ConfigFunctionAppError;
class InstallTeamsFxBindingError extends teamsfx_api_1.UserError {
    constructor() {
        super(constants_1.FunctionPluginInfo.alias, new.target.name, localizeUtils_1.getDefaultString("plugins.baseErrorMessage", localizeUtils_1.getDefaultString("error.function.InstallTeamsFxBindingError"), [errors_1.tips.checkFunctionExtVersion].join(" ")), localizeUtils_1.getLocalizedString("plugins.baseErrorMessage", localizeUtils_1.getLocalizedString("error.function.InstallTeamsFxBindingError"), [errors_1.tips.checkFunctionExtVersion].join(" ")));
    }
}
exports.InstallTeamsFxBindingError = InstallTeamsFxBindingError;
//# sourceMappingURL=error.js.map