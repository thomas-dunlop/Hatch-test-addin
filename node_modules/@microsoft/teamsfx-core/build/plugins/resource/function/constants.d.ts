import { Kind, SkuName, SkuTier } from "@azure/arm-storage/esm/models";
import { FunctionConfigKey, FunctionLanguage } from "./enums";
export declare class CommonConstants {
    static readonly emptyString: string;
    static readonly versionSep: string;
    static readonly msInOneSecond: number;
    static readonly zipTimeMSGranularity: number;
    static readonly latestTrustMtime: number;
}
export declare class FunctionPluginInfo {
    static readonly alias: string;
    static readonly pluginName: string;
    static readonly displayName: string;
    static readonly expectDotnetSDKs: string[];
    static readonly FunctionPluginPersistentConfig: FunctionConfigKey[];
    static readonly templateBaseGroupName: string;
    static readonly templateBaseScenarioName: string;
    static readonly templateTriggerGroupName: string;
}
export declare class FunctionPluginPathInfo {
    static readonly solutionFolderName: string;
    static readonly templateZipExt: string;
    static readonly templateZipNameSep: string;
    static readonly functionExtensionsFolderName: string;
    static readonly functionExtensionsFileName: string;
    static readonly funcDeploymentFolderName: string;
    static readonly funcDeploymentInfoFileName: string;
    static readonly funcDeploymentZipCacheFileName: string;
    static readonly funcIgnoreFileName: string;
    static readonly gitIgnoreFileName: string;
    static readonly npmPackageFolderName: string;
}
export declare class RegularExpr {
    static readonly validFunctionNamePattern: RegExp;
    static readonly validAppServicePlanNamePattern: RegExp;
    static readonly validFunctionAppNamePattern: RegExp;
    static readonly validStorageAccountNamePattern: RegExp;
    static readonly validResourceSuffixPattern: RegExp;
    static readonly allCharToBeSkippedInName: RegExp;
    static readonly replaceTemplateExtName: RegExp;
    static readonly replaceTemplateFileNamePlaceholder: RegExp;
}
export declare class DefaultValues {
    static readonly helpLink: string;
    static readonly issueLink: string;
    static readonly functionName: string;
    static readonly functionLanguage: FunctionLanguage;
    static readonly functionTriggerType: string;
    static readonly maxTryCount: number;
    static readonly scaffoldTryCount: number;
    static readonly scaffoldTimeoutInMs: number;
    static readonly deployTimeoutInMs: number;
}
export declare class DependentPluginInfo {
    static readonly solutionPluginFullName = "fx-solution-azure";
    static readonly solutionPluginName = "solution";
    static readonly resourceGroupName: string;
    static readonly subscriptionId: string;
    static readonly resourceNameSuffix: string;
    static readonly location: string;
    static readonly programmingLanguage: string;
    static readonly remoteTeamsAppId = "remoteTeamsAppId";
    static readonly aadPluginName: string;
    static readonly aadClientId: string;
    static readonly aadClientSecret: string;
    static readonly oauthHost: string;
    static readonly tenantId: string;
    static readonly applicationIdUris: string;
    static readonly sqlPluginName: string;
    static readonly databaseName: string;
    static readonly sqlEndpoint: string;
    static readonly identityPluginName: string;
    static readonly identityClientId: string;
    static readonly identityResourceId: string;
    static readonly frontendPluginName: string;
    static readonly frontendEndpoint: string;
    static readonly frontendDomain: string;
    static readonly apimPluginName: string;
    static readonly apimAppId: string;
}
export declare class FunctionAppSettingKeys {
    static readonly clientId: string;
    static readonly clientSecret: string;
    static readonly oauthHost: string;
    static readonly tenantId: string;
    static readonly identityId: string;
    static readonly databaseName: string;
    static readonly sqlEndpoint: string;
    static readonly allowedAppIds: string;
    static readonly functionEndpoint: string;
    static readonly applicationIdUris: string;
}
export declare class DefaultProvisionConfigs {
    static readonly allowAppIdSep = ";";
    static readonly nameSuffix = "be";
    static readonly siteIdentityTypeUserAssigned = "UserAssigned";
    static readonly appServicePlansConfig: (location: string) => {
        location: string;
        kind: string;
        sku: {
            name: string;
            tier: string;
            size: string;
            family: string;
            capacity: number;
        };
    };
    static readonly functionAppStaticSettings: {
        [key: string]: string;
    };
    static readonly storageConfig: (location: string) => {
        sku: {
            name: SkuName;
            tier: SkuTier;
        };
        kind: Kind;
        location: string;
        enableHttpsTrafficOnly: boolean;
    };
    static readonly functionAppConfig: (location: string) => {
        kind: string;
        location: string;
        clientAffinityEnabled: boolean;
    };
}
export declare class AzureInfo {
    static readonly resourceNameLenMax: number;
    static readonly suffixLenMax: number;
    static readonly zipDeployURL: (functionAppName: string) => string;
    static readonly runFromPackageSettingKey = "WEBSITE_RUN_FROM_PACKAGE";
    static readonly runFromPackageEnabled = "1";
    static readonly requiredResourceProviders: string[];
}
export declare class Commands {
    static readonly npmInstall: string;
    static readonly npmInstallProd: string;
    static readonly npmBuild: string;
}
export declare class QuestionValidationFunc {
    static readonly validateFunctionName: string;
}
export declare class FunctionBicep {
    static readonly functionEndpoint: string;
    static readonly functionAppResourceId: string;
}
export declare class FunctionArmOutput {
    static readonly Endpoint: string;
    static readonly AppResourceId: string;
}
export declare class FunctionBicepFile {
    static readonly provisionModuleTemplateFileName: string;
    static readonly configuraitonTemplateFileName: string;
}
//# sourceMappingURL=constants.d.ts.map