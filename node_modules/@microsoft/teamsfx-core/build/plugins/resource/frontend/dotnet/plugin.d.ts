import { Func, PluginContext, Result, FxError } from "@microsoft/teamsfx-api";
import { WebSiteManagementModels } from "@azure/arm-appservice";
import { PluginImpl } from "../interface";
declare type Site = WebSiteManagementModels.Site;
declare type TeamsFxResult = Result<any, FxError>;
export interface DotnetPluginConfig {
    resourceGroupName?: string;
    subscriptionId?: string;
    resourceNameSuffix?: string;
    location?: string;
    webAppName?: string;
    appServicePlanName?: string;
    endpoint?: string;
    domain?: string;
    projectFilePath?: string;
    webAppResourceId?: string;
    site?: Site;
}
export declare class DotnetPluginImpl implements PluginImpl {
    private syncConfigFromContext;
    private checkAndGet;
    scaffold(ctx: PluginContext): Promise<TeamsFxResult>;
    generateArmTemplates(ctx: PluginContext): Promise<TeamsFxResult>;
    updateArmTemplates(ctx: PluginContext): Promise<TeamsFxResult>;
    localDebug(ctx: PluginContext): Promise<TeamsFxResult>;
    postLocalDebug(ctx: PluginContext): Promise<TeamsFxResult>;
    postProvision(ctx: PluginContext): Promise<TeamsFxResult>;
    preDeploy(ctx: PluginContext): Promise<TeamsFxResult>;
    executeUserTask(func: Func, ctx: PluginContext): Promise<TeamsFxResult>;
    deploy(ctx: PluginContext): Promise<TeamsFxResult>;
}
export {};
//# sourceMappingURL=plugin.d.ts.map