export declare class Constants {
    static AzureStorageDefaultTier: string;
    static AzureStorageDefaultSku: string;
    static AzureStorageDefaultKind: string;
    static AzureStorageAccountNameLenMax: number;
    static AzureStorageWebContainer: string;
    static SuffixLenMax: number;
    static FrontendIndexDocument: string;
    static FrontendErrorDocument: string;
    static FrontendSuffix: string;
    static FrontendIndexPath: string;
    static EmptyString: string;
    static DayInMS: number;
    static SasTokenLifetimePadding: number;
    static SasTokenLifetime: number;
    static RequestTryCounts: number;
    static RequestTimeoutInMS: number;
    static ScaffoldTryCounts: number;
}
export declare class FrontendPluginInfo {
    static PluginName: string;
    static DisplayName: string;
    static ShortName: string;
    static IssueLink: string;
    static HelpLink: string;
}
export declare class Commands {
    static DefaultInstallNodePackages: string;
    static InstallNodePackages: string;
    static DefaultBuildFrontend: string;
    static BuildFrontend: string;
}
export declare class FrontendPathInfo {
    static WorkingDir: string;
    static TemplateRelativeDir: string;
    static BicepTemplateRelativeDir: string;
    static TemplateFileExt: string;
    static TemplatePackageExt: string;
    static ModuleProvisionFileName: string;
    static BuildFolderName: string;
    static BuildPath: string;
    static TabEnvironmentFilePath: string;
    static NodePackageFolderName: string;
    static NodePackageFile: string;
    static TabDeploymentFolderName: string;
    static TabDeploymentInfoFileName: string;
    static TabDeployIgnoreFolder: string[];
}
export declare class DependentPluginInfo {
    static readonly SolutionPluginName = "solution";
    static readonly SubscriptionId = "subscriptionId";
    static readonly ResourceGroupName = "resourceGroupName";
    static readonly ResourceNameSuffix = "resourceNameSuffix";
    static readonly Location = "location";
    static readonly ProgrammingLanguage = "programmingLanguage";
    static readonly RemoteTeamsAppId = "remoteTeamsAppId";
    static readonly FunctionPluginName = "fx-resource-function";
    static readonly FunctionEndpoint = "functionEndpoint";
    static readonly RuntimePluginName = "fx-resource-simple-auth";
    static readonly RuntimeEndpoint = "endpoint";
    static readonly StartLoginPageURL = "auth-start.html";
    static readonly AADPluginName = "fx-resource-aad-app-for-teams";
    static readonly ClientID = "clientId";
    static readonly LocalDebugPluginName = "fx-resource-local-debug";
    static readonly LocalTabEndpoint = "localTabEndpoint";
}
export declare class FrontendConfigInfo {
    static readonly StorageName = "storageName";
    static readonly StorageResourceId = "storageResourceId";
    static readonly Endpoint = "endpoint";
    static readonly Domain = "domain";
}
export declare class FrontendOutputBicepSnippet {
    static readonly Domain = "provisionOutputs.frontendHostingOutput.value.domain";
    static readonly Endpoint = "provisionOutputs.frontendHostingOutput.value.endpoint";
}
export declare class TelemetryEvent {
    static readonly StartSuffix = "-start";
    static readonly Scaffold = "scaffold";
    static readonly ScaffoldFallback = "scaffold-fallback";
    static readonly PreProvision = "pre-provision";
    static readonly Provision = "provision";
    static readonly PostProvision = "post-provision";
    static readonly PreDeploy = "pre-deploy";
    static readonly Deploy = "deploy";
    static readonly SkipDeploy = "skip-deploy";
    static readonly DeploymentInfoNotFound = "deployment-info-not-found";
    static readonly InstallScriptNotFound = "install-script-not-found";
    static readonly GenerateArmTemplates = "generate-arm-templates";
    static readonly UpdateArmTemplates = "update-arm-templates";
    static readonly ExecuteUserTask = "execute-user-task";
    static readonly LocalDebug = "local-debug";
    static readonly PostLocalDebug = "post-local-debug";
    static readonly SaveEnvFile = "frontend-save-env-file";
    static readonly LoadEnvFile = "frontend-load-env-file";
}
export declare class TelemetryKey {
    static readonly Component = "component";
    static readonly Success = "success";
    static readonly ErrorType = "error-type";
    static readonly ErrorMessage = "error-message";
    static readonly ErrorCode = "error-code";
    static readonly AppId = "appid";
}
export declare class TelemetryValue {
    static readonly Success = "yes";
    static readonly Fail = "no";
    static readonly UserError = "user";
    static readonly SystemError = "system";
}
export declare class RegularExpr {
    static readonly AllCharToBeSkippedInName: RegExp;
    static readonly FrontendStorageNamePattern: RegExp;
    static readonly ReplaceTemplateExt: RegExp;
}
//# sourceMappingURL=constants.d.ts.map