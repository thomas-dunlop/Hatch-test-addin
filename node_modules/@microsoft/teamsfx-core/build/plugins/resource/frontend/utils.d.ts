/// <reference types="node" />
import { AxiosResponse } from "axios";
import fs from "fs-extra";
export declare class Utils {
    static delays(millisecond: number): Promise<void>;
    static normalize(raw: string): string;
    static capitalizeFirstLetter([first, ...rest]: Iterable<string>): string;
    static generateStorageAccountName(appName: string, identSuffix: string, classSuffix: string): string;
    static requestWithRetry(request: () => Promise<AxiosResponse<any>>, maxTryCount?: number): Promise<AxiosResponse<any> | undefined>;
    static execute(command: string, workingDir?: string, env?: NodeJS.ProcessEnv): Promise<string>;
    static listFilePaths(directoryPath: string, matchPattern?: string, ignorePattern?: string): Promise<string[]>;
    static forEachFileAndDir(root: string, callback: (itemPath: string, stats: fs.Stats) => boolean | void, filter?: (itemPath: string) => boolean): Promise<void>;
    static isKvPairEqual<T>(kv1: {
        [key: string]: T;
    }, kv2: {
        [key: string]: T;
    }): boolean;
}
//# sourceMappingURL=utils.d.ts.map