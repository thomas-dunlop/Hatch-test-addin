"use strict";
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT license.
Object.defineProperty(exports, "__esModule", { value: true });
exports.UploadToStorageError = exports.ClearStorageError = exports.GetContainerError = exports.BuildError = exports.NpmInstallError = exports.EnableStaticWebsiteError = exports.UnauthenticatedError = void 0;
const tslib_1 = require("tslib");
const teamsfx_api_1 = require("@microsoft/teamsfx-api");
const constants_1 = require("../constants");
const errors_1 = require("../resources/errors");
const path = tslib_1.__importStar(require("path"));
const localizeUtils_1 = require("../../../../common/localizeUtils");
class UnauthenticatedError extends teamsfx_api_1.UserError {
    constructor() {
        super(constants_1.FrontendPluginInfo.ShortName, new.target.name, localizeUtils_1.getDefaultString("plugins.baseErrorMessage", localizeUtils_1.getDefaultString("error.frontend.UnauthenticatedError"), errors_1.tips.doLogin), localizeUtils_1.getLocalizedString("plugins.baseErrorMessage", localizeUtils_1.getLocalizedString("error.frontend.UnauthenticatedError"), errors_1.tips.doLogin));
    }
}
exports.UnauthenticatedError = UnauthenticatedError;
class EnableStaticWebsiteError extends teamsfx_api_1.UserError {
    constructor() {
        super({
            message: localizeUtils_1.getDefaultString("plugins.baseErrorMessage", localizeUtils_1.getDefaultString("error.frontend.EnableStaticWebsiteError"), [errors_1.tips.checkSystemTime, errors_1.tips.checkStoragePermissions].join(" ")),
            displayMessage: localizeUtils_1.getLocalizedString("plugins.baseErrorMessage", localizeUtils_1.getLocalizedString("error.frontend.EnableStaticWebsiteError"), [errors_1.tips.checkSystemTime, errors_1.tips.checkStoragePermissions].join(" ")),
            source: constants_1.FrontendPluginInfo.ShortName,
            helpLink: constants_1.FrontendPluginInfo.HelpLink,
        });
    }
}
exports.EnableStaticWebsiteError = EnableStaticWebsiteError;
class NpmInstallError extends teamsfx_api_1.UserError {
    constructor() {
        super(constants_1.FrontendPluginInfo.ShortName, new.target.name, localizeUtils_1.getDefaultString("plugins.baseErrorMessage", localizeUtils_1.getDefaultString("error.frontend.NpmInstallError"), [errors_1.tips.doNpmInstall, errors_1.tips.checkLog].join(" ")), localizeUtils_1.getLocalizedString("plugins.baseErrorMessage", localizeUtils_1.getLocalizedString("error.frontend.NpmInstallError"), [errors_1.tips.doNpmInstall, errors_1.tips.checkLog].join(" ")));
    }
}
exports.NpmInstallError = NpmInstallError;
class BuildError extends teamsfx_api_1.UserError {
    constructor() {
        super(constants_1.FrontendPluginInfo.ShortName, new.target.name, localizeUtils_1.getDefaultString("plugins.baseErrorMessage", localizeUtils_1.getDefaultString("error.frontend.BuildError"), [errors_1.tips.doBuild, errors_1.tips.checkLog].join(" ")), localizeUtils_1.getLocalizedString("plugins.baseErrorMessage", localizeUtils_1.getLocalizedString("error.frontend.BuildError"), [errors_1.tips.doBuild, errors_1.tips.checkLog].join(" ")));
    }
}
exports.BuildError = BuildError;
class GetContainerError extends teamsfx_api_1.UserError {
    constructor() {
        super(constants_1.FrontendPluginInfo.ShortName, new.target.name, localizeUtils_1.getDefaultString("plugins.baseErrorMessage", localizeUtils_1.getDefaultString("error.frontend.GetContainerError", constants_1.Constants.AzureStorageWebContainer), [errors_1.tips.checkSystemTime, errors_1.tips.checkStoragePermissions, errors_1.tips.checkNetwork].join(" ")), localizeUtils_1.getLocalizedString("plugins.baseErrorMessage", localizeUtils_1.getLocalizedString("error.frontend.GetContainerError", constants_1.Constants.AzureStorageWebContainer), [errors_1.tips.checkSystemTime, errors_1.tips.checkStoragePermissions, errors_1.tips.checkNetwork].join(" ")));
    }
}
exports.GetContainerError = GetContainerError;
class ClearStorageError extends teamsfx_api_1.UserError {
    constructor() {
        super(constants_1.FrontendPluginInfo.ShortName, new.target.name, localizeUtils_1.getDefaultString("plugins.baseErrorMessage", localizeUtils_1.getDefaultString("error.frontend.ClearStorageError"), [errors_1.tips.checkSystemTime, errors_1.tips.checkNetwork].join(" ")), localizeUtils_1.getLocalizedString("plugins.baseErrorMessage", localizeUtils_1.getLocalizedString("error.frontend.ClearStorageError"), [errors_1.tips.checkSystemTime, errors_1.tips.checkNetwork].join(" ")));
    }
}
exports.ClearStorageError = ClearStorageError;
class UploadToStorageError extends teamsfx_api_1.UserError {
    constructor() {
        super(constants_1.FrontendPluginInfo.ShortName, new.target.name, localizeUtils_1.getDefaultString("plugins.baseErrorMessage", path.join(constants_1.FrontendPathInfo.WorkingDir, constants_1.FrontendPathInfo.BuildPath), [errors_1.tips.checkSystemTime, errors_1.tips.checkNetwork].join(" ")), localizeUtils_1.getLocalizedString("plugins.baseErrorMessage", path.join(constants_1.FrontendPathInfo.WorkingDir, constants_1.FrontendPathInfo.BuildPath), [errors_1.tips.checkSystemTime, errors_1.tips.checkNetwork].join(" ")));
    }
}
exports.UploadToStorageError = UploadToStorageError;
//# sourceMappingURL=error.js.map