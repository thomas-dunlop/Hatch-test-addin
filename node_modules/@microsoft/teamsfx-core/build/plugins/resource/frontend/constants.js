"use strict";
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT license.
Object.defineProperty(exports, "__esModule", { value: true });
exports.RegularExpr = exports.TelemetryValue = exports.TelemetryKey = exports.TelemetryEvent = exports.FrontendOutputBicepSnippet = exports.FrontendConfigInfo = exports.DependentPluginInfo = exports.FrontendPathInfo = exports.Commands = exports.FrontendPluginInfo = exports.Constants = void 0;
const tslib_1 = require("tslib");
const path_1 = tslib_1.__importDefault(require("path"));
class Constants {
}
exports.Constants = Constants;
Constants.AzureStorageDefaultTier = "Standard";
Constants.AzureStorageDefaultSku = "Standard_LRS";
Constants.AzureStorageDefaultKind = "StorageV2";
Constants.AzureStorageAccountNameLenMax = 24;
Constants.AzureStorageWebContainer = "$web";
Constants.SuffixLenMax = 12;
Constants.FrontendIndexDocument = "index.html";
Constants.FrontendErrorDocument = "index.html";
Constants.FrontendSuffix = "fe";
Constants.FrontendIndexPath = `/${Constants.FrontendIndexDocument}#`;
Constants.EmptyString = "";
Constants.DayInMS = 1000 * 60 * 60 * 24;
Constants.SasTokenLifetimePadding = Constants.DayInMS;
Constants.SasTokenLifetime = Constants.DayInMS * 3;
Constants.RequestTryCounts = 3;
Constants.RequestTimeoutInMS = 20 * 1000;
Constants.ScaffoldTryCounts = 1;
class FrontendPluginInfo {
}
exports.FrontendPluginInfo = FrontendPluginInfo;
FrontendPluginInfo.PluginName = "fx-resource-frontend-hosting";
FrontendPluginInfo.DisplayName = "Tab Frontend";
FrontendPluginInfo.ShortName = "FE";
FrontendPluginInfo.IssueLink = "https://github.com/OfficeDev/TeamsFx/issues/new";
FrontendPluginInfo.HelpLink = "https://aka.ms/teamsfx-fe-help";
class Commands {
}
exports.Commands = Commands;
Commands.DefaultInstallNodePackages = "npm install";
Commands.InstallNodePackages = "npm run install:teamsfx";
Commands.DefaultBuildFrontend = "npm run build";
Commands.BuildFrontend = "npm run build:teamsfx";
class FrontendPathInfo {
}
exports.FrontendPathInfo = FrontendPathInfo;
FrontendPathInfo.WorkingDir = "tabs";
FrontendPathInfo.TemplateRelativeDir = path_1.default.join("plugins", "resource", "frontend");
FrontendPathInfo.BicepTemplateRelativeDir = path_1.default.join(FrontendPathInfo.TemplateRelativeDir, "bicep");
FrontendPathInfo.TemplateFileExt = ".tpl";
FrontendPathInfo.TemplatePackageExt = ".zip";
FrontendPathInfo.ModuleProvisionFileName = "frontendHostingProvision.bicep";
FrontendPathInfo.BuildFolderName = "build";
FrontendPathInfo.BuildPath = `${FrontendPathInfo.BuildFolderName}${path_1.default.sep}`;
FrontendPathInfo.TabEnvironmentFilePath = ".env";
FrontendPathInfo.NodePackageFolderName = "node_modules";
FrontendPathInfo.NodePackageFile = "package.json";
FrontendPathInfo.TabDeploymentFolderName = ".deployment";
FrontendPathInfo.TabDeploymentInfoFileName = "deployment.json";
FrontendPathInfo.TabDeployIgnoreFolder = [
    FrontendPathInfo.BuildFolderName,
    FrontendPathInfo.NodePackageFolderName,
    FrontendPathInfo.TabDeploymentFolderName,
];
class DependentPluginInfo {
}
exports.DependentPluginInfo = DependentPluginInfo;
DependentPluginInfo.SolutionPluginName = "solution";
DependentPluginInfo.SubscriptionId = "subscriptionId";
DependentPluginInfo.ResourceGroupName = "resourceGroupName";
DependentPluginInfo.ResourceNameSuffix = "resourceNameSuffix";
DependentPluginInfo.Location = "location";
DependentPluginInfo.ProgrammingLanguage = "programmingLanguage";
DependentPluginInfo.RemoteTeamsAppId = "remoteTeamsAppId";
DependentPluginInfo.FunctionPluginName = "fx-resource-function";
DependentPluginInfo.FunctionEndpoint = "functionEndpoint";
DependentPluginInfo.RuntimePluginName = "fx-resource-simple-auth";
DependentPluginInfo.RuntimeEndpoint = "endpoint";
DependentPluginInfo.StartLoginPageURL = "auth-start.html";
DependentPluginInfo.AADPluginName = "fx-resource-aad-app-for-teams";
DependentPluginInfo.ClientID = "clientId";
DependentPluginInfo.LocalDebugPluginName = "fx-resource-local-debug";
DependentPluginInfo.LocalTabEndpoint = "localTabEndpoint";
class FrontendConfigInfo {
}
exports.FrontendConfigInfo = FrontendConfigInfo;
FrontendConfigInfo.StorageName = "storageName"; // TODO: Remove this storageName config when arm-disabled scenario removed
FrontendConfigInfo.StorageResourceId = "storageResourceId";
FrontendConfigInfo.Endpoint = "endpoint";
FrontendConfigInfo.Domain = "domain";
class FrontendOutputBicepSnippet {
}
exports.FrontendOutputBicepSnippet = FrontendOutputBicepSnippet;
FrontendOutputBicepSnippet.Domain = "provisionOutputs.frontendHostingOutput.value.domain";
FrontendOutputBicepSnippet.Endpoint = "provisionOutputs.frontendHostingOutput.value.endpoint";
class TelemetryEvent {
}
exports.TelemetryEvent = TelemetryEvent;
TelemetryEvent.StartSuffix = "-start";
TelemetryEvent.Scaffold = "scaffold";
TelemetryEvent.ScaffoldFallback = "scaffold-fallback";
TelemetryEvent.PreProvision = "pre-provision";
TelemetryEvent.Provision = "provision";
TelemetryEvent.PostProvision = "post-provision";
TelemetryEvent.PreDeploy = "pre-deploy";
TelemetryEvent.Deploy = "deploy";
TelemetryEvent.SkipDeploy = "skip-deploy";
TelemetryEvent.DeploymentInfoNotFound = "deployment-info-not-found";
TelemetryEvent.InstallScriptNotFound = "install-script-not-found";
TelemetryEvent.GenerateArmTemplates = "generate-arm-templates";
TelemetryEvent.UpdateArmTemplates = "update-arm-templates";
TelemetryEvent.ExecuteUserTask = "execute-user-task";
TelemetryEvent.LocalDebug = "local-debug";
TelemetryEvent.PostLocalDebug = "post-local-debug";
TelemetryEvent.SaveEnvFile = "frontend-save-env-file";
TelemetryEvent.LoadEnvFile = "frontend-load-env-file";
class TelemetryKey {
}
exports.TelemetryKey = TelemetryKey;
TelemetryKey.Component = "component";
TelemetryKey.Success = "success";
TelemetryKey.ErrorType = "error-type";
TelemetryKey.ErrorMessage = "error-message";
TelemetryKey.ErrorCode = "error-code";
TelemetryKey.AppId = "appid";
class TelemetryValue {
}
exports.TelemetryValue = TelemetryValue;
TelemetryValue.Success = "yes";
TelemetryValue.Fail = "no";
TelemetryValue.UserError = "user";
TelemetryValue.SystemError = "system";
class RegularExpr {
}
exports.RegularExpr = RegularExpr;
RegularExpr.AllCharToBeSkippedInName = /[^a-zA-Z0-9]/g;
RegularExpr.FrontendStorageNamePattern = /^[a-z0-9]{3,24}$/;
RegularExpr.ReplaceTemplateExt = /\.tpl$/;
//# sourceMappingURL=constants.js.map