import { PluginContext, FxError, Result, Stage, QTreeNode } from "@microsoft/teamsfx-api";
import { SqlConfig } from "./config";
import { SqlClient } from "./sqlClient";
import { ManagementClient } from "./managementClient";
export declare class SqlPluginImpl {
    config: SqlConfig;
    loadConfig(ctx: PluginContext): Promise<void>;
    getQuestions(stage: Stage, ctx: PluginContext): Promise<Result<QTreeNode | undefined, FxError>>;
    preProvision(ctx: PluginContext): Promise<Result<any, FxError>>;
    postProvision(ctx: PluginContext): Promise<Result<any, FxError>>;
    updateArmTemplates(ctx: PluginContext): Promise<Result<any, FxError>>;
    addDatabaseUser(ctx: PluginContext, sqlClient: SqlClient, managementClient: ManagementClient): Promise<void>;
    generateArmTemplates(ctx: PluginContext): Promise<Result<any, FxError>>;
    generateNewDatabaseBicepSnippet(ctx: PluginContext): Promise<Result<any, FxError>>;
    private setPasswordContext;
    private buildQuestionNode;
    private AddFireWallRules;
    private CheckAndSetAadAdmin;
    private getIdentity;
    private loadSkipAddingUser;
    private checkSqlExisting;
    askInputs(ctx: PluginContext): Promise<void>;
    private parseLoginToken;
    private loadConfigResourceGroup;
    private loadConfigSubscription;
    private loadConfigSql;
    private loadDatabases;
    private removeDatabases;
}
//# sourceMappingURL=plugin.d.ts.map