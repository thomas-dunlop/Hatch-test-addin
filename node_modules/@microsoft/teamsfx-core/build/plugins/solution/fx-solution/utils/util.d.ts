import { SolutionContext, PluginContext, FxError, TelemetryReporter, v3, Result } from "@microsoft/teamsfx-api";
import { TokenCredentialsBase } from "@azure/ms-rest-nodeauth";
/**
 * A helper function to construct a plugin's context.
 * @param solutionCtx solution context
 * @param pluginIdentifier plugin name
 */
export declare function getPluginContext(solutionCtx: SolutionContext, pluginIdentifier: string): PluginContext;
/**
 * A curry-ed version of getPluginContext
 * @param solutionCtx solution context
 */
export declare function getPluginContextConstructor(solutionCtx: SolutionContext): (pluginIdentifier: string) => PluginContext;
export declare function getSubsriptionDisplayName(azureToken: TokenCredentialsBase, subscriptionId: string): Promise<string | undefined>;
export declare function sendErrorTelemetryThenReturnError(eventName: string, error: FxError, reporter?: TelemetryReporter, properties?: {
    [p: string]: string;
}, measurements?: {
    [p: string]: number;
}, errorProps?: string[]): FxError;
export declare function hasBotServiceCreated(envInfo: v3.EnvInfoV3): boolean;
export declare function handleConfigFilesWhenSwitchAccount(envInfo: v3.EnvInfoV3, appName: string, projectPath: string, hasSwitchedM365Tenant: boolean, hasSwitchedSubscription: boolean, hasBotServiceCreatedBefore: boolean): Promise<Result<undefined, FxError>>;
//# sourceMappingURL=util.d.ts.map