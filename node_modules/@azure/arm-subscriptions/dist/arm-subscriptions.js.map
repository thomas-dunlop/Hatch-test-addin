{"version":3,"file":"arm-subscriptions.js","sources":["../node_modules/tslib/tslib.es6.js","../src/models/index.ts","../src/models/mappers.ts","../src/models/subscriptionsMappers.ts","../src/models/parameters.ts","../src/operations/subscriptions.ts","../src/models/tenantsMappers.ts","../src/operations/tenants.ts","../src/models/subscriptionOperationsMappers.ts","../src/operations/subscriptionOperations.ts","../src/models/operationsMappers.ts","../src/operations/operations.ts","../src/models/aliasMappers.ts","../src/operations/alias.ts","../src/subscriptionClientContext.ts","../src/subscriptionClient.ts"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __createBinding(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { BaseResource, CloudError, AzureServiceClientOptions } from \"@azure/ms-rest-azure-js\";\nimport * as msRest from \"@azure/ms-rest-js\";\n\nexport { BaseResource, CloudError };\n\n/**\n * Location information.\n */\nexport interface Location {\n  /**\n   * The fully qualified ID of the location. For example,\n   * /subscriptions/00000000-0000-0000-0000-000000000000/locations/westus.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly id?: string;\n  /**\n   * The subscription ID.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly subscriptionId?: string;\n  /**\n   * The location name.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly name?: string;\n  /**\n   * The display name of the location.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly displayName?: string;\n  /**\n   * The latitude of the location.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly latitude?: string;\n  /**\n   * The longitude of the location.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly longitude?: string;\n}\n\n/**\n * Subscription policies.\n */\nexport interface SubscriptionPolicies {\n  /**\n   * The subscription location placement ID. The ID indicates which regions are visible for a\n   * subscription. For example, a subscription with a location placement Id of Public_2014-09-01\n   * has access to Azure public regions.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly locationPlacementId?: string;\n  /**\n   * The subscription quota ID.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly quotaId?: string;\n  /**\n   * The subscription spending limit. Possible values include: 'On', 'Off', 'CurrentPeriodOff'\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly spendingLimit?: SpendingLimit;\n}\n\n/**\n * Subscription information.\n */\nexport interface Subscription {\n  /**\n   * The fully qualified ID for the subscription. For example,\n   * /subscriptions/00000000-0000-0000-0000-000000000000.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly id?: string;\n  /**\n   * The subscription ID.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly subscriptionId?: string;\n  /**\n   * The subscription display name.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly displayName?: string;\n  /**\n   * The subscription state. Possible values are Enabled, Warned, PastDue, Disabled, and Deleted.\n   * Possible values include: 'Enabled', 'Warned', 'PastDue', 'Disabled', 'Deleted'\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly state?: SubscriptionState;\n  /**\n   * The subscription policies.\n   */\n  subscriptionPolicies?: SubscriptionPolicies;\n  /**\n   * The authorization source of the request. Valid values are one or more combinations of Legacy,\n   * RoleBased, Bypassed, Direct and Management. For example, 'Legacy, RoleBased'.\n   */\n  authorizationSource?: string;\n}\n\n/**\n * Tenant Id information.\n */\nexport interface TenantIdDescription {\n  /**\n   * The fully qualified ID of the tenant. For example,\n   * /tenants/00000000-0000-0000-0000-000000000000.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly id?: string;\n  /**\n   * The tenant ID. For example, 00000000-0000-0000-0000-000000000000.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly tenantId?: string;\n}\n\n/**\n * Describes the format of Error response.\n */\nexport interface ErrorResponse {\n  /**\n   * Error code\n   */\n  code?: string;\n  /**\n   * Error message indicating why the operation failed.\n   */\n  message?: string;\n}\n\n/**\n * Error response indicates that the service is not able to process the incoming request. The\n * reason is provided in the error message.\n */\nexport interface ErrorResponseBody {\n  /**\n   * The details of the error.\n   */\n  error?: ErrorResponse;\n}\n\n/**\n * The ID of the canceled subscription\n */\nexport interface CanceledSubscriptionId {\n  /**\n   * The ID of the canceled subscription\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly value?: string;\n}\n\n/**\n * The ID of the subscriptions that is being renamed\n */\nexport interface RenamedSubscriptionId {\n  /**\n   * The ID of the subscriptions that is being renamed\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly value?: string;\n}\n\n/**\n * The ID of the subscriptions that is being enabled\n */\nexport interface EnabledSubscriptionId {\n  /**\n   * The ID of the subscriptions that is being enabled\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly value?: string;\n}\n\n/**\n * The new name of the subscription.\n */\nexport interface SubscriptionName {\n  /**\n   * New subscription name\n   */\n  subscriptionName?: string;\n}\n\n/**\n * The object that represents the operation.\n */\nexport interface OperationDisplay {\n  /**\n   * Service provider: Microsoft.Subscription\n   */\n  provider?: string;\n  /**\n   * Resource on which the operation is performed: Profile, endpoint, etc.\n   */\n  resource?: string;\n  /**\n   * Operation type: Read, write, delete, etc.\n   */\n  operation?: string;\n}\n\n/**\n * REST API operation\n */\nexport interface Operation {\n  /**\n   * Operation name: {provider}/{resource}/{operation}\n   */\n  name?: string;\n  /**\n   * The object that represents the operation.\n   */\n  display?: OperationDisplay;\n}\n\n/**\n * Result of the request to list operations. It contains a list of operations and a URL link to get\n * the next set of results.\n */\nexport interface OperationListResult {\n  /**\n   * List of operations.\n   */\n  value?: Operation[];\n  /**\n   * URL to get the next set of operation list results if there are any.\n   */\n  nextLink?: string;\n}\n\n/**\n * Put subscription properties.\n */\nexport interface PutAliasRequestProperties {\n  /**\n   * The friendly name of the subscription.\n   */\n  displayName?: string;\n  /**\n   * The workload type of the subscription. It can be either Production or DevTest. Possible values\n   * include: 'Production', 'DevTest'\n   */\n  workload?: Workload;\n  /**\n   * Determines whether subscription is fieldLed, partnerLed or LegacyEA\n   */\n  billingScope?: string;\n  /**\n   * This parameter can be used to create alias for existing subscription Id\n   */\n  subscriptionId?: string;\n  /**\n   * Reseller ID, basically MPN Id\n   */\n  resellerId?: string;\n}\n\n/**\n * The parameters required to create a new subscription.\n */\nexport interface PutAliasRequest {\n  /**\n   * Put alias request properties.\n   */\n  properties: PutAliasRequestProperties;\n}\n\n/**\n * Put subscription creation result properties.\n */\nexport interface PutAliasResponseProperties {\n  /**\n   * Newly created subscription Id.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly subscriptionId?: string;\n  /**\n   * The provisioning state of the resource. Possible values include: 'Accepted', 'Succeeded',\n   * 'Failed'\n   */\n  provisioningState?: ProvisioningState;\n}\n\n/**\n * Subscription Information with the alias.\n */\nexport interface PutAliasResponse extends BaseResource {\n  /**\n   * Fully qualified ID for the alias resource.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly id?: string;\n  /**\n   * Alias ID.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly name?: string;\n  /**\n   * Resource type, Microsoft.Subscription/aliases.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly type?: string;\n  /**\n   * Put Alias response properties.\n   */\n  properties?: PutAliasResponseProperties;\n}\n\n/**\n * The list of aliases.\n */\nexport interface PutAliasListResult {\n  /**\n   * The list of alias.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly value?: PutAliasResponse[];\n  /**\n   * The link (url) to the next page of results.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly nextLink?: string;\n}\n\n/**\n * An interface representing SubscriptionClientOptions.\n */\nexport interface SubscriptionClientOptions extends AzureServiceClientOptions {\n  baseUri?: string;\n}\n\n/**\n * @interface\n * Location list operation response.\n * @extends Array<Location>\n */\nexport interface LocationListResult extends Array<Location> {\n}\n\n/**\n * @interface\n * Subscription list operation response.\n * @extends Array<Subscription>\n */\nexport interface SubscriptionListResult extends Array<Subscription> {\n  /**\n   * The URL to get the next set of results.\n   */\n  nextLink: string;\n}\n\n/**\n * @interface\n * Tenant Ids information.\n * @extends Array<TenantIdDescription>\n */\nexport interface TenantListResult extends Array<TenantIdDescription> {\n  /**\n   * The URL to use for getting the next set of results.\n   */\n  nextLink: string;\n}\n\n/**\n * Defines values for SubscriptionState.\n * Possible values include: 'Enabled', 'Warned', 'PastDue', 'Disabled', 'Deleted'\n * @readonly\n * @enum {string}\n */\nexport type SubscriptionState = 'Enabled' | 'Warned' | 'PastDue' | 'Disabled' | 'Deleted';\n\n/**\n * Defines values for SpendingLimit.\n * Possible values include: 'On', 'Off', 'CurrentPeriodOff'\n * @readonly\n * @enum {string}\n */\nexport type SpendingLimit = 'On' | 'Off' | 'CurrentPeriodOff';\n\n/**\n * Defines values for Workload.\n * Possible values include: 'Production', 'DevTest'\n * @readonly\n * @enum {string}\n */\nexport type Workload = 'Production' | 'DevTest';\n\n/**\n * Defines values for ProvisioningState.\n * Possible values include: 'Accepted', 'Succeeded', 'Failed'\n * @readonly\n * @enum {string}\n */\nexport type ProvisioningState = 'Accepted' | 'Succeeded' | 'Failed';\n\n/**\n * Contains response data for the listLocations operation.\n */\nexport type SubscriptionsListLocationsResponse = LocationListResult & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: LocationListResult;\n    };\n};\n\n/**\n * Contains response data for the get operation.\n */\nexport type SubscriptionsGetResponse = Subscription & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: Subscription;\n    };\n};\n\n/**\n * Contains response data for the list operation.\n */\nexport type SubscriptionsListResponse = SubscriptionListResult & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: SubscriptionListResult;\n    };\n};\n\n/**\n * Contains response data for the listNext operation.\n */\nexport type SubscriptionsListNextResponse = SubscriptionListResult & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: SubscriptionListResult;\n    };\n};\n\n/**\n * Contains response data for the list operation.\n */\nexport type TenantsListResponse = TenantListResult & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: TenantListResult;\n    };\n};\n\n/**\n * Contains response data for the listNext operation.\n */\nexport type TenantsListNextResponse = TenantListResult & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: TenantListResult;\n    };\n};\n\n/**\n * Contains response data for the cancel operation.\n */\nexport type SubscriptionCancelResponse = CanceledSubscriptionId & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: CanceledSubscriptionId;\n    };\n};\n\n/**\n * Contains response data for the rename operation.\n */\nexport type SubscriptionRenameResponse = RenamedSubscriptionId & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: RenamedSubscriptionId;\n    };\n};\n\n/**\n * Contains response data for the enable operation.\n */\nexport type SubscriptionEnableResponse = EnabledSubscriptionId & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: EnabledSubscriptionId;\n    };\n};\n\n/**\n * Contains response data for the list operation.\n */\nexport type OperationsListResponse = OperationListResult & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: OperationListResult;\n    };\n};\n\n/**\n * Contains response data for the create operation.\n */\nexport type AliasCreateResponse = PutAliasResponse & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: PutAliasResponse;\n    };\n};\n\n/**\n * Contains response data for the get operation.\n */\nexport type AliasGetResponse = PutAliasResponse & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: PutAliasResponse;\n    };\n};\n\n/**\n * Contains response data for the list operation.\n */\nexport type AliasListResponse = PutAliasListResult & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: PutAliasListResult;\n    };\n};\n\n/**\n * Contains response data for the beginCreate operation.\n */\nexport type AliasBeginCreateResponse = PutAliasResponse & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: PutAliasResponse;\n    };\n};\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { CloudErrorMapper, BaseResourceMapper } from \"@azure/ms-rest-azure-js\";\nimport * as msRest from \"@azure/ms-rest-js\";\n\nexport const CloudError = CloudErrorMapper;\nexport const BaseResource = BaseResourceMapper;\n\nexport const Location: msRest.CompositeMapper = {\n  serializedName: \"Location\",\n  type: {\n    name: \"Composite\",\n    className: \"Location\",\n    modelProperties: {\n      id: {\n        readOnly: true,\n        serializedName: \"id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      subscriptionId: {\n        readOnly: true,\n        serializedName: \"subscriptionId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      name: {\n        readOnly: true,\n        serializedName: \"name\",\n        type: {\n          name: \"String\"\n        }\n      },\n      displayName: {\n        readOnly: true,\n        serializedName: \"displayName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      latitude: {\n        readOnly: true,\n        serializedName: \"latitude\",\n        type: {\n          name: \"String\"\n        }\n      },\n      longitude: {\n        readOnly: true,\n        serializedName: \"longitude\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const SubscriptionPolicies: msRest.CompositeMapper = {\n  serializedName: \"SubscriptionPolicies\",\n  type: {\n    name: \"Composite\",\n    className: \"SubscriptionPolicies\",\n    modelProperties: {\n      locationPlacementId: {\n        readOnly: true,\n        serializedName: \"locationPlacementId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      quotaId: {\n        readOnly: true,\n        serializedName: \"quotaId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      spendingLimit: {\n        readOnly: true,\n        serializedName: \"spendingLimit\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\n            \"On\",\n            \"Off\",\n            \"CurrentPeriodOff\"\n          ]\n        }\n      }\n    }\n  }\n};\n\nexport const Subscription: msRest.CompositeMapper = {\n  serializedName: \"Subscription\",\n  type: {\n    name: \"Composite\",\n    className: \"Subscription\",\n    modelProperties: {\n      id: {\n        readOnly: true,\n        serializedName: \"id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      subscriptionId: {\n        readOnly: true,\n        serializedName: \"subscriptionId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      displayName: {\n        readOnly: true,\n        serializedName: \"displayName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      state: {\n        readOnly: true,\n        serializedName: \"state\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\n            \"Enabled\",\n            \"Warned\",\n            \"PastDue\",\n            \"Disabled\",\n            \"Deleted\"\n          ]\n        }\n      },\n      subscriptionPolicies: {\n        serializedName: \"subscriptionPolicies\",\n        type: {\n          name: \"Composite\",\n          className: \"SubscriptionPolicies\"\n        }\n      },\n      authorizationSource: {\n        serializedName: \"authorizationSource\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const TenantIdDescription: msRest.CompositeMapper = {\n  serializedName: \"TenantIdDescription\",\n  type: {\n    name: \"Composite\",\n    className: \"TenantIdDescription\",\n    modelProperties: {\n      id: {\n        readOnly: true,\n        serializedName: \"id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      tenantId: {\n        readOnly: true,\n        serializedName: \"tenantId\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ErrorResponse: msRest.CompositeMapper = {\n  serializedName: \"ErrorResponse\",\n  type: {\n    name: \"Composite\",\n    className: \"ErrorResponse\",\n    modelProperties: {\n      code: {\n        serializedName: \"code\",\n        type: {\n          name: \"String\"\n        }\n      },\n      message: {\n        serializedName: \"message\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ErrorResponseBody: msRest.CompositeMapper = {\n  serializedName: \"ErrorResponseBody\",\n  type: {\n    name: \"Composite\",\n    className: \"ErrorResponseBody\",\n    modelProperties: {\n      error: {\n        serializedName: \"error\",\n        type: {\n          name: \"Composite\",\n          className: \"ErrorResponse\"\n        }\n      }\n    }\n  }\n};\n\nexport const CanceledSubscriptionId: msRest.CompositeMapper = {\n  serializedName: \"CanceledSubscriptionId\",\n  type: {\n    name: \"Composite\",\n    className: \"CanceledSubscriptionId\",\n    modelProperties: {\n      value: {\n        readOnly: true,\n        serializedName: \"value\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const RenamedSubscriptionId: msRest.CompositeMapper = {\n  serializedName: \"RenamedSubscriptionId\",\n  type: {\n    name: \"Composite\",\n    className: \"RenamedSubscriptionId\",\n    modelProperties: {\n      value: {\n        readOnly: true,\n        serializedName: \"value\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const EnabledSubscriptionId: msRest.CompositeMapper = {\n  serializedName: \"EnabledSubscriptionId\",\n  type: {\n    name: \"Composite\",\n    className: \"EnabledSubscriptionId\",\n    modelProperties: {\n      value: {\n        readOnly: true,\n        serializedName: \"value\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const SubscriptionName: msRest.CompositeMapper = {\n  serializedName: \"SubscriptionName\",\n  type: {\n    name: \"Composite\",\n    className: \"SubscriptionName\",\n    modelProperties: {\n      subscriptionName: {\n        serializedName: \"subscriptionName\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const OperationDisplay: msRest.CompositeMapper = {\n  serializedName: \"Operation_display\",\n  type: {\n    name: \"Composite\",\n    className: \"OperationDisplay\",\n    modelProperties: {\n      provider: {\n        serializedName: \"provider\",\n        type: {\n          name: \"String\"\n        }\n      },\n      resource: {\n        serializedName: \"resource\",\n        type: {\n          name: \"String\"\n        }\n      },\n      operation: {\n        serializedName: \"operation\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const Operation: msRest.CompositeMapper = {\n  serializedName: \"Operation\",\n  type: {\n    name: \"Composite\",\n    className: \"Operation\",\n    modelProperties: {\n      name: {\n        serializedName: \"name\",\n        type: {\n          name: \"String\"\n        }\n      },\n      display: {\n        serializedName: \"display\",\n        type: {\n          name: \"Composite\",\n          className: \"OperationDisplay\"\n        }\n      }\n    }\n  }\n};\n\nexport const OperationListResult: msRest.CompositeMapper = {\n  serializedName: \"OperationListResult\",\n  type: {\n    name: \"Composite\",\n    className: \"OperationListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"Operation\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const PutAliasRequestProperties: msRest.CompositeMapper = {\n  serializedName: \"PutAliasRequestProperties\",\n  type: {\n    name: \"Composite\",\n    className: \"PutAliasRequestProperties\",\n    modelProperties: {\n      displayName: {\n        serializedName: \"displayName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      workload: {\n        serializedName: \"workload\",\n        type: {\n          name: \"String\"\n        }\n      },\n      billingScope: {\n        serializedName: \"billingScope\",\n        type: {\n          name: \"String\"\n        }\n      },\n      subscriptionId: {\n        serializedName: \"subscriptionId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      resellerId: {\n        serializedName: \"resellerId\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const PutAliasRequest: msRest.CompositeMapper = {\n  serializedName: \"PutAliasRequest\",\n  type: {\n    name: \"Composite\",\n    className: \"PutAliasRequest\",\n    modelProperties: {\n      properties: {\n        required: true,\n        serializedName: \"properties\",\n        type: {\n          name: \"Composite\",\n          className: \"PutAliasRequestProperties\"\n        }\n      }\n    }\n  }\n};\n\nexport const PutAliasResponseProperties: msRest.CompositeMapper = {\n  serializedName: \"PutAliasResponseProperties\",\n  type: {\n    name: \"Composite\",\n    className: \"PutAliasResponseProperties\",\n    modelProperties: {\n      subscriptionId: {\n        readOnly: true,\n        serializedName: \"subscriptionId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      provisioningState: {\n        serializedName: \"provisioningState\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const PutAliasResponse: msRest.CompositeMapper = {\n  serializedName: \"PutAliasResponse\",\n  type: {\n    name: \"Composite\",\n    className: \"PutAliasResponse\",\n    modelProperties: {\n      id: {\n        readOnly: true,\n        serializedName: \"id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      name: {\n        readOnly: true,\n        serializedName: \"name\",\n        type: {\n          name: \"String\"\n        }\n      },\n      type: {\n        readOnly: true,\n        serializedName: \"type\",\n        type: {\n          name: \"String\"\n        }\n      },\n      properties: {\n        serializedName: \"properties\",\n        type: {\n          name: \"Composite\",\n          className: \"PutAliasResponseProperties\"\n        }\n      }\n    }\n  }\n};\n\nexport const PutAliasListResult: msRest.CompositeMapper = {\n  serializedName: \"PutAliasListResult\",\n  type: {\n    name: \"Composite\",\n    className: \"PutAliasListResult\",\n    modelProperties: {\n      value: {\n        readOnly: true,\n        serializedName: \"value\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"PutAliasResponse\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        readOnly: true,\n        serializedName: \"nextLink\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const LocationListResult: msRest.CompositeMapper = {\n  serializedName: \"LocationListResult\",\n  type: {\n    name: \"Composite\",\n    className: \"LocationListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"Location\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const SubscriptionListResult: msRest.CompositeMapper = {\n  serializedName: \"SubscriptionListResult\",\n  type: {\n    name: \"Composite\",\n    className: \"SubscriptionListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"Subscription\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        required: true,\n        serializedName: \"nextLink\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const TenantListResult: msRest.CompositeMapper = {\n  serializedName: \"TenantListResult\",\n  type: {\n    name: \"Composite\",\n    className: \"TenantListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"TenantIdDescription\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        required: true,\n        serializedName: \"nextLink\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nexport {\n  CloudError,\n  Location,\n  LocationListResult,\n  Subscription,\n  SubscriptionListResult,\n  SubscriptionPolicies\n} from \"../models/mappers\";\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for\n * license information.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is\n * regenerated.\n */\n\nimport * as msRest from \"@azure/ms-rest-js\";\n\nexport const acceptLanguage: msRest.OperationParameter = {\n  parameterPath: \"acceptLanguage\",\n  mapper: {\n    serializedName: \"accept-language\",\n    defaultValue: 'en-US',\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const aliasName: msRest.OperationURLParameter = {\n  parameterPath: \"aliasName\",\n  mapper: {\n    required: true,\n    serializedName: \"aliasName\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const apiVersion0: msRest.OperationQueryParameter = {\n  parameterPath: \"apiVersion\",\n  mapper: {\n    required: true,\n    isConstant: true,\n    serializedName: \"api-version\",\n    defaultValue: '2016-06-01',\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const apiVersion1: msRest.OperationQueryParameter = {\n  parameterPath: \"apiVersion\",\n  mapper: {\n    required: true,\n    isConstant: true,\n    serializedName: \"api-version\",\n    defaultValue: '2020-09-01',\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const nextPageLink: msRest.OperationURLParameter = {\n  parameterPath: \"nextPageLink\",\n  mapper: {\n    required: true,\n    serializedName: \"nextLink\",\n    type: {\n      name: \"String\"\n    }\n  },\n  skipEncoding: true\n};\nexport const subscriptionId: msRest.OperationURLParameter = {\n  parameterPath: \"subscriptionId\",\n  mapper: {\n    required: true,\n    serializedName: \"subscriptionId\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for\n * license information.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is\n * regenerated.\n */\n\nimport * as msRest from \"@azure/ms-rest-js\";\nimport * as Models from \"../models\";\nimport * as Mappers from \"../models/subscriptionsMappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { SubscriptionClientContext } from \"../subscriptionClientContext\";\n\n/** Class representing a Subscriptions. */\nexport class Subscriptions {\n  private readonly client: SubscriptionClientContext;\n\n  /**\n   * Create a Subscriptions.\n   * @param {SubscriptionClientContext} client Reference to the service client.\n   */\n  constructor(client: SubscriptionClientContext) {\n    this.client = client;\n  }\n\n  /**\n   * This operation provides all the locations that are available for resource providers; however,\n   * each resource provider may support a subset of this list.\n   * @summary Gets all available geo-locations.\n   * @param subscriptionId The ID of the target subscription.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.SubscriptionsListLocationsResponse>\n   */\n  listLocations(subscriptionId: string, options?: msRest.RequestOptionsBase): Promise<Models.SubscriptionsListLocationsResponse>;\n  /**\n   * @param subscriptionId The ID of the target subscription.\n   * @param callback The callback\n   */\n  listLocations(subscriptionId: string, callback: msRest.ServiceCallback<Models.LocationListResult>): void;\n  /**\n   * @param subscriptionId The ID of the target subscription.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  listLocations(subscriptionId: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.LocationListResult>): void;\n  listLocations(subscriptionId: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.LocationListResult>, callback?: msRest.ServiceCallback<Models.LocationListResult>): Promise<Models.SubscriptionsListLocationsResponse> {\n    return this.client.sendOperationRequest(\n      {\n        subscriptionId,\n        options\n      },\n      listLocationsOperationSpec,\n      callback) as Promise<Models.SubscriptionsListLocationsResponse>;\n  }\n\n  /**\n   * Gets details about a specified subscription.\n   * @param subscriptionId The ID of the target subscription.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.SubscriptionsGetResponse>\n   */\n  get(subscriptionId: string, options?: msRest.RequestOptionsBase): Promise<Models.SubscriptionsGetResponse>;\n  /**\n   * @param subscriptionId The ID of the target subscription.\n   * @param callback The callback\n   */\n  get(subscriptionId: string, callback: msRest.ServiceCallback<Models.Subscription>): void;\n  /**\n   * @param subscriptionId The ID of the target subscription.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  get(subscriptionId: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.Subscription>): void;\n  get(subscriptionId: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.Subscription>, callback?: msRest.ServiceCallback<Models.Subscription>): Promise<Models.SubscriptionsGetResponse> {\n    return this.client.sendOperationRequest(\n      {\n        subscriptionId,\n        options\n      },\n      getOperationSpec,\n      callback) as Promise<Models.SubscriptionsGetResponse>;\n  }\n\n  /**\n   * Gets all subscriptions for a tenant.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.SubscriptionsListResponse>\n   */\n  list(options?: msRest.RequestOptionsBase): Promise<Models.SubscriptionsListResponse>;\n  /**\n   * @param callback The callback\n   */\n  list(callback: msRest.ServiceCallback<Models.SubscriptionListResult>): void;\n  /**\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  list(options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.SubscriptionListResult>): void;\n  list(options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.SubscriptionListResult>, callback?: msRest.ServiceCallback<Models.SubscriptionListResult>): Promise<Models.SubscriptionsListResponse> {\n    return this.client.sendOperationRequest(\n      {\n        options\n      },\n      listOperationSpec,\n      callback) as Promise<Models.SubscriptionsListResponse>;\n  }\n\n  /**\n   * Gets all subscriptions for a tenant.\n   * @param nextPageLink The NextLink from the previous successful call to List operation.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.SubscriptionsListNextResponse>\n   */\n  listNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.SubscriptionsListNextResponse>;\n  /**\n   * @param nextPageLink The NextLink from the previous successful call to List operation.\n   * @param callback The callback\n   */\n  listNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.SubscriptionListResult>): void;\n  /**\n   * @param nextPageLink The NextLink from the previous successful call to List operation.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  listNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.SubscriptionListResult>): void;\n  listNext(nextPageLink: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.SubscriptionListResult>, callback?: msRest.ServiceCallback<Models.SubscriptionListResult>): Promise<Models.SubscriptionsListNextResponse> {\n    return this.client.sendOperationRequest(\n      {\n        nextPageLink,\n        options\n      },\n      listNextOperationSpec,\n      callback) as Promise<Models.SubscriptionsListNextResponse>;\n  }\n}\n\n// Operation Specifications\nconst serializer = new msRest.Serializer(Mappers);\nconst listLocationsOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"GET\",\n  path: \"subscriptions/{subscriptionId}/locations\",\n  urlParameters: [\n    Parameters.subscriptionId\n  ],\n  queryParameters: [\n    Parameters.apiVersion0\n  ],\n  headerParameters: [\n    Parameters.acceptLanguage\n  ],\n  responses: {\n    200: {\n      bodyMapper: Mappers.LocationListResult\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  serializer\n};\n\nconst getOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"GET\",\n  path: \"subscriptions/{subscriptionId}\",\n  urlParameters: [\n    Parameters.subscriptionId\n  ],\n  queryParameters: [\n    Parameters.apiVersion0\n  ],\n  headerParameters: [\n    Parameters.acceptLanguage\n  ],\n  responses: {\n    200: {\n      bodyMapper: Mappers.Subscription\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  serializer\n};\n\nconst listOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"GET\",\n  path: \"subscriptions\",\n  queryParameters: [\n    Parameters.apiVersion0\n  ],\n  headerParameters: [\n    Parameters.acceptLanguage\n  ],\n  responses: {\n    200: {\n      bodyMapper: Mappers.SubscriptionListResult\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  serializer\n};\n\nconst listNextOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"GET\",\n  baseUrl: \"https://management.azure.com\",\n  path: \"{nextLink}\",\n  urlParameters: [\n    Parameters.nextPageLink\n  ],\n  headerParameters: [\n    Parameters.acceptLanguage\n  ],\n  responses: {\n    200: {\n      bodyMapper: Mappers.SubscriptionListResult\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nexport {\n  CloudError,\n  TenantIdDescription,\n  TenantListResult\n} from \"../models/mappers\";\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for\n * license information.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is\n * regenerated.\n */\n\nimport * as msRest from \"@azure/ms-rest-js\";\nimport * as Models from \"../models\";\nimport * as Mappers from \"../models/tenantsMappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { SubscriptionClientContext } from \"../subscriptionClientContext\";\n\n/** Class representing a Tenants. */\nexport class Tenants {\n  private readonly client: SubscriptionClientContext;\n\n  /**\n   * Create a Tenants.\n   * @param {SubscriptionClientContext} client Reference to the service client.\n   */\n  constructor(client: SubscriptionClientContext) {\n    this.client = client;\n  }\n\n  /**\n   * Gets the tenants for your account.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.TenantsListResponse>\n   */\n  list(options?: msRest.RequestOptionsBase): Promise<Models.TenantsListResponse>;\n  /**\n   * @param callback The callback\n   */\n  list(callback: msRest.ServiceCallback<Models.TenantListResult>): void;\n  /**\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  list(options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.TenantListResult>): void;\n  list(options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.TenantListResult>, callback?: msRest.ServiceCallback<Models.TenantListResult>): Promise<Models.TenantsListResponse> {\n    return this.client.sendOperationRequest(\n      {\n        options\n      },\n      listOperationSpec,\n      callback) as Promise<Models.TenantsListResponse>;\n  }\n\n  /**\n   * Gets the tenants for your account.\n   * @param nextPageLink The NextLink from the previous successful call to List operation.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.TenantsListNextResponse>\n   */\n  listNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.TenantsListNextResponse>;\n  /**\n   * @param nextPageLink The NextLink from the previous successful call to List operation.\n   * @param callback The callback\n   */\n  listNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.TenantListResult>): void;\n  /**\n   * @param nextPageLink The NextLink from the previous successful call to List operation.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  listNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.TenantListResult>): void;\n  listNext(nextPageLink: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.TenantListResult>, callback?: msRest.ServiceCallback<Models.TenantListResult>): Promise<Models.TenantsListNextResponse> {\n    return this.client.sendOperationRequest(\n      {\n        nextPageLink,\n        options\n      },\n      listNextOperationSpec,\n      callback) as Promise<Models.TenantsListNextResponse>;\n  }\n}\n\n// Operation Specifications\nconst serializer = new msRest.Serializer(Mappers);\nconst listOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"GET\",\n  path: \"tenants\",\n  queryParameters: [\n    Parameters.apiVersion0\n  ],\n  headerParameters: [\n    Parameters.acceptLanguage\n  ],\n  responses: {\n    200: {\n      bodyMapper: Mappers.TenantListResult\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  serializer\n};\n\nconst listNextOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"GET\",\n  baseUrl: \"https://management.azure.com\",\n  path: \"{nextLink}\",\n  urlParameters: [\n    Parameters.nextPageLink\n  ],\n  headerParameters: [\n    Parameters.acceptLanguage\n  ],\n  responses: {\n    200: {\n      bodyMapper: Mappers.TenantListResult\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nexport {\n  CanceledSubscriptionId,\n  EnabledSubscriptionId,\n  ErrorResponse,\n  RenamedSubscriptionId,\n  SubscriptionName\n} from \"../models/mappers\";\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for\n * license information.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is\n * regenerated.\n */\n\nimport * as msRest from \"@azure/ms-rest-js\";\nimport * as Models from \"../models\";\nimport * as Mappers from \"../models/subscriptionOperationsMappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { SubscriptionClientContext } from \"../subscriptionClientContext\";\n\n/** Class representing a SubscriptionOperations. */\nexport class SubscriptionOperations {\n  private readonly client: SubscriptionClientContext;\n\n  /**\n   * Create a SubscriptionOperations.\n   * @param {SubscriptionClientContext} client Reference to the service client.\n   */\n  constructor(client: SubscriptionClientContext) {\n    this.client = client;\n  }\n\n  /**\n   * The operation to cancel a subscription\n   * @param subscriptionId Subscription Id.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.SubscriptionCancelResponse>\n   */\n  cancel(subscriptionId: string, options?: msRest.RequestOptionsBase): Promise<Models.SubscriptionCancelResponse>;\n  /**\n   * @param subscriptionId Subscription Id.\n   * @param callback The callback\n   */\n  cancel(subscriptionId: string, callback: msRest.ServiceCallback<Models.CanceledSubscriptionId>): void;\n  /**\n   * @param subscriptionId Subscription Id.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  cancel(subscriptionId: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.CanceledSubscriptionId>): void;\n  cancel(subscriptionId: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.CanceledSubscriptionId>, callback?: msRest.ServiceCallback<Models.CanceledSubscriptionId>): Promise<Models.SubscriptionCancelResponse> {\n    return this.client.sendOperationRequest(\n      {\n        subscriptionId,\n        options\n      },\n      cancelOperationSpec,\n      callback) as Promise<Models.SubscriptionCancelResponse>;\n  }\n\n  /**\n   * The operation to rename a subscription\n   * @param subscriptionId Subscription Id.\n   * @param body Subscription Name\n   * @param [options] The optional parameters\n   * @returns Promise<Models.SubscriptionRenameResponse>\n   */\n  rename(subscriptionId: string, body: Models.SubscriptionName, options?: msRest.RequestOptionsBase): Promise<Models.SubscriptionRenameResponse>;\n  /**\n   * @param subscriptionId Subscription Id.\n   * @param body Subscription Name\n   * @param callback The callback\n   */\n  rename(subscriptionId: string, body: Models.SubscriptionName, callback: msRest.ServiceCallback<Models.RenamedSubscriptionId>): void;\n  /**\n   * @param subscriptionId Subscription Id.\n   * @param body Subscription Name\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  rename(subscriptionId: string, body: Models.SubscriptionName, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.RenamedSubscriptionId>): void;\n  rename(subscriptionId: string, body: Models.SubscriptionName, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.RenamedSubscriptionId>, callback?: msRest.ServiceCallback<Models.RenamedSubscriptionId>): Promise<Models.SubscriptionRenameResponse> {\n    return this.client.sendOperationRequest(\n      {\n        subscriptionId,\n        body,\n        options\n      },\n      renameOperationSpec,\n      callback) as Promise<Models.SubscriptionRenameResponse>;\n  }\n\n  /**\n   * The operation to enable a subscription\n   * @param subscriptionId Subscription Id.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.SubscriptionEnableResponse>\n   */\n  enable(subscriptionId: string, options?: msRest.RequestOptionsBase): Promise<Models.SubscriptionEnableResponse>;\n  /**\n   * @param subscriptionId Subscription Id.\n   * @param callback The callback\n   */\n  enable(subscriptionId: string, callback: msRest.ServiceCallback<Models.EnabledSubscriptionId>): void;\n  /**\n   * @param subscriptionId Subscription Id.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  enable(subscriptionId: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.EnabledSubscriptionId>): void;\n  enable(subscriptionId: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.EnabledSubscriptionId>, callback?: msRest.ServiceCallback<Models.EnabledSubscriptionId>): Promise<Models.SubscriptionEnableResponse> {\n    return this.client.sendOperationRequest(\n      {\n        subscriptionId,\n        options\n      },\n      enableOperationSpec,\n      callback) as Promise<Models.SubscriptionEnableResponse>;\n  }\n}\n\n// Operation Specifications\nconst serializer = new msRest.Serializer(Mappers);\nconst cancelOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"POST\",\n  path: \"subscriptions/{subscriptionId}/providers/Microsoft.Subscription/cancel\",\n  urlParameters: [\n    Parameters.subscriptionId\n  ],\n  queryParameters: [\n    Parameters.apiVersion1\n  ],\n  headerParameters: [\n    Parameters.acceptLanguage\n  ],\n  responses: {\n    200: {\n      bodyMapper: Mappers.CanceledSubscriptionId\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  serializer\n};\n\nconst renameOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"POST\",\n  path: \"subscriptions/{subscriptionId}/providers/Microsoft.Subscription/rename\",\n  urlParameters: [\n    Parameters.subscriptionId\n  ],\n  queryParameters: [\n    Parameters.apiVersion1\n  ],\n  headerParameters: [\n    Parameters.acceptLanguage\n  ],\n  requestBody: {\n    parameterPath: \"body\",\n    mapper: {\n      ...Mappers.SubscriptionName,\n      required: true\n    }\n  },\n  responses: {\n    200: {\n      bodyMapper: Mappers.RenamedSubscriptionId\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  serializer\n};\n\nconst enableOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"POST\",\n  path: \"subscriptions/{subscriptionId}/providers/Microsoft.Subscription/enable\",\n  urlParameters: [\n    Parameters.subscriptionId\n  ],\n  queryParameters: [\n    Parameters.apiVersion1\n  ],\n  headerParameters: [\n    Parameters.acceptLanguage\n  ],\n  responses: {\n    200: {\n      bodyMapper: Mappers.EnabledSubscriptionId\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nexport {\n  ErrorResponse,\n  Operation,\n  OperationDisplay,\n  OperationListResult\n} from \"../models/mappers\";\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for\n * license information.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is\n * regenerated.\n */\n\nimport * as msRest from \"@azure/ms-rest-js\";\nimport * as Models from \"../models\";\nimport * as Mappers from \"../models/operationsMappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { SubscriptionClientContext } from \"../subscriptionClientContext\";\n\n/** Class representing a Operations. */\nexport class Operations {\n  private readonly client: SubscriptionClientContext;\n\n  /**\n   * Create a Operations.\n   * @param {SubscriptionClientContext} client Reference to the service client.\n   */\n  constructor(client: SubscriptionClientContext) {\n    this.client = client;\n  }\n\n  /**\n   * Lists all of the available Microsoft.Subscription API operations.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.OperationsListResponse>\n   */\n  list(options?: msRest.RequestOptionsBase): Promise<Models.OperationsListResponse>;\n  /**\n   * @param callback The callback\n   */\n  list(callback: msRest.ServiceCallback<Models.OperationListResult>): void;\n  /**\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  list(options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.OperationListResult>): void;\n  list(options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.OperationListResult>, callback?: msRest.ServiceCallback<Models.OperationListResult>): Promise<Models.OperationsListResponse> {\n    return this.client.sendOperationRequest(\n      {\n        options\n      },\n      listOperationSpec,\n      callback) as Promise<Models.OperationsListResponse>;\n  }\n}\n\n// Operation Specifications\nconst serializer = new msRest.Serializer(Mappers);\nconst listOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"GET\",\n  path: \"providers/Microsoft.Subscription/operations\",\n  queryParameters: [\n    Parameters.apiVersion1\n  ],\n  headerParameters: [\n    Parameters.acceptLanguage\n  ],\n  responses: {\n    200: {\n      bodyMapper: Mappers.OperationListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nexport {\n  BaseResource,\n  ErrorResponse,\n  ErrorResponseBody,\n  PutAliasListResult,\n  PutAliasRequest,\n  PutAliasRequestProperties,\n  PutAliasResponse,\n  PutAliasResponseProperties\n} from \"../models/mappers\";\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for\n * license information.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is\n * regenerated.\n */\n\nimport * as msRest from \"@azure/ms-rest-js\";\nimport * as msRestAzure from \"@azure/ms-rest-azure-js\";\nimport * as Models from \"../models\";\nimport * as Mappers from \"../models/aliasMappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { SubscriptionClientContext } from \"../subscriptionClientContext\";\n\n/** Class representing a Alias. */\nexport class Alias {\n  private readonly client: SubscriptionClientContext;\n\n  /**\n   * Create a Alias.\n   * @param {SubscriptionClientContext} client Reference to the service client.\n   */\n  constructor(client: SubscriptionClientContext) {\n    this.client = client;\n  }\n\n  /**\n   * Create Alias Subscription.\n   * @param aliasName Alias Name\n   * @param body\n   * @param [options] The optional parameters\n   * @returns Promise<Models.AliasCreateResponse>\n   */\n  create(aliasName: string, body: Models.PutAliasRequest, options?: msRest.RequestOptionsBase): Promise<Models.AliasCreateResponse> {\n    return this.beginCreate(aliasName,body,options)\n      .then(lroPoller => lroPoller.pollUntilFinished()) as Promise<Models.AliasCreateResponse>;\n  }\n\n  /**\n   * Get Alias Subscription.\n   * @param aliasName Alias Name\n   * @param [options] The optional parameters\n   * @returns Promise<Models.AliasGetResponse>\n   */\n  get(aliasName: string, options?: msRest.RequestOptionsBase): Promise<Models.AliasGetResponse>;\n  /**\n   * @param aliasName Alias Name\n   * @param callback The callback\n   */\n  get(aliasName: string, callback: msRest.ServiceCallback<Models.PutAliasResponse>): void;\n  /**\n   * @param aliasName Alias Name\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  get(aliasName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.PutAliasResponse>): void;\n  get(aliasName: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.PutAliasResponse>, callback?: msRest.ServiceCallback<Models.PutAliasResponse>): Promise<Models.AliasGetResponse> {\n    return this.client.sendOperationRequest(\n      {\n        aliasName,\n        options\n      },\n      getOperationSpec,\n      callback) as Promise<Models.AliasGetResponse>;\n  }\n\n  /**\n   * Delete Alias.\n   * @param aliasName Alias Name\n   * @param [options] The optional parameters\n   * @returns Promise<msRest.RestResponse>\n   */\n  deleteMethod(aliasName: string, options?: msRest.RequestOptionsBase): Promise<msRest.RestResponse>;\n  /**\n   * @param aliasName Alias Name\n   * @param callback The callback\n   */\n  deleteMethod(aliasName: string, callback: msRest.ServiceCallback<void>): void;\n  /**\n   * @param aliasName Alias Name\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  deleteMethod(aliasName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<void>): void;\n  deleteMethod(aliasName: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<void>, callback?: msRest.ServiceCallback<void>): Promise<msRest.RestResponse> {\n    return this.client.sendOperationRequest(\n      {\n        aliasName,\n        options\n      },\n      deleteMethodOperationSpec,\n      callback);\n  }\n\n  /**\n   * Get Alias Subscription.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.AliasListResponse>\n   */\n  list(options?: msRest.RequestOptionsBase): Promise<Models.AliasListResponse>;\n  /**\n   * @param callback The callback\n   */\n  list(callback: msRest.ServiceCallback<Models.PutAliasListResult>): void;\n  /**\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  list(options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.PutAliasListResult>): void;\n  list(options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.PutAliasListResult>, callback?: msRest.ServiceCallback<Models.PutAliasListResult>): Promise<Models.AliasListResponse> {\n    return this.client.sendOperationRequest(\n      {\n        options\n      },\n      listOperationSpec,\n      callback) as Promise<Models.AliasListResponse>;\n  }\n\n  /**\n   * Create Alias Subscription.\n   * @param aliasName Alias Name\n   * @param body\n   * @param [options] The optional parameters\n   * @returns Promise<msRestAzure.LROPoller>\n   */\n  beginCreate(aliasName: string, body: Models.PutAliasRequest, options?: msRest.RequestOptionsBase): Promise<msRestAzure.LROPoller> {\n    return this.client.sendLRORequest(\n      {\n        aliasName,\n        body,\n        options\n      },\n      beginCreateOperationSpec,\n      options);\n  }\n}\n\n// Operation Specifications\nconst serializer = new msRest.Serializer(Mappers);\nconst getOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"GET\",\n  path: \"providers/Microsoft.Subscription/aliases/{aliasName}\",\n  urlParameters: [\n    Parameters.aliasName\n  ],\n  queryParameters: [\n    Parameters.apiVersion1\n  ],\n  headerParameters: [\n    Parameters.acceptLanguage\n  ],\n  responses: {\n    200: {\n      bodyMapper: Mappers.PutAliasResponse\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponseBody\n    }\n  },\n  serializer\n};\n\nconst deleteMethodOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"DELETE\",\n  path: \"providers/Microsoft.Subscription/aliases/{aliasName}\",\n  urlParameters: [\n    Parameters.aliasName\n  ],\n  queryParameters: [\n    Parameters.apiVersion1\n  ],\n  headerParameters: [\n    Parameters.acceptLanguage\n  ],\n  responses: {\n    200: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.ErrorResponseBody\n    }\n  },\n  serializer\n};\n\nconst listOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"GET\",\n  path: \"providers/Microsoft.Subscription/aliases\",\n  queryParameters: [\n    Parameters.apiVersion1\n  ],\n  headerParameters: [\n    Parameters.acceptLanguage\n  ],\n  responses: {\n    200: {\n      bodyMapper: Mappers.PutAliasListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponseBody\n    }\n  },\n  serializer\n};\n\nconst beginCreateOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"PUT\",\n  path: \"providers/Microsoft.Subscription/aliases/{aliasName}\",\n  urlParameters: [\n    Parameters.aliasName\n  ],\n  queryParameters: [\n    Parameters.apiVersion1\n  ],\n  headerParameters: [\n    Parameters.acceptLanguage\n  ],\n  requestBody: {\n    parameterPath: \"body\",\n    mapper: {\n      ...Mappers.PutAliasRequest,\n      required: true\n    }\n  },\n  responses: {\n    200: {\n      bodyMapper: Mappers.PutAliasResponse\n    },\n    201: {\n      bodyMapper: Mappers.PutAliasResponse\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponseBody\n    }\n  },\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for\n * license information.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is\n * regenerated.\n */\n\nimport * as Models from \"./models\";\nimport * as msRest from \"@azure/ms-rest-js\";\nimport { TokenCredential } from \"@azure/core-auth\";\nimport * as msRestAzure from \"@azure/ms-rest-azure-js\";\n\nconst packageName = \"@azure/arm-subscriptions\";\nconst packageVersion = \"3.1.2\";\n\nexport class SubscriptionClientContext extends msRestAzure.AzureServiceClient {\n  credentials: msRest.ServiceClientCredentials | TokenCredential;\n\n  /**\n   * Initializes a new instance of the SubscriptionClient class.\n   * @param credentials Credentials needed for the client to connect to Azure. Credentials\n   * implementing the TokenCredential interface from the @azure/identity package are recommended. For\n   * more information about these credentials, see\n   * {@link https://www.npmjs.com/package/@azure/identity}. Credentials implementing the\n   * ServiceClientCredentials interface from the older packages @azure/ms-rest-nodeauth and\n   * @azure/ms-rest-browserauth are also supported.\n   * @param [options] The parameter options\n   */\n  constructor(credentials: msRest.ServiceClientCredentials | TokenCredential, options?: Models.SubscriptionClientOptions) {\n    if (credentials == undefined) {\n      throw new Error('\\'credentials\\' cannot be null.');\n    }\n\n    if (!options) {\n      options = {};\n    }\n    if (!options.userAgent) {\n      const defaultUserAgent = msRestAzure.getDefaultUserAgentValue();\n      options.userAgent = `${packageName}/${packageVersion} ${defaultUserAgent}`;\n    }\n\n    super(credentials, options);\n\n    this.acceptLanguage = 'en-US';\n    this.longRunningOperationRetryTimeout = 30;\n    this.baseUri = options.baseUri || this.baseUri || \"https://management.azure.com\";\n    this.requestContentType = \"application/json; charset=utf-8\";\n    this.credentials = credentials;\n\n    if (options.acceptLanguage !== null && options.acceptLanguage !== undefined) {\n      this.acceptLanguage = options.acceptLanguage;\n    }\n    if (options.longRunningOperationRetryTimeout !== null && options.longRunningOperationRetryTimeout !== undefined) {\n      this.longRunningOperationRetryTimeout = options.longRunningOperationRetryTimeout;\n    }\n  }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for\n * license information.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is\n * regenerated.\n */\n\nimport * as msRest from \"@azure/ms-rest-js\";\nimport { TokenCredential } from \"@azure/core-auth\";\nimport * as Models from \"./models\";\nimport * as Mappers from \"./models/mappers\";\nimport * as operations from \"./operations\";\nimport { SubscriptionClientContext } from \"./subscriptionClientContext\";\n\n\nclass SubscriptionClient extends SubscriptionClientContext {\n  // Operation groups\n  subscriptions: operations.Subscriptions;\n  tenants: operations.Tenants;\n  subscription: operations.SubscriptionOperations;\n  operations: operations.Operations;\n  alias: operations.Alias;\n\n  /**\n   * Initializes a new instance of the SubscriptionClient class.\n   * @param credentials Credentials needed for the client to connect to Azure. Credentials\n   * implementing the TokenCredential interface from the @azure/identity package are recommended. For\n   * more information about these credentials, see\n   * {@link https://www.npmjs.com/package/@azure/identity}. Credentials implementing the\n   * ServiceClientCredentials interface from the older packages @azure/ms-rest-nodeauth and\n   * @azure/ms-rest-browserauth are also supported.\n   * @param [options] The parameter options\n   */\n  constructor(credentials: msRest.ServiceClientCredentials | TokenCredential, options?: Models.SubscriptionClientOptions) {\n    super(credentials, options);\n    this.subscriptions = new operations.Subscriptions(this);\n    this.tenants = new operations.Tenants(this);\n    this.subscription = new operations.SubscriptionOperations(this);\n    this.operations = new operations.Operations(this);\n    this.alias = new operations.Alias(this);\n  }\n}\n\n// Operation Specifications\n\nexport {\n  SubscriptionClient,\n  SubscriptionClientContext,\n  Models as SubscriptionModels,\n  Mappers as SubscriptionMappers\n};\nexport * from \"./operations\";\n"],"names":["CloudErrorMapper","BaseResourceMapper","msRest.Serializer","Parameters.subscriptionId","Parameters.apiVersion0","Parameters.acceptLanguage","Mappers.LocationListResult","Mappers.CloudError","Mappers.Subscription","Mappers.SubscriptionListResult","Parameters.nextPageLink","listOperationSpec","listNextOperationSpec","serializer","Mappers","Mappers.TenantListResult","Parameters.apiVersion1","Mappers.CanceledSubscriptionId","Mappers.ErrorResponse","Mappers.SubscriptionName","Mappers.RenamedSubscriptionId","Mappers.EnabledSubscriptionId","Mappers.OperationListResult","getOperationSpec","Parameters.aliasName","Mappers.PutAliasResponse","Mappers.ErrorResponseBody","Mappers.PutAliasListResult","Mappers.PutAliasRequest","msRestAzure.getDefaultUserAgentValue","msRestAzure.AzureServiceClient","operations.Subscriptions","operations.Tenants","operations.SubscriptionOperations","operations.Operations","operations.Alias"],"mappings":"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"}