/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */
import { __assign } from "tslib";
import * as msRest from "@azure/ms-rest-js";
import * as Mappers from "../models/staticSitesMappers";
import * as Parameters from "../models/parameters";
/** Class representing a StaticSites. */
var StaticSites = /** @class */ (function () {
    /**
     * Create a StaticSites.
     * @param {WebSiteManagementClientContext} client Reference to the service client.
     */
    function StaticSites(client) {
        this.client = client;
    }
    StaticSites.prototype.previewWorkflow = function (location, staticSitesWorkflowPreviewRequest, options, callback) {
        return this.client.sendOperationRequest({
            location: location,
            staticSitesWorkflowPreviewRequest: staticSitesWorkflowPreviewRequest,
            options: options
        }, previewWorkflowOperationSpec, callback);
    };
    StaticSites.prototype.list = function (options, callback) {
        return this.client.sendOperationRequest({
            options: options
        }, listOperationSpec, callback);
    };
    StaticSites.prototype.getStaticSitesByResourceGroup = function (resourceGroupName, options, callback) {
        return this.client.sendOperationRequest({
            resourceGroupName: resourceGroupName,
            options: options
        }, getStaticSitesByResourceGroupOperationSpec, callback);
    };
    StaticSites.prototype.getStaticSite = function (resourceGroupName, name, options, callback) {
        return this.client.sendOperationRequest({
            resourceGroupName: resourceGroupName,
            name: name,
            options: options
        }, getStaticSiteOperationSpec, callback);
    };
    StaticSites.prototype.createOrUpdateStaticSite = function (resourceGroupName, name, staticSiteEnvelope, options, callback) {
        return this.client.sendOperationRequest({
            resourceGroupName: resourceGroupName,
            name: name,
            staticSiteEnvelope: staticSiteEnvelope,
            options: options
        }, createOrUpdateStaticSiteOperationSpec, callback);
    };
    StaticSites.prototype.deleteStaticSite = function (resourceGroupName, name, options, callback) {
        return this.client.sendOperationRequest({
            resourceGroupName: resourceGroupName,
            name: name,
            options: options
        }, deleteStaticSiteOperationSpec, callback);
    };
    StaticSites.prototype.updateStaticSite = function (resourceGroupName, name, staticSiteEnvelope, options, callback) {
        return this.client.sendOperationRequest({
            resourceGroupName: resourceGroupName,
            name: name,
            staticSiteEnvelope: staticSiteEnvelope,
            options: options
        }, updateStaticSiteOperationSpec, callback);
    };
    StaticSites.prototype.listStaticSiteUsers = function (resourceGroupName, name, authprovider, options, callback) {
        return this.client.sendOperationRequest({
            resourceGroupName: resourceGroupName,
            name: name,
            authprovider: authprovider,
            options: options
        }, listStaticSiteUsersOperationSpec, callback);
    };
    StaticSites.prototype.deleteStaticSiteUser = function (resourceGroupName, name, authprovider, userid, options, callback) {
        return this.client.sendOperationRequest({
            resourceGroupName: resourceGroupName,
            name: name,
            authprovider: authprovider,
            userid: userid,
            options: options
        }, deleteStaticSiteUserOperationSpec, callback);
    };
    StaticSites.prototype.updateStaticSiteUser = function (resourceGroupName, name, authprovider, userid, staticSiteUserEnvelope, options, callback) {
        return this.client.sendOperationRequest({
            resourceGroupName: resourceGroupName,
            name: name,
            authprovider: authprovider,
            userid: userid,
            staticSiteUserEnvelope: staticSiteUserEnvelope,
            options: options
        }, updateStaticSiteUserOperationSpec, callback);
    };
    StaticSites.prototype.getStaticSiteBuilds = function (resourceGroupName, name, options, callback) {
        return this.client.sendOperationRequest({
            resourceGroupName: resourceGroupName,
            name: name,
            options: options
        }, getStaticSiteBuildsOperationSpec, callback);
    };
    StaticSites.prototype.getStaticSiteBuild = function (resourceGroupName, name, prId, options, callback) {
        return this.client.sendOperationRequest({
            resourceGroupName: resourceGroupName,
            name: name,
            prId: prId,
            options: options
        }, getStaticSiteBuildOperationSpec, callback);
    };
    StaticSites.prototype.deleteStaticSiteBuild = function (resourceGroupName, name, prId, options, callback) {
        return this.client.sendOperationRequest({
            resourceGroupName: resourceGroupName,
            name: name,
            prId: prId,
            options: options
        }, deleteStaticSiteBuildOperationSpec, callback);
    };
    StaticSites.prototype.createOrUpdateStaticSiteBuildFunctionAppSettings = function (resourceGroupName, name, prId, appSettings, options, callback) {
        return this.client.sendOperationRequest({
            resourceGroupName: resourceGroupName,
            name: name,
            prId: prId,
            appSettings: appSettings,
            options: options
        }, createOrUpdateStaticSiteBuildFunctionAppSettingsOperationSpec, callback);
    };
    StaticSites.prototype.listStaticSiteBuildFunctions = function (resourceGroupName, name, prId, options, callback) {
        return this.client.sendOperationRequest({
            resourceGroupName: resourceGroupName,
            name: name,
            prId: prId,
            options: options
        }, listStaticSiteBuildFunctionsOperationSpec, callback);
    };
    StaticSites.prototype.listStaticSiteBuildFunctionAppSettings = function (resourceGroupName, name, prId, options, callback) {
        return this.client.sendOperationRequest({
            resourceGroupName: resourceGroupName,
            name: name,
            prId: prId,
            options: options
        }, listStaticSiteBuildFunctionAppSettingsOperationSpec, callback);
    };
    StaticSites.prototype.createOrUpdateStaticSiteFunctionAppSettings = function (resourceGroupName, name, appSettings, options, callback) {
        return this.client.sendOperationRequest({
            resourceGroupName: resourceGroupName,
            name: name,
            appSettings: appSettings,
            options: options
        }, createOrUpdateStaticSiteFunctionAppSettingsOperationSpec, callback);
    };
    StaticSites.prototype.createUserRolesInvitationLink = function (resourceGroupName, name, staticSiteUserRolesInvitationEnvelope, options, callback) {
        return this.client.sendOperationRequest({
            resourceGroupName: resourceGroupName,
            name: name,
            staticSiteUserRolesInvitationEnvelope: staticSiteUserRolesInvitationEnvelope,
            options: options
        }, createUserRolesInvitationLinkOperationSpec, callback);
    };
    StaticSites.prototype.listStaticSiteCustomDomains = function (resourceGroupName, name, options, callback) {
        return this.client.sendOperationRequest({
            resourceGroupName: resourceGroupName,
            name: name,
            options: options
        }, listStaticSiteCustomDomainsOperationSpec, callback);
    };
    StaticSites.prototype.createOrUpdateStaticSiteCustomDomain = function (resourceGroupName, name, domainName, options, callback) {
        return this.client.sendOperationRequest({
            resourceGroupName: resourceGroupName,
            name: name,
            domainName: domainName,
            options: options
        }, createOrUpdateStaticSiteCustomDomainOperationSpec, callback);
    };
    StaticSites.prototype.deleteStaticSiteCustomDomain = function (resourceGroupName, name, domainName, options, callback) {
        return this.client.sendOperationRequest({
            resourceGroupName: resourceGroupName,
            name: name,
            domainName: domainName,
            options: options
        }, deleteStaticSiteCustomDomainOperationSpec, callback);
    };
    StaticSites.prototype.validateCustomDomainCanBeAddedToStaticSite = function (resourceGroupName, name, domainName, options, callback) {
        return this.client.sendOperationRequest({
            resourceGroupName: resourceGroupName,
            name: name,
            domainName: domainName,
            options: options
        }, validateCustomDomainCanBeAddedToStaticSiteOperationSpec, callback);
    };
    StaticSites.prototype.detachStaticSite = function (resourceGroupName, name, options, callback) {
        return this.client.sendOperationRequest({
            resourceGroupName: resourceGroupName,
            name: name,
            options: options
        }, detachStaticSiteOperationSpec, callback);
    };
    StaticSites.prototype.listStaticSiteFunctions = function (resourceGroupName, name, options, callback) {
        return this.client.sendOperationRequest({
            resourceGroupName: resourceGroupName,
            name: name,
            options: options
        }, listStaticSiteFunctionsOperationSpec, callback);
    };
    StaticSites.prototype.listStaticSiteFunctionAppSettings = function (resourceGroupName, name, options, callback) {
        return this.client.sendOperationRequest({
            resourceGroupName: resourceGroupName,
            name: name,
            options: options
        }, listStaticSiteFunctionAppSettingsOperationSpec, callback);
    };
    StaticSites.prototype.listStaticSiteSecrets = function (resourceGroupName, name, options, callback) {
        return this.client.sendOperationRequest({
            resourceGroupName: resourceGroupName,
            name: name,
            options: options
        }, listStaticSiteSecretsOperationSpec, callback);
    };
    StaticSites.prototype.resetStaticSiteApiKey = function (resourceGroupName, name, resetPropertiesEnvelope, options, callback) {
        return this.client.sendOperationRequest({
            resourceGroupName: resourceGroupName,
            name: name,
            resetPropertiesEnvelope: resetPropertiesEnvelope,
            options: options
        }, resetStaticSiteApiKeyOperationSpec, callback);
    };
    StaticSites.prototype.listNext = function (nextPageLink, options, callback) {
        return this.client.sendOperationRequest({
            nextPageLink: nextPageLink,
            options: options
        }, listNextOperationSpec, callback);
    };
    StaticSites.prototype.getStaticSitesByResourceGroupNext = function (nextPageLink, options, callback) {
        return this.client.sendOperationRequest({
            nextPageLink: nextPageLink,
            options: options
        }, getStaticSitesByResourceGroupNextOperationSpec, callback);
    };
    StaticSites.prototype.listStaticSiteUsersNext = function (nextPageLink, options, callback) {
        return this.client.sendOperationRequest({
            nextPageLink: nextPageLink,
            options: options
        }, listStaticSiteUsersNextOperationSpec, callback);
    };
    StaticSites.prototype.getStaticSiteBuildsNext = function (nextPageLink, options, callback) {
        return this.client.sendOperationRequest({
            nextPageLink: nextPageLink,
            options: options
        }, getStaticSiteBuildsNextOperationSpec, callback);
    };
    StaticSites.prototype.listStaticSiteBuildFunctionsNext = function (nextPageLink, options, callback) {
        return this.client.sendOperationRequest({
            nextPageLink: nextPageLink,
            options: options
        }, listStaticSiteBuildFunctionsNextOperationSpec, callback);
    };
    StaticSites.prototype.listStaticSiteCustomDomainsNext = function (nextPageLink, options, callback) {
        return this.client.sendOperationRequest({
            nextPageLink: nextPageLink,
            options: options
        }, listStaticSiteCustomDomainsNextOperationSpec, callback);
    };
    StaticSites.prototype.listStaticSiteFunctionsNext = function (nextPageLink, options, callback) {
        return this.client.sendOperationRequest({
            nextPageLink: nextPageLink,
            options: options
        }, listStaticSiteFunctionsNextOperationSpec, callback);
    };
    return StaticSites;
}());
export { StaticSites };
// Operation Specifications
var serializer = new msRest.Serializer(Mappers);
var previewWorkflowOperationSpec = {
    httpMethod: "POST",
    path: "subscriptions/{subscriptionId}/providers/Microsoft.Web/locations/{location}/previewStaticSiteWorkflowFile",
    urlParameters: [
        Parameters.location,
        Parameters.subscriptionId
    ],
    queryParameters: [
        Parameters.apiVersion
    ],
    headerParameters: [
        Parameters.acceptLanguage
    ],
    requestBody: {
        parameterPath: "staticSitesWorkflowPreviewRequest",
        mapper: __assign(__assign({}, Mappers.StaticSitesWorkflowPreviewRequest), { required: true })
    },
    responses: {
        200: {
            bodyMapper: Mappers.StaticSitesWorkflowPreview
        },
        default: {
            bodyMapper: Mappers.DefaultErrorResponse
        }
    },
    serializer: serializer
};
var listOperationSpec = {
    httpMethod: "GET",
    path: "subscriptions/{subscriptionId}/providers/Microsoft.Web/staticSites",
    urlParameters: [
        Parameters.subscriptionId
    ],
    queryParameters: [
        Parameters.apiVersion
    ],
    headerParameters: [
        Parameters.acceptLanguage
    ],
    responses: {
        200: {
            bodyMapper: Mappers.StaticSiteCollection
        },
        default: {
            bodyMapper: Mappers.DefaultErrorResponse
        }
    },
    serializer: serializer
};
var getStaticSitesByResourceGroupOperationSpec = {
    httpMethod: "GET",
    path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/staticSites",
    urlParameters: [
        Parameters.resourceGroupName,
        Parameters.subscriptionId
    ],
    queryParameters: [
        Parameters.apiVersion
    ],
    headerParameters: [
        Parameters.acceptLanguage
    ],
    responses: {
        200: {
            bodyMapper: Mappers.StaticSiteCollection
        },
        default: {
            bodyMapper: Mappers.DefaultErrorResponse
        }
    },
    serializer: serializer
};
var getStaticSiteOperationSpec = {
    httpMethod: "GET",
    path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/staticSites/{name}",
    urlParameters: [
        Parameters.resourceGroupName,
        Parameters.name,
        Parameters.subscriptionId
    ],
    queryParameters: [
        Parameters.apiVersion
    ],
    headerParameters: [
        Parameters.acceptLanguage
    ],
    responses: {
        200: {
            bodyMapper: Mappers.StaticSiteARMResource
        },
        default: {
            bodyMapper: Mappers.DefaultErrorResponse
        }
    },
    serializer: serializer
};
var createOrUpdateStaticSiteOperationSpec = {
    httpMethod: "PUT",
    path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/staticSites/{name}",
    urlParameters: [
        Parameters.resourceGroupName,
        Parameters.name,
        Parameters.subscriptionId
    ],
    queryParameters: [
        Parameters.apiVersion
    ],
    headerParameters: [
        Parameters.acceptLanguage
    ],
    requestBody: {
        parameterPath: "staticSiteEnvelope",
        mapper: __assign(__assign({}, Mappers.StaticSiteARMResource), { required: true })
    },
    responses: {
        200: {
            bodyMapper: Mappers.StaticSiteARMResource
        },
        202: {
            bodyMapper: Mappers.StaticSiteARMResource
        },
        default: {
            bodyMapper: Mappers.DefaultErrorResponse
        }
    },
    serializer: serializer
};
var deleteStaticSiteOperationSpec = {
    httpMethod: "DELETE",
    path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/staticSites/{name}",
    urlParameters: [
        Parameters.resourceGroupName,
        Parameters.name,
        Parameters.subscriptionId
    ],
    queryParameters: [
        Parameters.apiVersion
    ],
    headerParameters: [
        Parameters.acceptLanguage
    ],
    responses: {
        200: {},
        202: {},
        default: {
            bodyMapper: Mappers.DefaultErrorResponse
        }
    },
    serializer: serializer
};
var updateStaticSiteOperationSpec = {
    httpMethod: "PATCH",
    path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/staticSites/{name}",
    urlParameters: [
        Parameters.resourceGroupName,
        Parameters.name,
        Parameters.subscriptionId
    ],
    queryParameters: [
        Parameters.apiVersion
    ],
    headerParameters: [
        Parameters.acceptLanguage
    ],
    requestBody: {
        parameterPath: "staticSiteEnvelope",
        mapper: __assign(__assign({}, Mappers.StaticSitePatchResource), { required: true })
    },
    responses: {
        200: {
            bodyMapper: Mappers.StaticSiteARMResource
        },
        202: {
            bodyMapper: Mappers.StaticSiteARMResource
        },
        default: {
            bodyMapper: Mappers.DefaultErrorResponse
        }
    },
    serializer: serializer
};
var listStaticSiteUsersOperationSpec = {
    httpMethod: "POST",
    path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/staticSites/{name}/authproviders/{authprovider}/listUsers",
    urlParameters: [
        Parameters.resourceGroupName,
        Parameters.name,
        Parameters.authprovider,
        Parameters.subscriptionId
    ],
    queryParameters: [
        Parameters.apiVersion
    ],
    headerParameters: [
        Parameters.acceptLanguage
    ],
    responses: {
        200: {
            bodyMapper: Mappers.StaticSiteUserCollection
        },
        default: {
            bodyMapper: Mappers.DefaultErrorResponse
        }
    },
    serializer: serializer
};
var deleteStaticSiteUserOperationSpec = {
    httpMethod: "DELETE",
    path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/staticSites/{name}/authproviders/{authprovider}/users/{userid}",
    urlParameters: [
        Parameters.resourceGroupName,
        Parameters.name,
        Parameters.authprovider,
        Parameters.userid,
        Parameters.subscriptionId
    ],
    queryParameters: [
        Parameters.apiVersion
    ],
    headerParameters: [
        Parameters.acceptLanguage
    ],
    responses: {
        200: {},
        default: {
            bodyMapper: Mappers.DefaultErrorResponse
        }
    },
    serializer: serializer
};
var updateStaticSiteUserOperationSpec = {
    httpMethod: "PATCH",
    path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/staticSites/{name}/authproviders/{authprovider}/users/{userid}",
    urlParameters: [
        Parameters.resourceGroupName,
        Parameters.name,
        Parameters.authprovider,
        Parameters.userid,
        Parameters.subscriptionId
    ],
    queryParameters: [
        Parameters.apiVersion
    ],
    headerParameters: [
        Parameters.acceptLanguage
    ],
    requestBody: {
        parameterPath: "staticSiteUserEnvelope",
        mapper: __assign(__assign({}, Mappers.StaticSiteUserARMResource), { required: true })
    },
    responses: {
        200: {
            bodyMapper: Mappers.StaticSiteUserARMResource
        },
        default: {
            bodyMapper: Mappers.DefaultErrorResponse
        }
    },
    serializer: serializer
};
var getStaticSiteBuildsOperationSpec = {
    httpMethod: "GET",
    path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/staticSites/{name}/builds",
    urlParameters: [
        Parameters.resourceGroupName,
        Parameters.name,
        Parameters.subscriptionId
    ],
    queryParameters: [
        Parameters.apiVersion
    ],
    headerParameters: [
        Parameters.acceptLanguage
    ],
    responses: {
        200: {
            bodyMapper: Mappers.StaticSiteBuildCollection
        },
        default: {
            bodyMapper: Mappers.DefaultErrorResponse
        }
    },
    serializer: serializer
};
var getStaticSiteBuildOperationSpec = {
    httpMethod: "GET",
    path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/staticSites/{name}/builds/{prId}",
    urlParameters: [
        Parameters.resourceGroupName,
        Parameters.name,
        Parameters.prId,
        Parameters.subscriptionId
    ],
    queryParameters: [
        Parameters.apiVersion
    ],
    headerParameters: [
        Parameters.acceptLanguage
    ],
    responses: {
        200: {
            bodyMapper: Mappers.StaticSiteBuildARMResource
        },
        default: {
            bodyMapper: Mappers.DefaultErrorResponse
        }
    },
    serializer: serializer
};
var deleteStaticSiteBuildOperationSpec = {
    httpMethod: "DELETE",
    path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/staticSites/{name}/builds/{prId}",
    urlParameters: [
        Parameters.resourceGroupName,
        Parameters.name,
        Parameters.prId,
        Parameters.subscriptionId
    ],
    queryParameters: [
        Parameters.apiVersion
    ],
    headerParameters: [
        Parameters.acceptLanguage
    ],
    responses: {
        200: {},
        202: {},
        default: {
            bodyMapper: Mappers.DefaultErrorResponse
        }
    },
    serializer: serializer
};
var createOrUpdateStaticSiteBuildFunctionAppSettingsOperationSpec = {
    httpMethod: "PUT",
    path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/staticSites/{name}/builds/{prId}/config/functionappsettings",
    urlParameters: [
        Parameters.resourceGroupName,
        Parameters.name,
        Parameters.prId,
        Parameters.subscriptionId
    ],
    queryParameters: [
        Parameters.apiVersion
    ],
    headerParameters: [
        Parameters.acceptLanguage
    ],
    requestBody: {
        parameterPath: "appSettings",
        mapper: __assign(__assign({}, Mappers.StringDictionary), { required: true })
    },
    responses: {
        200: {
            bodyMapper: Mappers.StringDictionary
        },
        202: {
            bodyMapper: Mappers.StringDictionary
        },
        default: {
            bodyMapper: Mappers.DefaultErrorResponse
        }
    },
    serializer: serializer
};
var listStaticSiteBuildFunctionsOperationSpec = {
    httpMethod: "GET",
    path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/staticSites/{name}/builds/{prId}/functions",
    urlParameters: [
        Parameters.resourceGroupName,
        Parameters.name,
        Parameters.prId,
        Parameters.subscriptionId
    ],
    queryParameters: [
        Parameters.apiVersion
    ],
    headerParameters: [
        Parameters.acceptLanguage
    ],
    responses: {
        200: {
            bodyMapper: Mappers.StaticSiteFunctionOverviewCollection
        },
        default: {
            bodyMapper: Mappers.DefaultErrorResponse
        }
    },
    serializer: serializer
};
var listStaticSiteBuildFunctionAppSettingsOperationSpec = {
    httpMethod: "POST",
    path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/staticSites/{name}/builds/{prId}/listFunctionAppSettings",
    urlParameters: [
        Parameters.resourceGroupName,
        Parameters.name,
        Parameters.prId,
        Parameters.subscriptionId
    ],
    queryParameters: [
        Parameters.apiVersion
    ],
    headerParameters: [
        Parameters.acceptLanguage
    ],
    responses: {
        200: {
            bodyMapper: Mappers.StringDictionary
        },
        202: {
            bodyMapper: Mappers.StringDictionary
        },
        default: {
            bodyMapper: Mappers.DefaultErrorResponse
        }
    },
    serializer: serializer
};
var createOrUpdateStaticSiteFunctionAppSettingsOperationSpec = {
    httpMethod: "PUT",
    path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/staticSites/{name}/config/functionappsettings",
    urlParameters: [
        Parameters.resourceGroupName,
        Parameters.name,
        Parameters.subscriptionId
    ],
    queryParameters: [
        Parameters.apiVersion
    ],
    headerParameters: [
        Parameters.acceptLanguage
    ],
    requestBody: {
        parameterPath: "appSettings",
        mapper: __assign(__assign({}, Mappers.StringDictionary), { required: true })
    },
    responses: {
        200: {
            bodyMapper: Mappers.StringDictionary
        },
        202: {
            bodyMapper: Mappers.StringDictionary
        },
        default: {
            bodyMapper: Mappers.DefaultErrorResponse
        }
    },
    serializer: serializer
};
var createUserRolesInvitationLinkOperationSpec = {
    httpMethod: "POST",
    path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/staticSites/{name}/createUserInvitation",
    urlParameters: [
        Parameters.resourceGroupName,
        Parameters.name,
        Parameters.subscriptionId
    ],
    queryParameters: [
        Parameters.apiVersion
    ],
    headerParameters: [
        Parameters.acceptLanguage
    ],
    requestBody: {
        parameterPath: "staticSiteUserRolesInvitationEnvelope",
        mapper: __assign(__assign({}, Mappers.StaticSiteUserInvitationRequestResource), { required: true })
    },
    responses: {
        200: {
            bodyMapper: Mappers.StaticSiteUserInvitationResponseResource
        },
        default: {
            bodyMapper: Mappers.DefaultErrorResponse
        }
    },
    serializer: serializer
};
var listStaticSiteCustomDomainsOperationSpec = {
    httpMethod: "GET",
    path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/staticSites/{name}/customDomains",
    urlParameters: [
        Parameters.resourceGroupName,
        Parameters.name,
        Parameters.subscriptionId
    ],
    queryParameters: [
        Parameters.apiVersion
    ],
    headerParameters: [
        Parameters.acceptLanguage
    ],
    responses: {
        200: {
            bodyMapper: Mappers.StaticSiteCustomDomainOverviewCollection
        },
        default: {
            bodyMapper: Mappers.DefaultErrorResponse
        }
    },
    serializer: serializer
};
var createOrUpdateStaticSiteCustomDomainOperationSpec = {
    httpMethod: "PUT",
    path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/staticSites/{name}/customDomains/{domainName}",
    urlParameters: [
        Parameters.resourceGroupName,
        Parameters.name,
        Parameters.domainName0,
        Parameters.subscriptionId
    ],
    queryParameters: [
        Parameters.apiVersion
    ],
    headerParameters: [
        Parameters.acceptLanguage
    ],
    responses: {
        200: {
            bodyMapper: Mappers.StaticSiteCustomDomainOverviewARMResource
        },
        202: {
            bodyMapper: Mappers.StaticSiteCustomDomainOverviewARMResource
        },
        default: {
            bodyMapper: Mappers.DefaultErrorResponse
        }
    },
    serializer: serializer
};
var deleteStaticSiteCustomDomainOperationSpec = {
    httpMethod: "DELETE",
    path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/staticSites/{name}/customDomains/{domainName}",
    urlParameters: [
        Parameters.resourceGroupName,
        Parameters.name,
        Parameters.domainName0,
        Parameters.subscriptionId
    ],
    queryParameters: [
        Parameters.apiVersion
    ],
    headerParameters: [
        Parameters.acceptLanguage
    ],
    responses: {
        200: {},
        202: {},
        default: {
            bodyMapper: Mappers.DefaultErrorResponse
        }
    },
    serializer: serializer
};
var validateCustomDomainCanBeAddedToStaticSiteOperationSpec = {
    httpMethod: "POST",
    path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/staticSites/{name}/customDomains/{domainName}/validate",
    urlParameters: [
        Parameters.resourceGroupName,
        Parameters.name,
        Parameters.domainName0,
        Parameters.subscriptionId
    ],
    queryParameters: [
        Parameters.apiVersion
    ],
    headerParameters: [
        Parameters.acceptLanguage
    ],
    responses: {
        200: {},
        202: {},
        default: {
            bodyMapper: Mappers.DefaultErrorResponse
        }
    },
    serializer: serializer
};
var detachStaticSiteOperationSpec = {
    httpMethod: "POST",
    path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/staticSites/{name}/detach",
    urlParameters: [
        Parameters.resourceGroupName,
        Parameters.name,
        Parameters.subscriptionId
    ],
    queryParameters: [
        Parameters.apiVersion
    ],
    headerParameters: [
        Parameters.acceptLanguage
    ],
    responses: {
        200: {},
        202: {},
        default: {
            bodyMapper: Mappers.DefaultErrorResponse
        }
    },
    serializer: serializer
};
var listStaticSiteFunctionsOperationSpec = {
    httpMethod: "GET",
    path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/staticSites/{name}/functions",
    urlParameters: [
        Parameters.resourceGroupName,
        Parameters.name,
        Parameters.subscriptionId
    ],
    queryParameters: [
        Parameters.apiVersion
    ],
    headerParameters: [
        Parameters.acceptLanguage
    ],
    responses: {
        200: {
            bodyMapper: Mappers.StaticSiteFunctionOverviewCollection
        },
        default: {
            bodyMapper: Mappers.DefaultErrorResponse
        }
    },
    serializer: serializer
};
var listStaticSiteFunctionAppSettingsOperationSpec = {
    httpMethod: "POST",
    path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/staticSites/{name}/listFunctionAppSettings",
    urlParameters: [
        Parameters.resourceGroupName,
        Parameters.name,
        Parameters.subscriptionId
    ],
    queryParameters: [
        Parameters.apiVersion
    ],
    headerParameters: [
        Parameters.acceptLanguage
    ],
    responses: {
        200: {
            bodyMapper: Mappers.StringDictionary
        },
        202: {
            bodyMapper: Mappers.StringDictionary
        },
        default: {
            bodyMapper: Mappers.DefaultErrorResponse
        }
    },
    serializer: serializer
};
var listStaticSiteSecretsOperationSpec = {
    httpMethod: "POST",
    path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/staticSites/{name}/listSecrets",
    urlParameters: [
        Parameters.resourceGroupName,
        Parameters.name,
        Parameters.subscriptionId
    ],
    queryParameters: [
        Parameters.apiVersion
    ],
    headerParameters: [
        Parameters.acceptLanguage
    ],
    responses: {
        200: {
            bodyMapper: Mappers.StringDictionary
        },
        default: {
            bodyMapper: Mappers.DefaultErrorResponse
        }
    },
    serializer: serializer
};
var resetStaticSiteApiKeyOperationSpec = {
    httpMethod: "POST",
    path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/staticSites/{name}/resetapikey",
    urlParameters: [
        Parameters.resourceGroupName,
        Parameters.name,
        Parameters.subscriptionId
    ],
    queryParameters: [
        Parameters.apiVersion
    ],
    headerParameters: [
        Parameters.acceptLanguage
    ],
    requestBody: {
        parameterPath: "resetPropertiesEnvelope",
        mapper: __assign(__assign({}, Mappers.StaticSiteResetPropertiesARMResource), { required: true })
    },
    responses: {
        200: {},
        default: {
            bodyMapper: Mappers.DefaultErrorResponse
        }
    },
    serializer: serializer
};
var listNextOperationSpec = {
    httpMethod: "GET",
    baseUrl: "https://management.azure.com",
    path: "{nextLink}",
    urlParameters: [
        Parameters.nextPageLink
    ],
    queryParameters: [
        Parameters.apiVersion
    ],
    headerParameters: [
        Parameters.acceptLanguage
    ],
    responses: {
        200: {
            bodyMapper: Mappers.StaticSiteCollection
        },
        default: {
            bodyMapper: Mappers.DefaultErrorResponse
        }
    },
    serializer: serializer
};
var getStaticSitesByResourceGroupNextOperationSpec = {
    httpMethod: "GET",
    baseUrl: "https://management.azure.com",
    path: "{nextLink}",
    urlParameters: [
        Parameters.nextPageLink
    ],
    queryParameters: [
        Parameters.apiVersion
    ],
    headerParameters: [
        Parameters.acceptLanguage
    ],
    responses: {
        200: {
            bodyMapper: Mappers.StaticSiteCollection
        },
        default: {
            bodyMapper: Mappers.DefaultErrorResponse
        }
    },
    serializer: serializer
};
var listStaticSiteUsersNextOperationSpec = {
    httpMethod: "POST",
    baseUrl: "https://management.azure.com",
    path: "{nextLink}",
    urlParameters: [
        Parameters.nextPageLink
    ],
    queryParameters: [
        Parameters.apiVersion
    ],
    headerParameters: [
        Parameters.acceptLanguage
    ],
    responses: {
        200: {
            bodyMapper: Mappers.StaticSiteUserCollection
        },
        default: {
            bodyMapper: Mappers.DefaultErrorResponse
        }
    },
    serializer: serializer
};
var getStaticSiteBuildsNextOperationSpec = {
    httpMethod: "GET",
    baseUrl: "https://management.azure.com",
    path: "{nextLink}",
    urlParameters: [
        Parameters.nextPageLink
    ],
    queryParameters: [
        Parameters.apiVersion
    ],
    headerParameters: [
        Parameters.acceptLanguage
    ],
    responses: {
        200: {
            bodyMapper: Mappers.StaticSiteBuildCollection
        },
        default: {
            bodyMapper: Mappers.DefaultErrorResponse
        }
    },
    serializer: serializer
};
var listStaticSiteBuildFunctionsNextOperationSpec = {
    httpMethod: "GET",
    baseUrl: "https://management.azure.com",
    path: "{nextLink}",
    urlParameters: [
        Parameters.nextPageLink
    ],
    queryParameters: [
        Parameters.apiVersion
    ],
    headerParameters: [
        Parameters.acceptLanguage
    ],
    responses: {
        200: {
            bodyMapper: Mappers.StaticSiteFunctionOverviewCollection
        },
        default: {
            bodyMapper: Mappers.DefaultErrorResponse
        }
    },
    serializer: serializer
};
var listStaticSiteCustomDomainsNextOperationSpec = {
    httpMethod: "GET",
    baseUrl: "https://management.azure.com",
    path: "{nextLink}",
    urlParameters: [
        Parameters.nextPageLink
    ],
    queryParameters: [
        Parameters.apiVersion
    ],
    headerParameters: [
        Parameters.acceptLanguage
    ],
    responses: {
        200: {
            bodyMapper: Mappers.StaticSiteCustomDomainOverviewCollection
        },
        default: {
            bodyMapper: Mappers.DefaultErrorResponse
        }
    },
    serializer: serializer
};
var listStaticSiteFunctionsNextOperationSpec = {
    httpMethod: "GET",
    baseUrl: "https://management.azure.com",
    path: "{nextLink}",
    urlParameters: [
        Parameters.nextPageLink
    ],
    queryParameters: [
        Parameters.apiVersion
    ],
    headerParameters: [
        Parameters.acceptLanguage
    ],
    responses: {
        200: {
            bodyMapper: Mappers.StaticSiteFunctionOverviewCollection
        },
        default: {
            bodyMapper: Mappers.DefaultErrorResponse
        }
    },
    serializer: serializer
};
//# sourceMappingURL=staticSites.js.map