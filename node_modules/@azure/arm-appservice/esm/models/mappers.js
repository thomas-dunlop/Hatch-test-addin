/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */
import { __assign } from "tslib";
import { CloudErrorMapper, BaseResourceMapper } from "@azure/ms-rest-azure-js";
export var CloudError = CloudErrorMapper;
export var BaseResource = BaseResourceMapper;
export var AppServiceCertificate = {
    serializedName: "AppServiceCertificate",
    type: {
        name: "Composite",
        className: "AppServiceCertificate",
        modelProperties: {
            keyVaultId: {
                serializedName: "keyVaultId",
                type: {
                    name: "String"
                }
            },
            keyVaultSecretName: {
                serializedName: "keyVaultSecretName",
                type: {
                    name: "String"
                }
            },
            provisioningState: {
                readOnly: true,
                serializedName: "provisioningState",
                type: {
                    name: "Enum",
                    allowedValues: [
                        "Initialized",
                        "WaitingOnCertificateOrder",
                        "Succeeded",
                        "CertificateOrderFailed",
                        "OperationNotPermittedOnKeyVault",
                        "AzureServiceUnauthorizedToAccessKeyVault",
                        "KeyVaultDoesNotExist",
                        "KeyVaultSecretDoesNotExist",
                        "UnknownError",
                        "ExternalPrivateKey",
                        "Unknown"
                    ]
                }
            }
        }
    }
};
export var Resource = {
    serializedName: "Resource",
    type: {
        name: "Composite",
        className: "Resource",
        modelProperties: {
            id: {
                readOnly: true,
                serializedName: "id",
                type: {
                    name: "String"
                }
            },
            name: {
                readOnly: true,
                serializedName: "name",
                type: {
                    name: "String"
                }
            },
            kind: {
                serializedName: "kind",
                type: {
                    name: "String"
                }
            },
            location: {
                required: true,
                serializedName: "location",
                type: {
                    name: "String"
                }
            },
            type: {
                readOnly: true,
                serializedName: "type",
                type: {
                    name: "String"
                }
            },
            tags: {
                serializedName: "tags",
                type: {
                    name: "Dictionary",
                    value: {
                        type: {
                            name: "String"
                        }
                    }
                }
            },
            systemData: {
                serializedName: "systemData",
                type: {
                    name: "Composite",
                    className: "SystemData"
                }
            }
        }
    }
};
export var AppServiceCertificateResource = {
    serializedName: "AppServiceCertificateResource",
    type: {
        name: "Composite",
        className: "AppServiceCertificateResource",
        modelProperties: __assign(__assign({}, Resource.type.modelProperties), { keyVaultId: {
                serializedName: "properties.keyVaultId",
                type: {
                    name: "String"
                }
            }, keyVaultSecretName: {
                serializedName: "properties.keyVaultSecretName",
                type: {
                    name: "String"
                }
            }, provisioningState: {
                readOnly: true,
                serializedName: "properties.provisioningState",
                type: {
                    name: "Enum",
                    allowedValues: [
                        "Initialized",
                        "WaitingOnCertificateOrder",
                        "Succeeded",
                        "CertificateOrderFailed",
                        "OperationNotPermittedOnKeyVault",
                        "AzureServiceUnauthorizedToAccessKeyVault",
                        "KeyVaultDoesNotExist",
                        "KeyVaultSecretDoesNotExist",
                        "UnknownError",
                        "ExternalPrivateKey",
                        "Unknown"
                    ]
                }
            } })
    }
};
export var CertificateDetails = {
    serializedName: "CertificateDetails",
    type: {
        name: "Composite",
        className: "CertificateDetails",
        modelProperties: {
            version: {
                readOnly: true,
                serializedName: "version",
                type: {
                    name: "Number"
                }
            },
            serialNumber: {
                readOnly: true,
                serializedName: "serialNumber",
                type: {
                    name: "String"
                }
            },
            thumbprint: {
                readOnly: true,
                serializedName: "thumbprint",
                type: {
                    name: "String"
                }
            },
            subject: {
                readOnly: true,
                serializedName: "subject",
                type: {
                    name: "String"
                }
            },
            notBefore: {
                readOnly: true,
                serializedName: "notBefore",
                type: {
                    name: "DateTime"
                }
            },
            notAfter: {
                readOnly: true,
                serializedName: "notAfter",
                type: {
                    name: "DateTime"
                }
            },
            signatureAlgorithm: {
                readOnly: true,
                serializedName: "signatureAlgorithm",
                type: {
                    name: "String"
                }
            },
            issuer: {
                readOnly: true,
                serializedName: "issuer",
                type: {
                    name: "String"
                }
            },
            rawData: {
                readOnly: true,
                serializedName: "rawData",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var AppServiceCertificateOrder = {
    serializedName: "AppServiceCertificateOrder",
    type: {
        name: "Composite",
        className: "AppServiceCertificateOrder",
        modelProperties: __assign(__assign({}, Resource.type.modelProperties), { certificates: {
                serializedName: "properties.certificates",
                type: {
                    name: "Dictionary",
                    value: {
                        type: {
                            name: "Composite",
                            className: "AppServiceCertificate"
                        }
                    }
                }
            }, distinguishedName: {
                serializedName: "properties.distinguishedName",
                type: {
                    name: "String"
                }
            }, domainVerificationToken: {
                readOnly: true,
                serializedName: "properties.domainVerificationToken",
                type: {
                    name: "String"
                }
            }, validityInYears: {
                serializedName: "properties.validityInYears",
                defaultValue: 1,
                constraints: {
                    InclusiveMaximum: 3,
                    InclusiveMinimum: 1
                },
                type: {
                    name: "Number"
                }
            }, keySize: {
                serializedName: "properties.keySize",
                defaultValue: 2048,
                type: {
                    name: "Number"
                }
            }, productType: {
                required: true,
                serializedName: "properties.productType",
                type: {
                    name: "Enum",
                    allowedValues: [
                        "StandardDomainValidatedSsl",
                        "StandardDomainValidatedWildCardSsl"
                    ]
                }
            }, autoRenew: {
                serializedName: "properties.autoRenew",
                defaultValue: true,
                type: {
                    name: "Boolean"
                }
            }, provisioningState: {
                readOnly: true,
                serializedName: "properties.provisioningState",
                type: {
                    name: "Enum",
                    allowedValues: [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "InProgress",
                        "Deleting"
                    ]
                }
            }, status: {
                readOnly: true,
                serializedName: "properties.status",
                type: {
                    name: "Enum",
                    allowedValues: [
                        "Pendingissuance",
                        "Issued",
                        "Revoked",
                        "Canceled",
                        "Denied",
                        "Pendingrevocation",
                        "PendingRekey",
                        "Unused",
                        "Expired",
                        "NotSubmitted"
                    ]
                }
            }, signedCertificate: {
                readOnly: true,
                serializedName: "properties.signedCertificate",
                type: {
                    name: "Composite",
                    className: "CertificateDetails"
                }
            }, csr: {
                serializedName: "properties.csr",
                type: {
                    name: "String"
                }
            }, intermediate: {
                readOnly: true,
                serializedName: "properties.intermediate",
                type: {
                    name: "Composite",
                    className: "CertificateDetails"
                }
            }, root: {
                readOnly: true,
                serializedName: "properties.root",
                type: {
                    name: "Composite",
                    className: "CertificateDetails"
                }
            }, serialNumber: {
                readOnly: true,
                serializedName: "properties.serialNumber",
                type: {
                    name: "String"
                }
            }, lastCertificateIssuanceTime: {
                readOnly: true,
                serializedName: "properties.lastCertificateIssuanceTime",
                type: {
                    name: "DateTime"
                }
            }, expirationTime: {
                readOnly: true,
                serializedName: "properties.expirationTime",
                type: {
                    name: "DateTime"
                }
            }, isPrivateKeyExternal: {
                readOnly: true,
                serializedName: "properties.isPrivateKeyExternal",
                type: {
                    name: "Boolean"
                }
            }, appServiceCertificateNotRenewableReasons: {
                readOnly: true,
                serializedName: "properties.appServiceCertificateNotRenewableReasons",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String"
                        }
                    }
                }
            }, nextAutoRenewalTimeStamp: {
                readOnly: true,
                serializedName: "properties.nextAutoRenewalTimeStamp",
                type: {
                    name: "DateTime"
                }
            } })
    }
};
export var ProxyOnlyResource = {
    serializedName: "ProxyOnlyResource",
    type: {
        name: "Composite",
        className: "ProxyOnlyResource",
        modelProperties: {
            id: {
                readOnly: true,
                serializedName: "id",
                type: {
                    name: "String"
                }
            },
            name: {
                readOnly: true,
                serializedName: "name",
                type: {
                    name: "String"
                }
            },
            kind: {
                serializedName: "kind",
                type: {
                    name: "String"
                }
            },
            type: {
                readOnly: true,
                serializedName: "type",
                type: {
                    name: "String"
                }
            },
            systemData: {
                serializedName: "systemData",
                type: {
                    name: "Composite",
                    className: "SystemData"
                }
            }
        }
    }
};
export var AppServiceCertificateOrderPatchResource = {
    serializedName: "AppServiceCertificateOrderPatchResource",
    type: {
        name: "Composite",
        className: "AppServiceCertificateOrderPatchResource",
        modelProperties: __assign(__assign({}, ProxyOnlyResource.type.modelProperties), { certificates: {
                serializedName: "properties.certificates",
                type: {
                    name: "Dictionary",
                    value: {
                        type: {
                            name: "Composite",
                            className: "AppServiceCertificate"
                        }
                    }
                }
            }, distinguishedName: {
                serializedName: "properties.distinguishedName",
                type: {
                    name: "String"
                }
            }, domainVerificationToken: {
                readOnly: true,
                serializedName: "properties.domainVerificationToken",
                type: {
                    name: "String"
                }
            }, validityInYears: {
                serializedName: "properties.validityInYears",
                defaultValue: 1,
                constraints: {
                    InclusiveMaximum: 3,
                    InclusiveMinimum: 1
                },
                type: {
                    name: "Number"
                }
            }, keySize: {
                serializedName: "properties.keySize",
                defaultValue: 2048,
                type: {
                    name: "Number"
                }
            }, productType: {
                required: true,
                serializedName: "properties.productType",
                type: {
                    name: "Enum",
                    allowedValues: [
                        "StandardDomainValidatedSsl",
                        "StandardDomainValidatedWildCardSsl"
                    ]
                }
            }, autoRenew: {
                serializedName: "properties.autoRenew",
                defaultValue: true,
                type: {
                    name: "Boolean"
                }
            }, provisioningState: {
                readOnly: true,
                serializedName: "properties.provisioningState",
                type: {
                    name: "Enum",
                    allowedValues: [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "InProgress",
                        "Deleting"
                    ]
                }
            }, status: {
                readOnly: true,
                serializedName: "properties.status",
                type: {
                    name: "Enum",
                    allowedValues: [
                        "Pendingissuance",
                        "Issued",
                        "Revoked",
                        "Canceled",
                        "Denied",
                        "Pendingrevocation",
                        "PendingRekey",
                        "Unused",
                        "Expired",
                        "NotSubmitted"
                    ]
                }
            }, signedCertificate: {
                readOnly: true,
                serializedName: "properties.signedCertificate",
                type: {
                    name: "Composite",
                    className: "CertificateDetails"
                }
            }, csr: {
                serializedName: "properties.csr",
                type: {
                    name: "String"
                }
            }, intermediate: {
                readOnly: true,
                serializedName: "properties.intermediate",
                type: {
                    name: "Composite",
                    className: "CertificateDetails"
                }
            }, root: {
                readOnly: true,
                serializedName: "properties.root",
                type: {
                    name: "Composite",
                    className: "CertificateDetails"
                }
            }, serialNumber: {
                readOnly: true,
                serializedName: "properties.serialNumber",
                type: {
                    name: "String"
                }
            }, lastCertificateIssuanceTime: {
                readOnly: true,
                serializedName: "properties.lastCertificateIssuanceTime",
                type: {
                    name: "DateTime"
                }
            }, expirationTime: {
                readOnly: true,
                serializedName: "properties.expirationTime",
                type: {
                    name: "DateTime"
                }
            }, isPrivateKeyExternal: {
                readOnly: true,
                serializedName: "properties.isPrivateKeyExternal",
                type: {
                    name: "Boolean"
                }
            }, appServiceCertificateNotRenewableReasons: {
                readOnly: true,
                serializedName: "properties.appServiceCertificateNotRenewableReasons",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String"
                        }
                    }
                }
            }, nextAutoRenewalTimeStamp: {
                readOnly: true,
                serializedName: "properties.nextAutoRenewalTimeStamp",
                type: {
                    name: "DateTime"
                }
            } })
    }
};
export var AppServiceCertificatePatchResource = {
    serializedName: "AppServiceCertificatePatchResource",
    type: {
        name: "Composite",
        className: "AppServiceCertificatePatchResource",
        modelProperties: __assign(__assign({}, ProxyOnlyResource.type.modelProperties), { keyVaultId: {
                serializedName: "properties.keyVaultId",
                type: {
                    name: "String"
                }
            }, keyVaultSecretName: {
                serializedName: "properties.keyVaultSecretName",
                type: {
                    name: "String"
                }
            }, provisioningState: {
                readOnly: true,
                serializedName: "properties.provisioningState",
                type: {
                    name: "Enum",
                    allowedValues: [
                        "Initialized",
                        "WaitingOnCertificateOrder",
                        "Succeeded",
                        "CertificateOrderFailed",
                        "OperationNotPermittedOnKeyVault",
                        "AzureServiceUnauthorizedToAccessKeyVault",
                        "KeyVaultDoesNotExist",
                        "KeyVaultSecretDoesNotExist",
                        "UnknownError",
                        "ExternalPrivateKey",
                        "Unknown"
                    ]
                }
            } })
    }
};
export var CertificateEmail = {
    serializedName: "CertificateEmail",
    type: {
        name: "Composite",
        className: "CertificateEmail",
        modelProperties: __assign(__assign({}, ProxyOnlyResource.type.modelProperties), { emailId: {
                serializedName: "properties.emailId",
                type: {
                    name: "String"
                }
            }, timeStamp: {
                serializedName: "properties.timeStamp",
                type: {
                    name: "DateTime"
                }
            } })
    }
};
export var CertificateOrderAction = {
    serializedName: "CertificateOrderAction",
    type: {
        name: "Composite",
        className: "CertificateOrderAction",
        modelProperties: __assign(__assign({}, ProxyOnlyResource.type.modelProperties), { actionType: {
                readOnly: true,
                serializedName: "properties.actionType",
                type: {
                    name: "Enum",
                    allowedValues: [
                        "CertificateIssued",
                        "CertificateOrderCanceled",
                        "CertificateOrderCreated",
                        "CertificateRevoked",
                        "DomainValidationComplete",
                        "FraudDetected",
                        "OrgNameChange",
                        "OrgValidationComplete",
                        "SanDrop",
                        "FraudCleared",
                        "CertificateExpired",
                        "CertificateExpirationWarning",
                        "FraudDocumentationRequired",
                        "Unknown"
                    ]
                }
            }, createdAt: {
                readOnly: true,
                serializedName: "properties.createdAt",
                type: {
                    name: "DateTime"
                }
            } })
    }
};
export var ReissueCertificateOrderRequest = {
    serializedName: "ReissueCertificateOrderRequest",
    type: {
        name: "Composite",
        className: "ReissueCertificateOrderRequest",
        modelProperties: __assign(__assign({}, ProxyOnlyResource.type.modelProperties), { keySize: {
                serializedName: "properties.keySize",
                type: {
                    name: "Number"
                }
            }, delayExistingRevokeInHours: {
                serializedName: "properties.delayExistingRevokeInHours",
                type: {
                    name: "Number"
                }
            }, csr: {
                serializedName: "properties.csr",
                type: {
                    name: "String"
                }
            }, isPrivateKeyExternal: {
                serializedName: "properties.isPrivateKeyExternal",
                type: {
                    name: "Boolean"
                }
            } })
    }
};
export var RenewCertificateOrderRequest = {
    serializedName: "RenewCertificateOrderRequest",
    type: {
        name: "Composite",
        className: "RenewCertificateOrderRequest",
        modelProperties: __assign(__assign({}, ProxyOnlyResource.type.modelProperties), { keySize: {
                serializedName: "properties.keySize",
                type: {
                    name: "Number"
                }
            }, csr: {
                serializedName: "properties.csr",
                type: {
                    name: "String"
                }
            }, isPrivateKeyExternal: {
                serializedName: "properties.isPrivateKeyExternal",
                type: {
                    name: "Boolean"
                }
            } })
    }
};
export var SiteSeal = {
    serializedName: "SiteSeal",
    type: {
        name: "Composite",
        className: "SiteSeal",
        modelProperties: {
            html: {
                required: true,
                serializedName: "html",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var SiteSealRequest = {
    serializedName: "SiteSealRequest",
    type: {
        name: "Composite",
        className: "SiteSealRequest",
        modelProperties: {
            lightTheme: {
                serializedName: "lightTheme",
                type: {
                    name: "Boolean"
                }
            },
            locale: {
                serializedName: "locale",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var SystemData = {
    serializedName: "systemData",
    type: {
        name: "Composite",
        className: "SystemData",
        modelProperties: {
            createdBy: {
                serializedName: "createdBy",
                type: {
                    name: "String"
                }
            },
            createdByType: {
                serializedName: "createdByType",
                type: {
                    name: "String"
                }
            },
            createdAt: {
                serializedName: "createdAt",
                type: {
                    name: "DateTime"
                }
            },
            lastModifiedBy: {
                serializedName: "lastModifiedBy",
                type: {
                    name: "String"
                }
            },
            lastModifiedByType: {
                serializedName: "lastModifiedByType",
                type: {
                    name: "String"
                }
            },
            lastModifiedAt: {
                serializedName: "lastModifiedAt",
                type: {
                    name: "DateTime"
                }
            }
        }
    }
};
export var VnetRoute = {
    serializedName: "VnetRoute",
    type: {
        name: "Composite",
        className: "VnetRoute",
        modelProperties: __assign(__assign({}, ProxyOnlyResource.type.modelProperties), { startAddress: {
                serializedName: "properties.startAddress",
                type: {
                    name: "String"
                }
            }, endAddress: {
                serializedName: "properties.endAddress",
                type: {
                    name: "String"
                }
            }, routeType: {
                serializedName: "properties.routeType",
                type: {
                    name: "String"
                }
            } })
    }
};
export var VnetInfo = {
    serializedName: "VnetInfo",
    type: {
        name: "Composite",
        className: "VnetInfo",
        modelProperties: __assign(__assign({}, ProxyOnlyResource.type.modelProperties), { vnetResourceId: {
                serializedName: "properties.vnetResourceId",
                type: {
                    name: "String"
                }
            }, certThumbprint: {
                readOnly: true,
                serializedName: "properties.certThumbprint",
                type: {
                    name: "String"
                }
            }, certBlob: {
                serializedName: "properties.certBlob",
                type: {
                    name: "String"
                }
            }, routes: {
                readOnly: true,
                serializedName: "properties.routes",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "VnetRoute"
                        }
                    }
                }
            }, resyncRequired: {
                readOnly: true,
                serializedName: "properties.resyncRequired",
                type: {
                    name: "Boolean"
                }
            }, dnsServers: {
                serializedName: "properties.dnsServers",
                type: {
                    name: "String"
                }
            }, isSwift: {
                serializedName: "properties.isSwift",
                type: {
                    name: "Boolean"
                }
            } })
    }
};
export var VnetGateway = {
    serializedName: "VnetGateway",
    type: {
        name: "Composite",
        className: "VnetGateway",
        modelProperties: __assign(__assign({}, ProxyOnlyResource.type.modelProperties), { vnetName: {
                serializedName: "properties.vnetName",
                type: {
                    name: "String"
                }
            }, vpnPackageUri: {
                required: true,
                serializedName: "properties.vpnPackageUri",
                type: {
                    name: "String"
                }
            } })
    }
};
export var User = {
    serializedName: "User",
    type: {
        name: "Composite",
        className: "User",
        modelProperties: __assign(__assign({}, ProxyOnlyResource.type.modelProperties), { publishingUserName: {
                required: true,
                serializedName: "properties.publishingUserName",
                type: {
                    name: "String"
                }
            }, publishingPassword: {
                serializedName: "properties.publishingPassword",
                type: {
                    name: "String"
                }
            }, publishingPasswordHash: {
                serializedName: "properties.publishingPasswordHash",
                type: {
                    name: "String"
                }
            }, publishingPasswordHashSalt: {
                serializedName: "properties.publishingPasswordHashSalt",
                type: {
                    name: "String"
                }
            }, scmUri: {
                serializedName: "properties.scmUri",
                type: {
                    name: "String"
                }
            } })
    }
};
export var StringDictionary = {
    serializedName: "StringDictionary",
    type: {
        name: "Composite",
        className: "StringDictionary",
        modelProperties: __assign(__assign({}, ProxyOnlyResource.type.modelProperties), { properties: {
                serializedName: "properties",
                type: {
                    name: "Dictionary",
                    value: {
                        type: {
                            name: "String"
                        }
                    }
                }
            } })
    }
};
export var Snapshot = {
    serializedName: "Snapshot",
    type: {
        name: "Composite",
        className: "Snapshot",
        modelProperties: __assign(__assign({}, ProxyOnlyResource.type.modelProperties), { time: {
                readOnly: true,
                serializedName: "properties.time",
                type: {
                    name: "String"
                }
            } })
    }
};
export var PushSettings = {
    serializedName: "PushSettings",
    type: {
        name: "Composite",
        className: "PushSettings",
        modelProperties: __assign(__assign({}, ProxyOnlyResource.type.modelProperties), { isPushEnabled: {
                required: true,
                serializedName: "properties.isPushEnabled",
                type: {
                    name: "Boolean"
                }
            }, tagWhitelistJson: {
                serializedName: "properties.tagWhitelistJson",
                type: {
                    name: "String"
                }
            }, tagsRequiringAuth: {
                serializedName: "properties.tagsRequiringAuth",
                type: {
                    name: "String"
                }
            }, dynamicTagsJson: {
                serializedName: "properties.dynamicTagsJson",
                type: {
                    name: "String"
                }
            } })
    }
};
export var Identifier = {
    serializedName: "Identifier",
    type: {
        name: "Composite",
        className: "Identifier",
        modelProperties: __assign(__assign({}, ProxyOnlyResource.type.modelProperties), { value: {
                serializedName: "properties.id",
                type: {
                    name: "String"
                }
            } })
    }
};
export var HybridConnection = {
    serializedName: "HybridConnection",
    type: {
        name: "Composite",
        className: "HybridConnection",
        modelProperties: __assign(__assign({}, ProxyOnlyResource.type.modelProperties), { serviceBusNamespace: {
                serializedName: "properties.serviceBusNamespace",
                type: {
                    name: "String"
                }
            }, relayName: {
                serializedName: "properties.relayName",
                type: {
                    name: "String"
                }
            }, relayArmUri: {
                serializedName: "properties.relayArmUri",
                type: {
                    name: "String"
                }
            }, hostname: {
                serializedName: "properties.hostname",
                type: {
                    name: "String"
                }
            }, port: {
                serializedName: "properties.port",
                type: {
                    name: "Number"
                }
            }, sendKeyName: {
                serializedName: "properties.sendKeyName",
                type: {
                    name: "String"
                }
            }, sendKeyValue: {
                serializedName: "properties.sendKeyValue",
                type: {
                    name: "String"
                }
            }, serviceBusSuffix: {
                serializedName: "properties.serviceBusSuffix",
                type: {
                    name: "String"
                }
            } })
    }
};
export var DeletedSite = {
    serializedName: "DeletedSite",
    type: {
        name: "Composite",
        className: "DeletedSite",
        modelProperties: __assign(__assign({}, ProxyOnlyResource.type.modelProperties), { deletedSiteId: {
                readOnly: true,
                serializedName: "properties.deletedSiteId",
                type: {
                    name: "Number"
                }
            }, deletedTimestamp: {
                readOnly: true,
                serializedName: "properties.deletedTimestamp",
                type: {
                    name: "String"
                }
            }, subscription: {
                readOnly: true,
                serializedName: "properties.subscription",
                type: {
                    name: "String"
                }
            }, resourceGroup: {
                readOnly: true,
                serializedName: "properties.resourceGroup",
                type: {
                    name: "String"
                }
            }, deletedSiteName: {
                readOnly: true,
                serializedName: "properties.deletedSiteName",
                type: {
                    name: "String"
                }
            }, slot: {
                readOnly: true,
                serializedName: "properties.slot",
                type: {
                    name: "String"
                }
            }, deletedSiteKind: {
                readOnly: true,
                serializedName: "properties.kind",
                type: {
                    name: "String"
                }
            }, geoRegionName: {
                readOnly: true,
                serializedName: "properties.geoRegionName",
                type: {
                    name: "String"
                }
            } })
    }
};
export var ManagedServiceIdentityUserAssignedIdentitiesValue = {
    serializedName: "ManagedServiceIdentity_userAssignedIdentitiesValue",
    type: {
        name: "Composite",
        className: "ManagedServiceIdentityUserAssignedIdentitiesValue",
        modelProperties: {
            principalId: {
                readOnly: true,
                serializedName: "principalId",
                type: {
                    name: "String"
                }
            },
            clientId: {
                readOnly: true,
                serializedName: "clientId",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var ManagedServiceIdentity = {
    serializedName: "ManagedServiceIdentity",
    type: {
        name: "Composite",
        className: "ManagedServiceIdentity",
        modelProperties: {
            type: {
                serializedName: "type",
                type: {
                    name: "Enum",
                    allowedValues: [
                        "SystemAssigned",
                        "UserAssigned",
                        "SystemAssigned, UserAssigned",
                        "None"
                    ]
                }
            },
            tenantId: {
                readOnly: true,
                serializedName: "tenantId",
                type: {
                    name: "String"
                }
            },
            principalId: {
                readOnly: true,
                serializedName: "principalId",
                type: {
                    name: "String"
                }
            },
            userAssignedIdentities: {
                serializedName: "userAssignedIdentities",
                type: {
                    name: "Dictionary",
                    value: {
                        type: {
                            name: "Composite",
                            className: "ManagedServiceIdentityUserAssignedIdentitiesValue"
                        }
                    }
                }
            }
        }
    }
};
export var SlotSwapStatus = {
    serializedName: "SlotSwapStatus",
    type: {
        name: "Composite",
        className: "SlotSwapStatus",
        modelProperties: {
            timestampUtc: {
                readOnly: true,
                serializedName: "timestampUtc",
                type: {
                    name: "DateTime"
                }
            },
            sourceSlotName: {
                readOnly: true,
                serializedName: "sourceSlotName",
                type: {
                    name: "String"
                }
            },
            destinationSlotName: {
                readOnly: true,
                serializedName: "destinationSlotName",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var CloningInfo = {
    serializedName: "CloningInfo",
    type: {
        name: "Composite",
        className: "CloningInfo",
        modelProperties: {
            correlationId: {
                serializedName: "correlationId",
                type: {
                    name: "Uuid"
                }
            },
            overwrite: {
                serializedName: "overwrite",
                type: {
                    name: "Boolean"
                }
            },
            cloneCustomHostNames: {
                serializedName: "cloneCustomHostNames",
                type: {
                    name: "Boolean"
                }
            },
            cloneSourceControl: {
                serializedName: "cloneSourceControl",
                type: {
                    name: "Boolean"
                }
            },
            sourceWebAppId: {
                required: true,
                serializedName: "sourceWebAppId",
                type: {
                    name: "String"
                }
            },
            sourceWebAppLocation: {
                serializedName: "sourceWebAppLocation",
                type: {
                    name: "String"
                }
            },
            hostingEnvironment: {
                serializedName: "hostingEnvironment",
                type: {
                    name: "String"
                }
            },
            appSettingsOverrides: {
                serializedName: "appSettingsOverrides",
                type: {
                    name: "Dictionary",
                    value: {
                        type: {
                            name: "String"
                        }
                    }
                }
            },
            configureLoadBalancing: {
                serializedName: "configureLoadBalancing",
                type: {
                    name: "Boolean"
                }
            },
            trafficManagerProfileId: {
                serializedName: "trafficManagerProfileId",
                type: {
                    name: "String"
                }
            },
            trafficManagerProfileName: {
                serializedName: "trafficManagerProfileName",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var HostingEnvironmentProfile = {
    serializedName: "HostingEnvironmentProfile",
    type: {
        name: "Composite",
        className: "HostingEnvironmentProfile",
        modelProperties: {
            id: {
                serializedName: "id",
                type: {
                    name: "String"
                }
            },
            name: {
                readOnly: true,
                serializedName: "name",
                type: {
                    name: "String"
                }
            },
            type: {
                readOnly: true,
                serializedName: "type",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var IpSecurityRestriction = {
    serializedName: "IpSecurityRestriction",
    type: {
        name: "Composite",
        className: "IpSecurityRestriction",
        modelProperties: {
            ipAddress: {
                serializedName: "ipAddress",
                type: {
                    name: "String"
                }
            },
            subnetMask: {
                serializedName: "subnetMask",
                type: {
                    name: "String"
                }
            },
            vnetSubnetResourceId: {
                serializedName: "vnetSubnetResourceId",
                type: {
                    name: "String"
                }
            },
            vnetTrafficTag: {
                serializedName: "vnetTrafficTag",
                type: {
                    name: "Number"
                }
            },
            subnetTrafficTag: {
                serializedName: "subnetTrafficTag",
                type: {
                    name: "Number"
                }
            },
            action: {
                serializedName: "action",
                type: {
                    name: "String"
                }
            },
            tag: {
                serializedName: "tag",
                type: {
                    name: "String"
                }
            },
            priority: {
                serializedName: "priority",
                type: {
                    name: "Number"
                }
            },
            name: {
                serializedName: "name",
                type: {
                    name: "String"
                }
            },
            description: {
                serializedName: "description",
                type: {
                    name: "String"
                }
            },
            headers: {
                serializedName: "headers",
                type: {
                    name: "Dictionary",
                    value: {
                        type: {
                            name: "Sequence",
                            element: {
                                type: {
                                    name: "String"
                                }
                            }
                        }
                    }
                }
            }
        }
    }
};
export var ApiManagementConfig = {
    serializedName: "ApiManagementConfig",
    type: {
        name: "Composite",
        className: "ApiManagementConfig",
        modelProperties: {
            id: {
                serializedName: "id",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var ApiDefinitionInfo = {
    serializedName: "ApiDefinitionInfo",
    type: {
        name: "Composite",
        className: "ApiDefinitionInfo",
        modelProperties: {
            url: {
                serializedName: "url",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var CorsSettings = {
    serializedName: "CorsSettings",
    type: {
        name: "Composite",
        className: "CorsSettings",
        modelProperties: {
            allowedOrigins: {
                serializedName: "allowedOrigins",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String"
                        }
                    }
                }
            },
            supportCredentials: {
                serializedName: "supportCredentials",
                type: {
                    name: "Boolean"
                }
            }
        }
    }
};
export var AutoHealCustomAction = {
    serializedName: "AutoHealCustomAction",
    type: {
        name: "Composite",
        className: "AutoHealCustomAction",
        modelProperties: {
            exe: {
                serializedName: "exe",
                type: {
                    name: "String"
                }
            },
            parameters: {
                serializedName: "parameters",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var AutoHealActions = {
    serializedName: "AutoHealActions",
    type: {
        name: "Composite",
        className: "AutoHealActions",
        modelProperties: {
            actionType: {
                serializedName: "actionType",
                type: {
                    name: "Enum",
                    allowedValues: [
                        "Recycle",
                        "LogEvent",
                        "CustomAction"
                    ]
                }
            },
            customAction: {
                serializedName: "customAction",
                type: {
                    name: "Composite",
                    className: "AutoHealCustomAction"
                }
            },
            minProcessExecutionTime: {
                serializedName: "minProcessExecutionTime",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var SlowRequestsBasedTrigger = {
    serializedName: "SlowRequestsBasedTrigger",
    type: {
        name: "Composite",
        className: "SlowRequestsBasedTrigger",
        modelProperties: {
            timeTaken: {
                serializedName: "timeTaken",
                type: {
                    name: "String"
                }
            },
            count: {
                serializedName: "count",
                type: {
                    name: "Number"
                }
            },
            timeInterval: {
                serializedName: "timeInterval",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var StatusCodesBasedTrigger = {
    serializedName: "StatusCodesBasedTrigger",
    type: {
        name: "Composite",
        className: "StatusCodesBasedTrigger",
        modelProperties: {
            status: {
                serializedName: "status",
                type: {
                    name: "Number"
                }
            },
            subStatus: {
                serializedName: "subStatus",
                type: {
                    name: "Number"
                }
            },
            win32Status: {
                serializedName: "win32Status",
                type: {
                    name: "Number"
                }
            },
            count: {
                serializedName: "count",
                type: {
                    name: "Number"
                }
            },
            timeInterval: {
                serializedName: "timeInterval",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var RequestsBasedTrigger = {
    serializedName: "RequestsBasedTrigger",
    type: {
        name: "Composite",
        className: "RequestsBasedTrigger",
        modelProperties: {
            count: {
                serializedName: "count",
                type: {
                    name: "Number"
                }
            },
            timeInterval: {
                serializedName: "timeInterval",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var AutoHealTriggers = {
    serializedName: "AutoHealTriggers",
    type: {
        name: "Composite",
        className: "AutoHealTriggers",
        modelProperties: {
            requests: {
                serializedName: "requests",
                type: {
                    name: "Composite",
                    className: "RequestsBasedTrigger"
                }
            },
            privateBytesInKB: {
                serializedName: "privateBytesInKB",
                type: {
                    name: "Number"
                }
            },
            statusCodes: {
                serializedName: "statusCodes",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "StatusCodesBasedTrigger"
                        }
                    }
                }
            },
            slowRequests: {
                serializedName: "slowRequests",
                type: {
                    name: "Composite",
                    className: "SlowRequestsBasedTrigger"
                }
            }
        }
    }
};
export var AutoHealRules = {
    serializedName: "AutoHealRules",
    type: {
        name: "Composite",
        className: "AutoHealRules",
        modelProperties: {
            triggers: {
                serializedName: "triggers",
                type: {
                    name: "Composite",
                    className: "AutoHealTriggers"
                }
            },
            actions: {
                serializedName: "actions",
                type: {
                    name: "Composite",
                    className: "AutoHealActions"
                }
            }
        }
    }
};
export var SiteLimits = {
    serializedName: "SiteLimits",
    type: {
        name: "Composite",
        className: "SiteLimits",
        modelProperties: {
            maxPercentageCpu: {
                serializedName: "maxPercentageCpu",
                type: {
                    name: "Number"
                }
            },
            maxMemoryInMb: {
                serializedName: "maxMemoryInMb",
                type: {
                    name: "Number"
                }
            },
            maxDiskSizeInMb: {
                serializedName: "maxDiskSizeInMb",
                type: {
                    name: "Number"
                }
            }
        }
    }
};
export var RampUpRule = {
    serializedName: "RampUpRule",
    type: {
        name: "Composite",
        className: "RampUpRule",
        modelProperties: {
            actionHostName: {
                serializedName: "actionHostName",
                type: {
                    name: "String"
                }
            },
            reroutePercentage: {
                serializedName: "reroutePercentage",
                type: {
                    name: "Number"
                }
            },
            changeStep: {
                serializedName: "changeStep",
                type: {
                    name: "Number"
                }
            },
            changeIntervalInMinutes: {
                serializedName: "changeIntervalInMinutes",
                type: {
                    name: "Number"
                }
            },
            minReroutePercentage: {
                serializedName: "minReroutePercentage",
                type: {
                    name: "Number"
                }
            },
            maxReroutePercentage: {
                serializedName: "maxReroutePercentage",
                type: {
                    name: "Number"
                }
            },
            changeDecisionCallbackUrl: {
                serializedName: "changeDecisionCallbackUrl",
                type: {
                    name: "String"
                }
            },
            name: {
                serializedName: "name",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var Experiments = {
    serializedName: "Experiments",
    type: {
        name: "Composite",
        className: "Experiments",
        modelProperties: {
            rampUpRules: {
                serializedName: "rampUpRules",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "RampUpRule"
                        }
                    }
                }
            }
        }
    }
};
export var VirtualDirectory = {
    serializedName: "VirtualDirectory",
    type: {
        name: "Composite",
        className: "VirtualDirectory",
        modelProperties: {
            virtualPath: {
                serializedName: "virtualPath",
                type: {
                    name: "String"
                }
            },
            physicalPath: {
                serializedName: "physicalPath",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var VirtualApplication = {
    serializedName: "VirtualApplication",
    type: {
        name: "Composite",
        className: "VirtualApplication",
        modelProperties: {
            virtualPath: {
                serializedName: "virtualPath",
                type: {
                    name: "String"
                }
            },
            physicalPath: {
                serializedName: "physicalPath",
                type: {
                    name: "String"
                }
            },
            preloadEnabled: {
                serializedName: "preloadEnabled",
                type: {
                    name: "Boolean"
                }
            },
            virtualDirectories: {
                serializedName: "virtualDirectories",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "VirtualDirectory"
                        }
                    }
                }
            }
        }
    }
};
export var HandlerMapping = {
    serializedName: "HandlerMapping",
    type: {
        name: "Composite",
        className: "HandlerMapping",
        modelProperties: {
            extension: {
                serializedName: "extension",
                type: {
                    name: "String"
                }
            },
            scriptProcessor: {
                serializedName: "scriptProcessor",
                type: {
                    name: "String"
                }
            },
            argumentsProperty: {
                serializedName: "arguments",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var SiteMachineKey = {
    serializedName: "SiteMachineKey",
    type: {
        name: "Composite",
        className: "SiteMachineKey",
        modelProperties: {
            validation: {
                serializedName: "validation",
                type: {
                    name: "String"
                }
            },
            validationKey: {
                serializedName: "validationKey",
                type: {
                    name: "String"
                }
            },
            decryption: {
                serializedName: "decryption",
                type: {
                    name: "String"
                }
            },
            decryptionKey: {
                serializedName: "decryptionKey",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var ConnStringInfo = {
    serializedName: "ConnStringInfo",
    type: {
        name: "Composite",
        className: "ConnStringInfo",
        modelProperties: {
            name: {
                serializedName: "name",
                type: {
                    name: "String"
                }
            },
            connectionString: {
                serializedName: "connectionString",
                type: {
                    name: "String"
                }
            },
            type: {
                serializedName: "type",
                type: {
                    name: "Enum",
                    allowedValues: [
                        "MySql",
                        "SQLServer",
                        "SQLAzure",
                        "Custom",
                        "NotificationHub",
                        "ServiceBus",
                        "EventHub",
                        "ApiHub",
                        "DocDb",
                        "RedisCache",
                        "PostgreSQL"
                    ]
                }
            }
        }
    }
};
export var NameValuePair = {
    serializedName: "NameValuePair",
    type: {
        name: "Composite",
        className: "NameValuePair",
        modelProperties: {
            name: {
                serializedName: "name",
                type: {
                    name: "String"
                }
            },
            value: {
                serializedName: "value",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var SiteConfig = {
    serializedName: "SiteConfig",
    type: {
        name: "Composite",
        className: "SiteConfig",
        modelProperties: {
            numberOfWorkers: {
                serializedName: "numberOfWorkers",
                type: {
                    name: "Number"
                }
            },
            defaultDocuments: {
                serializedName: "defaultDocuments",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String"
                        }
                    }
                }
            },
            netFrameworkVersion: {
                serializedName: "netFrameworkVersion",
                defaultValue: 'v4.6',
                type: {
                    name: "String"
                }
            },
            phpVersion: {
                serializedName: "phpVersion",
                type: {
                    name: "String"
                }
            },
            pythonVersion: {
                serializedName: "pythonVersion",
                type: {
                    name: "String"
                }
            },
            nodeVersion: {
                serializedName: "nodeVersion",
                type: {
                    name: "String"
                }
            },
            powerShellVersion: {
                serializedName: "powerShellVersion",
                type: {
                    name: "String"
                }
            },
            linuxFxVersion: {
                serializedName: "linuxFxVersion",
                type: {
                    name: "String"
                }
            },
            windowsFxVersion: {
                serializedName: "windowsFxVersion",
                type: {
                    name: "String"
                }
            },
            requestTracingEnabled: {
                serializedName: "requestTracingEnabled",
                type: {
                    name: "Boolean"
                }
            },
            requestTracingExpirationTime: {
                serializedName: "requestTracingExpirationTime",
                type: {
                    name: "DateTime"
                }
            },
            remoteDebuggingEnabled: {
                serializedName: "remoteDebuggingEnabled",
                type: {
                    name: "Boolean"
                }
            },
            remoteDebuggingVersion: {
                serializedName: "remoteDebuggingVersion",
                type: {
                    name: "String"
                }
            },
            httpLoggingEnabled: {
                serializedName: "httpLoggingEnabled",
                type: {
                    name: "Boolean"
                }
            },
            logsDirectorySizeLimit: {
                serializedName: "logsDirectorySizeLimit",
                type: {
                    name: "Number"
                }
            },
            detailedErrorLoggingEnabled: {
                serializedName: "detailedErrorLoggingEnabled",
                type: {
                    name: "Boolean"
                }
            },
            publishingUsername: {
                serializedName: "publishingUsername",
                type: {
                    name: "String"
                }
            },
            appSettings: {
                serializedName: "appSettings",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "NameValuePair"
                        }
                    }
                }
            },
            connectionStrings: {
                serializedName: "connectionStrings",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "ConnStringInfo"
                        }
                    }
                }
            },
            machineKey: {
                readOnly: true,
                serializedName: "machineKey",
                type: {
                    name: "Composite",
                    className: "SiteMachineKey"
                }
            },
            handlerMappings: {
                serializedName: "handlerMappings",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "HandlerMapping"
                        }
                    }
                }
            },
            documentRoot: {
                serializedName: "documentRoot",
                type: {
                    name: "String"
                }
            },
            scmType: {
                serializedName: "scmType",
                type: {
                    name: "String"
                }
            },
            use32BitWorkerProcess: {
                serializedName: "use32BitWorkerProcess",
                type: {
                    name: "Boolean"
                }
            },
            webSocketsEnabled: {
                serializedName: "webSocketsEnabled",
                type: {
                    name: "Boolean"
                }
            },
            alwaysOn: {
                serializedName: "alwaysOn",
                type: {
                    name: "Boolean"
                }
            },
            javaVersion: {
                serializedName: "javaVersion",
                type: {
                    name: "String"
                }
            },
            javaContainer: {
                serializedName: "javaContainer",
                type: {
                    name: "String"
                }
            },
            javaContainerVersion: {
                serializedName: "javaContainerVersion",
                type: {
                    name: "String"
                }
            },
            appCommandLine: {
                serializedName: "appCommandLine",
                type: {
                    name: "String"
                }
            },
            managedPipelineMode: {
                serializedName: "managedPipelineMode",
                type: {
                    name: "Enum",
                    allowedValues: [
                        "Integrated",
                        "Classic"
                    ]
                }
            },
            virtualApplications: {
                serializedName: "virtualApplications",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "VirtualApplication"
                        }
                    }
                }
            },
            loadBalancing: {
                serializedName: "loadBalancing",
                type: {
                    name: "Enum",
                    allowedValues: [
                        "WeightedRoundRobin",
                        "LeastRequests",
                        "LeastResponseTime",
                        "WeightedTotalTraffic",
                        "RequestHash"
                    ]
                }
            },
            experiments: {
                serializedName: "experiments",
                type: {
                    name: "Composite",
                    className: "Experiments"
                }
            },
            limits: {
                serializedName: "limits",
                type: {
                    name: "Composite",
                    className: "SiteLimits"
                }
            },
            autoHealEnabled: {
                serializedName: "autoHealEnabled",
                type: {
                    name: "Boolean"
                }
            },
            autoHealRules: {
                serializedName: "autoHealRules",
                type: {
                    name: "Composite",
                    className: "AutoHealRules"
                }
            },
            tracingOptions: {
                serializedName: "tracingOptions",
                type: {
                    name: "String"
                }
            },
            vnetName: {
                serializedName: "vnetName",
                type: {
                    name: "String"
                }
            },
            vnetRouteAllEnabled: {
                serializedName: "vnetRouteAllEnabled",
                type: {
                    name: "Boolean"
                }
            },
            vnetPrivatePortsCount: {
                serializedName: "vnetPrivatePortsCount",
                type: {
                    name: "Number"
                }
            },
            cors: {
                serializedName: "cors",
                type: {
                    name: "Composite",
                    className: "CorsSettings"
                }
            },
            push: {
                serializedName: "push",
                type: {
                    name: "Composite",
                    className: "PushSettings"
                }
            },
            apiDefinition: {
                serializedName: "apiDefinition",
                type: {
                    name: "Composite",
                    className: "ApiDefinitionInfo"
                }
            },
            apiManagementConfig: {
                serializedName: "apiManagementConfig",
                type: {
                    name: "Composite",
                    className: "ApiManagementConfig"
                }
            },
            autoSwapSlotName: {
                serializedName: "autoSwapSlotName",
                type: {
                    name: "String"
                }
            },
            localMySqlEnabled: {
                serializedName: "localMySqlEnabled",
                defaultValue: false,
                type: {
                    name: "Boolean"
                }
            },
            managedServiceIdentityId: {
                serializedName: "managedServiceIdentityId",
                type: {
                    name: "Number"
                }
            },
            xManagedServiceIdentityId: {
                serializedName: "xManagedServiceIdentityId",
                type: {
                    name: "Number"
                }
            },
            ipSecurityRestrictions: {
                serializedName: "ipSecurityRestrictions",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "IpSecurityRestriction"
                        }
                    }
                }
            },
            scmIpSecurityRestrictions: {
                serializedName: "scmIpSecurityRestrictions",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "IpSecurityRestriction"
                        }
                    }
                }
            },
            scmIpSecurityRestrictionsUseMain: {
                serializedName: "scmIpSecurityRestrictionsUseMain",
                type: {
                    name: "Boolean"
                }
            },
            http20Enabled: {
                serializedName: "http20Enabled",
                defaultValue: true,
                type: {
                    name: "Boolean"
                }
            },
            minTlsVersion: {
                serializedName: "minTlsVersion",
                type: {
                    name: "String"
                }
            },
            scmMinTlsVersion: {
                serializedName: "scmMinTlsVersion",
                type: {
                    name: "String"
                }
            },
            ftpsState: {
                serializedName: "ftpsState",
                type: {
                    name: "String"
                }
            },
            preWarmedInstanceCount: {
                serializedName: "preWarmedInstanceCount",
                constraints: {
                    InclusiveMaximum: 10,
                    InclusiveMinimum: 0
                },
                type: {
                    name: "Number"
                }
            },
            healthCheckPath: {
                serializedName: "healthCheckPath",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var HostNameSslState = {
    serializedName: "HostNameSslState",
    type: {
        name: "Composite",
        className: "HostNameSslState",
        modelProperties: {
            name: {
                serializedName: "name",
                type: {
                    name: "String"
                }
            },
            sslState: {
                serializedName: "sslState",
                type: {
                    name: "Enum",
                    allowedValues: [
                        "Disabled",
                        "SniEnabled",
                        "IpBasedEnabled"
                    ]
                }
            },
            virtualIP: {
                serializedName: "virtualIP",
                type: {
                    name: "String"
                }
            },
            thumbprint: {
                serializedName: "thumbprint",
                type: {
                    name: "String"
                }
            },
            toUpdate: {
                serializedName: "toUpdate",
                type: {
                    name: "Boolean"
                }
            },
            hostType: {
                serializedName: "hostType",
                type: {
                    name: "Enum",
                    allowedValues: [
                        "Standard",
                        "Repository"
                    ]
                }
            }
        }
    }
};
export var Site = {
    serializedName: "Site",
    type: {
        name: "Composite",
        className: "Site",
        modelProperties: __assign(__assign({}, Resource.type.modelProperties), { state: {
                readOnly: true,
                serializedName: "properties.state",
                type: {
                    name: "String"
                }
            }, hostNames: {
                readOnly: true,
                serializedName: "properties.hostNames",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String"
                        }
                    }
                }
            }, repositorySiteName: {
                readOnly: true,
                serializedName: "properties.repositorySiteName",
                type: {
                    name: "String"
                }
            }, usageState: {
                readOnly: true,
                serializedName: "properties.usageState",
                type: {
                    name: "Enum",
                    allowedValues: [
                        "Normal",
                        "Exceeded"
                    ]
                }
            }, enabled: {
                serializedName: "properties.enabled",
                type: {
                    name: "Boolean"
                }
            }, enabledHostNames: {
                readOnly: true,
                serializedName: "properties.enabledHostNames",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String"
                        }
                    }
                }
            }, availabilityState: {
                readOnly: true,
                serializedName: "properties.availabilityState",
                type: {
                    name: "Enum",
                    allowedValues: [
                        "Normal",
                        "Limited",
                        "DisasterRecoveryMode"
                    ]
                }
            }, hostNameSslStates: {
                serializedName: "properties.hostNameSslStates",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "HostNameSslState"
                        }
                    }
                }
            }, serverFarmId: {
                serializedName: "properties.serverFarmId",
                type: {
                    name: "String"
                }
            }, reserved: {
                serializedName: "properties.reserved",
                defaultValue: false,
                type: {
                    name: "Boolean"
                }
            }, isXenon: {
                serializedName: "properties.isXenon",
                defaultValue: false,
                type: {
                    name: "Boolean"
                }
            }, hyperV: {
                serializedName: "properties.hyperV",
                defaultValue: false,
                type: {
                    name: "Boolean"
                }
            }, lastModifiedTimeUtc: {
                readOnly: true,
                serializedName: "properties.lastModifiedTimeUtc",
                type: {
                    name: "DateTime"
                }
            }, siteConfig: {
                serializedName: "properties.siteConfig",
                type: {
                    name: "Composite",
                    className: "SiteConfig"
                }
            }, trafficManagerHostNames: {
                readOnly: true,
                serializedName: "properties.trafficManagerHostNames",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String"
                        }
                    }
                }
            }, scmSiteAlsoStopped: {
                serializedName: "properties.scmSiteAlsoStopped",
                defaultValue: false,
                type: {
                    name: "Boolean"
                }
            }, targetSwapSlot: {
                readOnly: true,
                serializedName: "properties.targetSwapSlot",
                type: {
                    name: "String"
                }
            }, hostingEnvironmentProfile: {
                serializedName: "properties.hostingEnvironmentProfile",
                type: {
                    name: "Composite",
                    className: "HostingEnvironmentProfile"
                }
            }, clientAffinityEnabled: {
                serializedName: "properties.clientAffinityEnabled",
                type: {
                    name: "Boolean"
                }
            }, clientCertEnabled: {
                serializedName: "properties.clientCertEnabled",
                type: {
                    name: "Boolean"
                }
            }, clientCertMode: {
                serializedName: "properties.clientCertMode",
                type: {
                    name: "Enum",
                    allowedValues: [
                        "Required",
                        "Optional"
                    ]
                }
            }, clientCertExclusionPaths: {
                serializedName: "properties.clientCertExclusionPaths",
                type: {
                    name: "String"
                }
            }, hostNamesDisabled: {
                serializedName: "properties.hostNamesDisabled",
                type: {
                    name: "Boolean"
                }
            }, customDomainVerificationId: {
                serializedName: "properties.customDomainVerificationId",
                type: {
                    name: "String"
                }
            }, outboundIpAddresses: {
                readOnly: true,
                serializedName: "properties.outboundIpAddresses",
                type: {
                    name: "String"
                }
            }, possibleOutboundIpAddresses: {
                readOnly: true,
                serializedName: "properties.possibleOutboundIpAddresses",
                type: {
                    name: "String"
                }
            }, containerSize: {
                serializedName: "properties.containerSize",
                type: {
                    name: "Number"
                }
            }, dailyMemoryTimeQuota: {
                serializedName: "properties.dailyMemoryTimeQuota",
                type: {
                    name: "Number"
                }
            }, suspendedTill: {
                readOnly: true,
                serializedName: "properties.suspendedTill",
                type: {
                    name: "DateTime"
                }
            }, maxNumberOfWorkers: {
                readOnly: true,
                serializedName: "properties.maxNumberOfWorkers",
                type: {
                    name: "Number"
                }
            }, cloningInfo: {
                serializedName: "properties.cloningInfo",
                type: {
                    name: "Composite",
                    className: "CloningInfo"
                }
            }, resourceGroup: {
                readOnly: true,
                serializedName: "properties.resourceGroup",
                type: {
                    name: "String"
                }
            }, isDefaultContainer: {
                readOnly: true,
                serializedName: "properties.isDefaultContainer",
                type: {
                    name: "Boolean"
                }
            }, defaultHostName: {
                readOnly: true,
                serializedName: "properties.defaultHostName",
                type: {
                    name: "String"
                }
            }, slotSwapStatus: {
                readOnly: true,
                serializedName: "properties.slotSwapStatus",
                type: {
                    name: "Composite",
                    className: "SlotSwapStatus"
                }
            }, httpsOnly: {
                serializedName: "properties.httpsOnly",
                type: {
                    name: "Boolean"
                }
            }, redundancyMode: {
                serializedName: "properties.redundancyMode",
                type: {
                    name: "Enum",
                    allowedValues: [
                        "None",
                        "Manual",
                        "Failover",
                        "ActiveActive",
                        "GeoRedundant"
                    ]
                }
            }, inProgressOperationId: {
                readOnly: true,
                serializedName: "properties.inProgressOperationId",
                type: {
                    name: "Uuid"
                }
            }, identity: {
                serializedName: "identity",
                type: {
                    name: "Composite",
                    className: "ManagedServiceIdentity"
                }
            } })
    }
};
export var Capability = {
    serializedName: "Capability",
    type: {
        name: "Composite",
        className: "Capability",
        modelProperties: {
            name: {
                serializedName: "name",
                type: {
                    name: "String"
                }
            },
            value: {
                serializedName: "value",
                type: {
                    name: "String"
                }
            },
            reason: {
                serializedName: "reason",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var SkuCapacity = {
    serializedName: "SkuCapacity",
    type: {
        name: "Composite",
        className: "SkuCapacity",
        modelProperties: {
            minimum: {
                serializedName: "minimum",
                type: {
                    name: "Number"
                }
            },
            maximum: {
                serializedName: "maximum",
                type: {
                    name: "Number"
                }
            },
            default: {
                serializedName: "default",
                type: {
                    name: "Number"
                }
            },
            scaleType: {
                serializedName: "scaleType",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var SkuDescription = {
    serializedName: "SkuDescription",
    type: {
        name: "Composite",
        className: "SkuDescription",
        modelProperties: {
            name: {
                serializedName: "name",
                type: {
                    name: "String"
                }
            },
            tier: {
                serializedName: "tier",
                type: {
                    name: "String"
                }
            },
            size: {
                serializedName: "size",
                type: {
                    name: "String"
                }
            },
            family: {
                serializedName: "family",
                type: {
                    name: "String"
                }
            },
            capacity: {
                serializedName: "capacity",
                type: {
                    name: "Number"
                }
            },
            skuCapacity: {
                serializedName: "skuCapacity",
                type: {
                    name: "Composite",
                    className: "SkuCapacity"
                }
            },
            locations: {
                serializedName: "locations",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String"
                        }
                    }
                }
            },
            capabilities: {
                serializedName: "capabilities",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "Capability"
                        }
                    }
                }
            }
        }
    }
};
export var AppServicePlan = {
    serializedName: "AppServicePlan",
    type: {
        name: "Composite",
        className: "AppServicePlan",
        modelProperties: __assign(__assign({}, Resource.type.modelProperties), { workerTierName: {
                serializedName: "properties.workerTierName",
                type: {
                    name: "String"
                }
            }, status: {
                readOnly: true,
                serializedName: "properties.status",
                type: {
                    name: "Enum",
                    allowedValues: [
                        "Ready",
                        "Pending",
                        "Creating"
                    ]
                }
            }, subscription: {
                readOnly: true,
                serializedName: "properties.subscription",
                type: {
                    name: "String"
                }
            }, hostingEnvironmentProfile: {
                serializedName: "properties.hostingEnvironmentProfile",
                type: {
                    name: "Composite",
                    className: "HostingEnvironmentProfile"
                }
            }, maximumNumberOfWorkers: {
                readOnly: true,
                serializedName: "properties.maximumNumberOfWorkers",
                type: {
                    name: "Number"
                }
            }, geoRegion: {
                readOnly: true,
                serializedName: "properties.geoRegion",
                type: {
                    name: "String"
                }
            }, perSiteScaling: {
                serializedName: "properties.perSiteScaling",
                defaultValue: false,
                type: {
                    name: "Boolean"
                }
            }, maximumElasticWorkerCount: {
                serializedName: "properties.maximumElasticWorkerCount",
                type: {
                    name: "Number"
                }
            }, numberOfSites: {
                readOnly: true,
                serializedName: "properties.numberOfSites",
                type: {
                    name: "Number"
                }
            }, isSpot: {
                serializedName: "properties.isSpot",
                type: {
                    name: "Boolean"
                }
            }, spotExpirationTime: {
                serializedName: "properties.spotExpirationTime",
                type: {
                    name: "DateTime"
                }
            }, freeOfferExpirationTime: {
                serializedName: "properties.freeOfferExpirationTime",
                type: {
                    name: "DateTime"
                }
            }, resourceGroup: {
                readOnly: true,
                serializedName: "properties.resourceGroup",
                type: {
                    name: "String"
                }
            }, reserved: {
                serializedName: "properties.reserved",
                defaultValue: false,
                type: {
                    name: "Boolean"
                }
            }, isXenon: {
                serializedName: "properties.isXenon",
                defaultValue: false,
                type: {
                    name: "Boolean"
                }
            }, hyperV: {
                serializedName: "properties.hyperV",
                defaultValue: false,
                type: {
                    name: "Boolean"
                }
            }, targetWorkerCount: {
                serializedName: "properties.targetWorkerCount",
                type: {
                    name: "Number"
                }
            }, targetWorkerSizeId: {
                serializedName: "properties.targetWorkerSizeId",
                type: {
                    name: "Number"
                }
            }, provisioningState: {
                readOnly: true,
                serializedName: "properties.provisioningState",
                type: {
                    name: "Enum",
                    allowedValues: [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "InProgress",
                        "Deleting"
                    ]
                }
            }, sku: {
                serializedName: "sku",
                type: {
                    name: "Composite",
                    className: "SkuDescription"
                }
            } })
    }
};
export var DefaultErrorResponseErrorDetailsItem = {
    serializedName: "DefaultErrorResponse_error_detailsItem",
    type: {
        name: "Composite",
        className: "DefaultErrorResponseErrorDetailsItem",
        modelProperties: {
            code: {
                readOnly: true,
                serializedName: "code",
                type: {
                    name: "String"
                }
            },
            message: {
                readOnly: true,
                serializedName: "message",
                type: {
                    name: "String"
                }
            },
            target: {
                readOnly: true,
                serializedName: "target",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var DefaultErrorResponseError = {
    serializedName: "DefaultErrorResponse_error",
    type: {
        name: "Composite",
        className: "DefaultErrorResponseError",
        modelProperties: {
            code: {
                readOnly: true,
                serializedName: "code",
                type: {
                    name: "String"
                }
            },
            message: {
                readOnly: true,
                serializedName: "message",
                type: {
                    name: "String"
                }
            },
            target: {
                readOnly: true,
                serializedName: "target",
                type: {
                    name: "String"
                }
            },
            details: {
                serializedName: "details",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "DefaultErrorResponseErrorDetailsItem"
                        }
                    }
                }
            },
            innererror: {
                readOnly: true,
                serializedName: "innererror",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var DefaultErrorResponse = {
    serializedName: "DefaultErrorResponse",
    type: {
        name: "Composite",
        className: "DefaultErrorResponse",
        modelProperties: {
            error: {
                readOnly: true,
                serializedName: "error",
                type: {
                    name: "Composite",
                    className: "DefaultErrorResponseError"
                }
            }
        }
    }
};
export var NameIdentifier = {
    serializedName: "NameIdentifier",
    type: {
        name: "Composite",
        className: "NameIdentifier",
        modelProperties: {
            name: {
                serializedName: "name",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var LogSpecification = {
    serializedName: "LogSpecification",
    type: {
        name: "Composite",
        className: "LogSpecification",
        modelProperties: {
            name: {
                serializedName: "name",
                type: {
                    name: "String"
                }
            },
            displayName: {
                serializedName: "displayName",
                type: {
                    name: "String"
                }
            },
            blobDuration: {
                serializedName: "blobDuration",
                type: {
                    name: "String"
                }
            },
            logFilterPattern: {
                serializedName: "logFilterPattern",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var MetricAvailability = {
    serializedName: "MetricAvailability",
    type: {
        name: "Composite",
        className: "MetricAvailability",
        modelProperties: {
            timeGrain: {
                serializedName: "timeGrain",
                type: {
                    name: "String"
                }
            },
            blobDuration: {
                serializedName: "blobDuration",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var Dimension = {
    serializedName: "Dimension",
    type: {
        name: "Composite",
        className: "Dimension",
        modelProperties: {
            name: {
                serializedName: "name",
                type: {
                    name: "String"
                }
            },
            displayName: {
                serializedName: "displayName",
                type: {
                    name: "String"
                }
            },
            internalName: {
                serializedName: "internalName",
                type: {
                    name: "String"
                }
            },
            toBeExportedForShoebox: {
                serializedName: "toBeExportedForShoebox",
                type: {
                    name: "Boolean"
                }
            }
        }
    }
};
export var MetricSpecification = {
    serializedName: "MetricSpecification",
    type: {
        name: "Composite",
        className: "MetricSpecification",
        modelProperties: {
            name: {
                serializedName: "name",
                type: {
                    name: "String"
                }
            },
            displayName: {
                serializedName: "displayName",
                type: {
                    name: "String"
                }
            },
            displayDescription: {
                serializedName: "displayDescription",
                type: {
                    name: "String"
                }
            },
            unit: {
                serializedName: "unit",
                type: {
                    name: "String"
                }
            },
            aggregationType: {
                serializedName: "aggregationType",
                type: {
                    name: "String"
                }
            },
            supportsInstanceLevelAggregation: {
                serializedName: "supportsInstanceLevelAggregation",
                type: {
                    name: "Boolean"
                }
            },
            enableRegionalMdmAccount: {
                serializedName: "enableRegionalMdmAccount",
                type: {
                    name: "Boolean"
                }
            },
            sourceMdmAccount: {
                serializedName: "sourceMdmAccount",
                type: {
                    name: "String"
                }
            },
            sourceMdmNamespace: {
                serializedName: "sourceMdmNamespace",
                type: {
                    name: "String"
                }
            },
            metricFilterPattern: {
                serializedName: "metricFilterPattern",
                type: {
                    name: "String"
                }
            },
            fillGapWithZero: {
                serializedName: "fillGapWithZero",
                type: {
                    name: "Boolean"
                }
            },
            isInternal: {
                serializedName: "isInternal",
                type: {
                    name: "Boolean"
                }
            },
            dimensions: {
                serializedName: "dimensions",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "Dimension"
                        }
                    }
                }
            },
            category: {
                serializedName: "category",
                type: {
                    name: "String"
                }
            },
            availabilities: {
                serializedName: "availabilities",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "MetricAvailability"
                        }
                    }
                }
            },
            supportedTimeGrainTypes: {
                serializedName: "supportedTimeGrainTypes",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String"
                        }
                    }
                }
            },
            supportedAggregationTypes: {
                serializedName: "supportedAggregationTypes",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String"
                        }
                    }
                }
            }
        }
    }
};
export var ServiceSpecification = {
    serializedName: "ServiceSpecification",
    type: {
        name: "Composite",
        className: "ServiceSpecification",
        modelProperties: {
            metricSpecifications: {
                serializedName: "metricSpecifications",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "MetricSpecification"
                        }
                    }
                }
            },
            logSpecifications: {
                serializedName: "logSpecifications",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "LogSpecification"
                        }
                    }
                }
            }
        }
    }
};
export var CsmOperationDescriptionProperties = {
    serializedName: "CsmOperationDescriptionProperties",
    type: {
        name: "Composite",
        className: "CsmOperationDescriptionProperties",
        modelProperties: {
            serviceSpecification: {
                serializedName: "serviceSpecification",
                type: {
                    name: "Composite",
                    className: "ServiceSpecification"
                }
            }
        }
    }
};
export var CsmOperationDisplay = {
    serializedName: "CsmOperationDisplay",
    type: {
        name: "Composite",
        className: "CsmOperationDisplay",
        modelProperties: {
            provider: {
                serializedName: "provider",
                type: {
                    name: "String"
                }
            },
            resource: {
                serializedName: "resource",
                type: {
                    name: "String"
                }
            },
            operation: {
                serializedName: "operation",
                type: {
                    name: "String"
                }
            },
            description: {
                serializedName: "description",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var CsmOperationDescription = {
    serializedName: "CsmOperationDescription",
    type: {
        name: "Composite",
        className: "CsmOperationDescription",
        modelProperties: {
            name: {
                serializedName: "name",
                type: {
                    name: "String"
                }
            },
            display: {
                serializedName: "display",
                type: {
                    name: "Composite",
                    className: "CsmOperationDisplay"
                }
            },
            origin: {
                serializedName: "origin",
                type: {
                    name: "String"
                }
            },
            properties: {
                serializedName: "properties",
                type: {
                    name: "Composite",
                    className: "CsmOperationDescriptionProperties"
                }
            }
        }
    }
};
export var Address = {
    serializedName: "Address",
    type: {
        name: "Composite",
        className: "Address",
        modelProperties: {
            address1: {
                required: true,
                serializedName: "address1",
                type: {
                    name: "String"
                }
            },
            address2: {
                serializedName: "address2",
                type: {
                    name: "String"
                }
            },
            city: {
                required: true,
                serializedName: "city",
                type: {
                    name: "String"
                }
            },
            country: {
                required: true,
                serializedName: "country",
                type: {
                    name: "String"
                }
            },
            postalCode: {
                required: true,
                serializedName: "postalCode",
                type: {
                    name: "String"
                }
            },
            state: {
                required: true,
                serializedName: "state",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var Contact = {
    serializedName: "Contact",
    type: {
        name: "Composite",
        className: "Contact",
        modelProperties: {
            addressMailing: {
                serializedName: "addressMailing",
                type: {
                    name: "Composite",
                    className: "Address"
                }
            },
            email: {
                required: true,
                serializedName: "email",
                type: {
                    name: "String"
                }
            },
            fax: {
                serializedName: "fax",
                type: {
                    name: "String"
                }
            },
            jobTitle: {
                serializedName: "jobTitle",
                type: {
                    name: "String"
                }
            },
            nameFirst: {
                required: true,
                serializedName: "nameFirst",
                type: {
                    name: "String"
                }
            },
            nameLast: {
                required: true,
                serializedName: "nameLast",
                type: {
                    name: "String"
                }
            },
            nameMiddle: {
                serializedName: "nameMiddle",
                type: {
                    name: "String"
                }
            },
            organization: {
                serializedName: "organization",
                type: {
                    name: "String"
                }
            },
            phone: {
                required: true,
                serializedName: "phone",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var HostName = {
    serializedName: "HostName",
    type: {
        name: "Composite",
        className: "HostName",
        modelProperties: {
            name: {
                serializedName: "name",
                type: {
                    name: "String"
                }
            },
            siteNames: {
                serializedName: "siteNames",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String"
                        }
                    }
                }
            },
            azureResourceName: {
                serializedName: "azureResourceName",
                type: {
                    name: "String"
                }
            },
            azureResourceType: {
                serializedName: "azureResourceType",
                type: {
                    name: "Enum",
                    allowedValues: [
                        "Website",
                        "TrafficManager"
                    ]
                }
            },
            customHostNameDnsRecordType: {
                serializedName: "customHostNameDnsRecordType",
                type: {
                    name: "Enum",
                    allowedValues: [
                        "CName",
                        "A"
                    ]
                }
            },
            hostNameType: {
                serializedName: "hostNameType",
                type: {
                    name: "Enum",
                    allowedValues: [
                        "Verified",
                        "Managed"
                    ]
                }
            }
        }
    }
};
export var DomainPurchaseConsent = {
    serializedName: "DomainPurchaseConsent",
    type: {
        name: "Composite",
        className: "DomainPurchaseConsent",
        modelProperties: {
            agreementKeys: {
                serializedName: "agreementKeys",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String"
                        }
                    }
                }
            },
            agreedBy: {
                serializedName: "agreedBy",
                type: {
                    name: "String"
                }
            },
            agreedAt: {
                serializedName: "agreedAt",
                type: {
                    name: "DateTime"
                }
            }
        }
    }
};
export var Domain = {
    serializedName: "Domain",
    type: {
        name: "Composite",
        className: "Domain",
        modelProperties: __assign(__assign({}, Resource.type.modelProperties), { contactAdmin: {
                required: true,
                serializedName: "properties.contactAdmin",
                type: {
                    name: "Composite",
                    className: "Contact"
                }
            }, contactBilling: {
                required: true,
                serializedName: "properties.contactBilling",
                type: {
                    name: "Composite",
                    className: "Contact"
                }
            }, contactRegistrant: {
                required: true,
                serializedName: "properties.contactRegistrant",
                type: {
                    name: "Composite",
                    className: "Contact"
                }
            }, contactTech: {
                required: true,
                serializedName: "properties.contactTech",
                type: {
                    name: "Composite",
                    className: "Contact"
                }
            }, registrationStatus: {
                readOnly: true,
                serializedName: "properties.registrationStatus",
                type: {
                    name: "Enum",
                    allowedValues: [
                        "Active",
                        "Awaiting",
                        "Cancelled",
                        "Confiscated",
                        "Disabled",
                        "Excluded",
                        "Expired",
                        "Failed",
                        "Held",
                        "Locked",
                        "Parked",
                        "Pending",
                        "Reserved",
                        "Reverted",
                        "Suspended",
                        "Transferred",
                        "Unknown",
                        "Unlocked",
                        "Unparked",
                        "Updated",
                        "JsonConverterFailed"
                    ]
                }
            }, provisioningState: {
                readOnly: true,
                serializedName: "properties.provisioningState",
                type: {
                    name: "Enum",
                    allowedValues: [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "InProgress",
                        "Deleting"
                    ]
                }
            }, nameServers: {
                readOnly: true,
                serializedName: "properties.nameServers",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String"
                        }
                    }
                }
            }, privacy: {
                serializedName: "properties.privacy",
                type: {
                    name: "Boolean"
                }
            }, createdTime: {
                readOnly: true,
                serializedName: "properties.createdTime",
                type: {
                    name: "DateTime"
                }
            }, expirationTime: {
                readOnly: true,
                serializedName: "properties.expirationTime",
                type: {
                    name: "DateTime"
                }
            }, lastRenewedTime: {
                readOnly: true,
                serializedName: "properties.lastRenewedTime",
                type: {
                    name: "DateTime"
                }
            }, autoRenew: {
                serializedName: "properties.autoRenew",
                defaultValue: true,
                type: {
                    name: "Boolean"
                }
            }, readyForDnsRecordManagement: {
                readOnly: true,
                serializedName: "properties.readyForDnsRecordManagement",
                type: {
                    name: "Boolean"
                }
            }, managedHostNames: {
                readOnly: true,
                serializedName: "properties.managedHostNames",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "HostName"
                        }
                    }
                }
            }, consent: {
                required: true,
                serializedName: "properties.consent",
                type: {
                    name: "Composite",
                    className: "DomainPurchaseConsent"
                }
            }, domainNotRenewableReasons: {
                readOnly: true,
                serializedName: "properties.domainNotRenewableReasons",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String"
                        }
                    }
                }
            }, dnsType: {
                serializedName: "properties.dnsType",
                type: {
                    name: "Enum",
                    allowedValues: [
                        "AzureDns",
                        "DefaultDomainRegistrarDns"
                    ]
                }
            }, dnsZoneId: {
                serializedName: "properties.dnsZoneId",
                type: {
                    name: "String"
                }
            }, targetDnsType: {
                serializedName: "properties.targetDnsType",
                type: {
                    name: "Enum",
                    allowedValues: [
                        "AzureDns",
                        "DefaultDomainRegistrarDns"
                    ]
                }
            }, authCode: {
                serializedName: "properties.authCode",
                type: {
                    name: "String"
                }
            } })
    }
};
export var DomainAvailabilityCheckResult = {
    serializedName: "DomainAvailabilityCheckResult",
    type: {
        name: "Composite",
        className: "DomainAvailabilityCheckResult",
        modelProperties: {
            name: {
                serializedName: "name",
                type: {
                    name: "String"
                }
            },
            available: {
                serializedName: "available",
                type: {
                    name: "Boolean"
                }
            },
            domainType: {
                serializedName: "domainType",
                type: {
                    name: "Enum",
                    allowedValues: [
                        "Regular",
                        "SoftDeleted"
                    ]
                }
            }
        }
    }
};
export var DomainControlCenterSsoRequest = {
    serializedName: "DomainControlCenterSsoRequest",
    type: {
        name: "Composite",
        className: "DomainControlCenterSsoRequest",
        modelProperties: {
            url: {
                readOnly: true,
                serializedName: "url",
                type: {
                    name: "String"
                }
            },
            postParameterKey: {
                readOnly: true,
                serializedName: "postParameterKey",
                type: {
                    name: "String"
                }
            },
            postParameterValue: {
                readOnly: true,
                serializedName: "postParameterValue",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var DomainOwnershipIdentifier = {
    serializedName: "DomainOwnershipIdentifier",
    type: {
        name: "Composite",
        className: "DomainOwnershipIdentifier",
        modelProperties: __assign(__assign({}, ProxyOnlyResource.type.modelProperties), { ownershipId: {
                serializedName: "properties.ownershipId",
                type: {
                    name: "String"
                }
            } })
    }
};
export var DomainPatchResource = {
    serializedName: "DomainPatchResource",
    type: {
        name: "Composite",
        className: "DomainPatchResource",
        modelProperties: __assign(__assign({}, ProxyOnlyResource.type.modelProperties), { contactAdmin: {
                required: true,
                serializedName: "properties.contactAdmin",
                type: {
                    name: "Composite",
                    className: "Contact"
                }
            }, contactBilling: {
                required: true,
                serializedName: "properties.contactBilling",
                type: {
                    name: "Composite",
                    className: "Contact"
                }
            }, contactRegistrant: {
                required: true,
                serializedName: "properties.contactRegistrant",
                type: {
                    name: "Composite",
                    className: "Contact"
                }
            }, contactTech: {
                required: true,
                serializedName: "properties.contactTech",
                type: {
                    name: "Composite",
                    className: "Contact"
                }
            }, registrationStatus: {
                readOnly: true,
                serializedName: "properties.registrationStatus",
                type: {
                    name: "Enum",
                    allowedValues: [
                        "Active",
                        "Awaiting",
                        "Cancelled",
                        "Confiscated",
                        "Disabled",
                        "Excluded",
                        "Expired",
                        "Failed",
                        "Held",
                        "Locked",
                        "Parked",
                        "Pending",
                        "Reserved",
                        "Reverted",
                        "Suspended",
                        "Transferred",
                        "Unknown",
                        "Unlocked",
                        "Unparked",
                        "Updated",
                        "JsonConverterFailed"
                    ]
                }
            }, provisioningState: {
                readOnly: true,
                serializedName: "properties.provisioningState",
                type: {
                    name: "Enum",
                    allowedValues: [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "InProgress",
                        "Deleting"
                    ]
                }
            }, nameServers: {
                readOnly: true,
                serializedName: "properties.nameServers",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String"
                        }
                    }
                }
            }, privacy: {
                serializedName: "properties.privacy",
                type: {
                    name: "Boolean"
                }
            }, createdTime: {
                readOnly: true,
                serializedName: "properties.createdTime",
                type: {
                    name: "DateTime"
                }
            }, expirationTime: {
                readOnly: true,
                serializedName: "properties.expirationTime",
                type: {
                    name: "DateTime"
                }
            }, lastRenewedTime: {
                readOnly: true,
                serializedName: "properties.lastRenewedTime",
                type: {
                    name: "DateTime"
                }
            }, autoRenew: {
                serializedName: "properties.autoRenew",
                defaultValue: true,
                type: {
                    name: "Boolean"
                }
            }, readyForDnsRecordManagement: {
                readOnly: true,
                serializedName: "properties.readyForDnsRecordManagement",
                type: {
                    name: "Boolean"
                }
            }, managedHostNames: {
                readOnly: true,
                serializedName: "properties.managedHostNames",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "HostName"
                        }
                    }
                }
            }, consent: {
                required: true,
                serializedName: "properties.consent",
                type: {
                    name: "Composite",
                    className: "DomainPurchaseConsent"
                }
            }, domainNotRenewableReasons: {
                readOnly: true,
                serializedName: "properties.domainNotRenewableReasons",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String"
                        }
                    }
                }
            }, dnsType: {
                serializedName: "properties.dnsType",
                type: {
                    name: "Enum",
                    allowedValues: [
                        "AzureDns",
                        "DefaultDomainRegistrarDns"
                    ]
                }
            }, dnsZoneId: {
                serializedName: "properties.dnsZoneId",
                type: {
                    name: "String"
                }
            }, targetDnsType: {
                serializedName: "properties.targetDnsType",
                type: {
                    name: "Enum",
                    allowedValues: [
                        "AzureDns",
                        "DefaultDomainRegistrarDns"
                    ]
                }
            }, authCode: {
                serializedName: "properties.authCode",
                type: {
                    name: "String"
                }
            } })
    }
};
export var DomainRecommendationSearchParameters = {
    serializedName: "DomainRecommendationSearchParameters",
    type: {
        name: "Composite",
        className: "DomainRecommendationSearchParameters",
        modelProperties: {
            keywords: {
                serializedName: "keywords",
                type: {
                    name: "String"
                }
            },
            maxDomainRecommendations: {
                serializedName: "maxDomainRecommendations",
                type: {
                    name: "Number"
                }
            }
        }
    }
};
export var TldLegalAgreement = {
    serializedName: "TldLegalAgreement",
    type: {
        name: "Composite",
        className: "TldLegalAgreement",
        modelProperties: {
            agreementKey: {
                required: true,
                serializedName: "agreementKey",
                type: {
                    name: "String"
                }
            },
            title: {
                required: true,
                serializedName: "title",
                type: {
                    name: "String"
                }
            },
            content: {
                required: true,
                serializedName: "content",
                type: {
                    name: "String"
                }
            },
            url: {
                serializedName: "url",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var TopLevelDomain = {
    serializedName: "TopLevelDomain",
    type: {
        name: "Composite",
        className: "TopLevelDomain",
        modelProperties: __assign(__assign({}, ProxyOnlyResource.type.modelProperties), { privacy: {
                serializedName: "properties.privacy",
                type: {
                    name: "Boolean"
                }
            } })
    }
};
export var TopLevelDomainAgreementOption = {
    serializedName: "TopLevelDomainAgreementOption",
    type: {
        name: "Composite",
        className: "TopLevelDomainAgreementOption",
        modelProperties: {
            includePrivacy: {
                serializedName: "includePrivacy",
                type: {
                    name: "Boolean"
                }
            },
            forTransfer: {
                serializedName: "forTransfer",
                type: {
                    name: "Boolean"
                }
            }
        }
    }
};
export var Certificate = {
    serializedName: "Certificate",
    type: {
        name: "Composite",
        className: "Certificate",
        modelProperties: __assign(__assign({}, Resource.type.modelProperties), { friendlyName: {
                readOnly: true,
                serializedName: "properties.friendlyName",
                type: {
                    name: "String"
                }
            }, subjectName: {
                readOnly: true,
                serializedName: "properties.subjectName",
                type: {
                    name: "String"
                }
            }, hostNames: {
                serializedName: "properties.hostNames",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String"
                        }
                    }
                }
            }, pfxBlob: {
                serializedName: "properties.pfxBlob",
                type: {
                    name: "ByteArray"
                }
            }, siteName: {
                readOnly: true,
                serializedName: "properties.siteName",
                type: {
                    name: "String"
                }
            }, selfLink: {
                readOnly: true,
                serializedName: "properties.selfLink",
                type: {
                    name: "String"
                }
            }, issuer: {
                readOnly: true,
                serializedName: "properties.issuer",
                type: {
                    name: "String"
                }
            }, issueDate: {
                readOnly: true,
                serializedName: "properties.issueDate",
                type: {
                    name: "DateTime"
                }
            }, expirationDate: {
                readOnly: true,
                serializedName: "properties.expirationDate",
                type: {
                    name: "DateTime"
                }
            }, password: {
                required: true,
                serializedName: "properties.password",
                type: {
                    name: "String"
                }
            }, thumbprint: {
                readOnly: true,
                serializedName: "properties.thumbprint",
                type: {
                    name: "String"
                }
            }, valid: {
                readOnly: true,
                serializedName: "properties.valid",
                type: {
                    name: "Boolean"
                }
            }, cerBlob: {
                readOnly: true,
                serializedName: "properties.cerBlob",
                type: {
                    name: "ByteArray"
                }
            }, publicKeyHash: {
                readOnly: true,
                serializedName: "properties.publicKeyHash",
                type: {
                    name: "String"
                }
            }, hostingEnvironmentProfile: {
                readOnly: true,
                serializedName: "properties.hostingEnvironmentProfile",
                type: {
                    name: "Composite",
                    className: "HostingEnvironmentProfile"
                }
            }, keyVaultId: {
                serializedName: "properties.keyVaultId",
                type: {
                    name: "String"
                }
            }, keyVaultSecretName: {
                serializedName: "properties.keyVaultSecretName",
                type: {
                    name: "String"
                }
            }, keyVaultSecretStatus: {
                readOnly: true,
                serializedName: "properties.keyVaultSecretStatus",
                type: {
                    name: "Enum",
                    allowedValues: [
                        "Initialized",
                        "WaitingOnCertificateOrder",
                        "Succeeded",
                        "CertificateOrderFailed",
                        "OperationNotPermittedOnKeyVault",
                        "AzureServiceUnauthorizedToAccessKeyVault",
                        "KeyVaultDoesNotExist",
                        "KeyVaultSecretDoesNotExist",
                        "UnknownError",
                        "ExternalPrivateKey",
                        "Unknown"
                    ]
                }
            }, serverFarmId: {
                serializedName: "properties.serverFarmId",
                type: {
                    name: "String"
                }
            }, canonicalName: {
                serializedName: "properties.canonicalName",
                type: {
                    name: "String"
                }
            } })
    }
};
export var CertificatePatchResource = {
    serializedName: "CertificatePatchResource",
    type: {
        name: "Composite",
        className: "CertificatePatchResource",
        modelProperties: __assign(__assign({}, ProxyOnlyResource.type.modelProperties), { friendlyName: {
                readOnly: true,
                serializedName: "properties.friendlyName",
                type: {
                    name: "String"
                }
            }, subjectName: {
                readOnly: true,
                serializedName: "properties.subjectName",
                type: {
                    name: "String"
                }
            }, hostNames: {
                serializedName: "properties.hostNames",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String"
                        }
                    }
                }
            }, pfxBlob: {
                serializedName: "properties.pfxBlob",
                type: {
                    name: "ByteArray"
                }
            }, siteName: {
                readOnly: true,
                serializedName: "properties.siteName",
                type: {
                    name: "String"
                }
            }, selfLink: {
                readOnly: true,
                serializedName: "properties.selfLink",
                type: {
                    name: "String"
                }
            }, issuer: {
                readOnly: true,
                serializedName: "properties.issuer",
                type: {
                    name: "String"
                }
            }, issueDate: {
                readOnly: true,
                serializedName: "properties.issueDate",
                type: {
                    name: "DateTime"
                }
            }, expirationDate: {
                readOnly: true,
                serializedName: "properties.expirationDate",
                type: {
                    name: "DateTime"
                }
            }, password: {
                required: true,
                serializedName: "properties.password",
                type: {
                    name: "String"
                }
            }, thumbprint: {
                readOnly: true,
                serializedName: "properties.thumbprint",
                type: {
                    name: "String"
                }
            }, valid: {
                readOnly: true,
                serializedName: "properties.valid",
                type: {
                    name: "Boolean"
                }
            }, cerBlob: {
                readOnly: true,
                serializedName: "properties.cerBlob",
                type: {
                    name: "ByteArray"
                }
            }, publicKeyHash: {
                readOnly: true,
                serializedName: "properties.publicKeyHash",
                type: {
                    name: "String"
                }
            }, hostingEnvironmentProfile: {
                readOnly: true,
                serializedName: "properties.hostingEnvironmentProfile",
                type: {
                    name: "Composite",
                    className: "HostingEnvironmentProfile"
                }
            }, keyVaultId: {
                serializedName: "properties.keyVaultId",
                type: {
                    name: "String"
                }
            }, keyVaultSecretName: {
                serializedName: "properties.keyVaultSecretName",
                type: {
                    name: "String"
                }
            }, keyVaultSecretStatus: {
                readOnly: true,
                serializedName: "properties.keyVaultSecretStatus",
                type: {
                    name: "Enum",
                    allowedValues: [
                        "Initialized",
                        "WaitingOnCertificateOrder",
                        "Succeeded",
                        "CertificateOrderFailed",
                        "OperationNotPermittedOnKeyVault",
                        "AzureServiceUnauthorizedToAccessKeyVault",
                        "KeyVaultDoesNotExist",
                        "KeyVaultSecretDoesNotExist",
                        "UnknownError",
                        "ExternalPrivateKey",
                        "Unknown"
                    ]
                }
            }, serverFarmId: {
                serializedName: "properties.serverFarmId",
                type: {
                    name: "String"
                }
            }, canonicalName: {
                serializedName: "properties.canonicalName",
                type: {
                    name: "String"
                }
            } })
    }
};
export var VirtualNetworkProfile = {
    serializedName: "VirtualNetworkProfile",
    type: {
        name: "Composite",
        className: "VirtualNetworkProfile",
        modelProperties: {
            id: {
                serializedName: "id",
                type: {
                    name: "String"
                }
            },
            name: {
                readOnly: true,
                serializedName: "name",
                type: {
                    name: "String"
                }
            },
            type: {
                readOnly: true,
                serializedName: "type",
                type: {
                    name: "String"
                }
            },
            subnet: {
                serializedName: "subnet",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var WorkerPool = {
    serializedName: "WorkerPool",
    type: {
        name: "Composite",
        className: "WorkerPool",
        modelProperties: {
            workerSizeId: {
                serializedName: "workerSizeId",
                type: {
                    name: "Number"
                }
            },
            computeMode: {
                serializedName: "computeMode",
                type: {
                    name: "Enum",
                    allowedValues: [
                        "Shared",
                        "Dedicated",
                        "Dynamic"
                    ]
                }
            },
            workerSize: {
                serializedName: "workerSize",
                type: {
                    name: "String"
                }
            },
            workerCount: {
                serializedName: "workerCount",
                type: {
                    name: "Number"
                }
            },
            instanceNames: {
                readOnly: true,
                serializedName: "instanceNames",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String"
                        }
                    }
                }
            }
        }
    }
};
export var VirtualIPMapping = {
    serializedName: "VirtualIPMapping",
    type: {
        name: "Composite",
        className: "VirtualIPMapping",
        modelProperties: {
            virtualIP: {
                serializedName: "virtualIP",
                type: {
                    name: "String"
                }
            },
            internalHttpPort: {
                serializedName: "internalHttpPort",
                type: {
                    name: "Number"
                }
            },
            internalHttpsPort: {
                serializedName: "internalHttpsPort",
                type: {
                    name: "Number"
                }
            },
            inUse: {
                serializedName: "inUse",
                type: {
                    name: "Boolean"
                }
            },
            serviceName: {
                serializedName: "serviceName",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var StampCapacity = {
    serializedName: "StampCapacity",
    type: {
        name: "Composite",
        className: "StampCapacity",
        modelProperties: {
            name: {
                serializedName: "name",
                type: {
                    name: "String"
                }
            },
            availableCapacity: {
                serializedName: "availableCapacity",
                type: {
                    name: "Number"
                }
            },
            totalCapacity: {
                serializedName: "totalCapacity",
                type: {
                    name: "Number"
                }
            },
            unit: {
                serializedName: "unit",
                type: {
                    name: "String"
                }
            },
            computeMode: {
                serializedName: "computeMode",
                type: {
                    name: "Enum",
                    allowedValues: [
                        "Shared",
                        "Dedicated",
                        "Dynamic"
                    ]
                }
            },
            workerSize: {
                serializedName: "workerSize",
                type: {
                    name: "Enum",
                    allowedValues: [
                        "Small",
                        "Medium",
                        "Large",
                        "D1",
                        "D2",
                        "D3",
                        "NestedSmall",
                        "Default"
                    ]
                }
            },
            workerSizeId: {
                serializedName: "workerSizeId",
                type: {
                    name: "Number"
                }
            },
            excludeFromCapacityAllocation: {
                serializedName: "excludeFromCapacityAllocation",
                type: {
                    name: "Boolean"
                }
            },
            isApplicableForAllComputeModes: {
                serializedName: "isApplicableForAllComputeModes",
                type: {
                    name: "Boolean"
                }
            },
            siteMode: {
                serializedName: "siteMode",
                type: {
                    name: "String"
                }
            },
            isLinux: {
                serializedName: "isLinux",
                type: {
                    name: "Boolean"
                }
            }
        }
    }
};
export var NetworkAccessControlEntry = {
    serializedName: "NetworkAccessControlEntry",
    type: {
        name: "Composite",
        className: "NetworkAccessControlEntry",
        modelProperties: {
            action: {
                serializedName: "action",
                type: {
                    name: "Enum",
                    allowedValues: [
                        "Permit",
                        "Deny"
                    ]
                }
            },
            description: {
                serializedName: "description",
                type: {
                    name: "String"
                }
            },
            order: {
                serializedName: "order",
                type: {
                    name: "Number"
                }
            },
            remoteSubnet: {
                serializedName: "remoteSubnet",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var AppServiceEnvironment = {
    serializedName: "AppServiceEnvironment",
    type: {
        name: "Composite",
        className: "AppServiceEnvironment",
        modelProperties: {
            name: {
                required: true,
                serializedName: "name",
                type: {
                    name: "String"
                }
            },
            location: {
                required: true,
                serializedName: "location",
                type: {
                    name: "String"
                }
            },
            provisioningState: {
                readOnly: true,
                serializedName: "provisioningState",
                type: {
                    name: "Enum",
                    allowedValues: [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "InProgress",
                        "Deleting"
                    ]
                }
            },
            status: {
                readOnly: true,
                serializedName: "status",
                type: {
                    name: "Enum",
                    allowedValues: [
                        "Preparing",
                        "Ready",
                        "Scaling",
                        "Deleting"
                    ]
                }
            },
            vnetName: {
                serializedName: "vnetName",
                type: {
                    name: "String"
                }
            },
            vnetResourceGroupName: {
                serializedName: "vnetResourceGroupName",
                type: {
                    name: "String"
                }
            },
            vnetSubnetName: {
                serializedName: "vnetSubnetName",
                type: {
                    name: "String"
                }
            },
            virtualNetwork: {
                required: true,
                serializedName: "virtualNetwork",
                type: {
                    name: "Composite",
                    className: "VirtualNetworkProfile"
                }
            },
            internalLoadBalancingMode: {
                serializedName: "internalLoadBalancingMode",
                type: {
                    name: "String"
                }
            },
            multiSize: {
                serializedName: "multiSize",
                type: {
                    name: "String"
                }
            },
            multiRoleCount: {
                serializedName: "multiRoleCount",
                type: {
                    name: "Number"
                }
            },
            workerPools: {
                required: true,
                serializedName: "workerPools",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "WorkerPool"
                        }
                    }
                }
            },
            ipsslAddressCount: {
                serializedName: "ipsslAddressCount",
                type: {
                    name: "Number"
                }
            },
            databaseEdition: {
                readOnly: true,
                serializedName: "databaseEdition",
                type: {
                    name: "String"
                }
            },
            databaseServiceObjective: {
                readOnly: true,
                serializedName: "databaseServiceObjective",
                type: {
                    name: "String"
                }
            },
            upgradeDomains: {
                readOnly: true,
                serializedName: "upgradeDomains",
                type: {
                    name: "Number"
                }
            },
            subscriptionId: {
                readOnly: true,
                serializedName: "subscriptionId",
                type: {
                    name: "String"
                }
            },
            dnsSuffix: {
                serializedName: "dnsSuffix",
                type: {
                    name: "String"
                }
            },
            lastAction: {
                readOnly: true,
                serializedName: "lastAction",
                type: {
                    name: "String"
                }
            },
            lastActionResult: {
                readOnly: true,
                serializedName: "lastActionResult",
                type: {
                    name: "String"
                }
            },
            allowedMultiSizes: {
                readOnly: true,
                serializedName: "allowedMultiSizes",
                type: {
                    name: "String"
                }
            },
            allowedWorkerSizes: {
                readOnly: true,
                serializedName: "allowedWorkerSizes",
                type: {
                    name: "String"
                }
            },
            maximumNumberOfMachines: {
                readOnly: true,
                serializedName: "maximumNumberOfMachines",
                type: {
                    name: "Number"
                }
            },
            vipMappings: {
                readOnly: true,
                serializedName: "vipMappings",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "VirtualIPMapping"
                        }
                    }
                }
            },
            environmentCapacities: {
                readOnly: true,
                serializedName: "environmentCapacities",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "StampCapacity"
                        }
                    }
                }
            },
            networkAccessControlList: {
                serializedName: "networkAccessControlList",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "NetworkAccessControlEntry"
                        }
                    }
                }
            },
            environmentIsHealthy: {
                readOnly: true,
                serializedName: "environmentIsHealthy",
                type: {
                    name: "Boolean"
                }
            },
            environmentStatus: {
                readOnly: true,
                serializedName: "environmentStatus",
                type: {
                    name: "String"
                }
            },
            resourceGroup: {
                readOnly: true,
                serializedName: "resourceGroup",
                type: {
                    name: "String"
                }
            },
            frontEndScaleFactor: {
                serializedName: "frontEndScaleFactor",
                type: {
                    name: "Number"
                }
            },
            defaultFrontEndScaleFactor: {
                readOnly: true,
                serializedName: "defaultFrontEndScaleFactor",
                type: {
                    name: "Number"
                }
            },
            apiManagementAccountId: {
                serializedName: "apiManagementAccountId",
                type: {
                    name: "String"
                }
            },
            suspended: {
                serializedName: "suspended",
                type: {
                    name: "Boolean"
                }
            },
            dynamicCacheEnabled: {
                serializedName: "dynamicCacheEnabled",
                type: {
                    name: "Boolean"
                }
            },
            clusterSettings: {
                serializedName: "clusterSettings",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "NameValuePair"
                        }
                    }
                }
            },
            userWhitelistedIpRanges: {
                serializedName: "userWhitelistedIpRanges",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String"
                        }
                    }
                }
            },
            hasLinuxWorkers: {
                serializedName: "hasLinuxWorkers",
                type: {
                    name: "Boolean"
                }
            },
            sslCertKeyVaultId: {
                serializedName: "sslCertKeyVaultId",
                type: {
                    name: "String"
                }
            },
            sslCertKeyVaultSecretName: {
                serializedName: "sslCertKeyVaultSecretName",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var LocalizableString = {
    serializedName: "LocalizableString",
    type: {
        name: "Composite",
        className: "LocalizableString",
        modelProperties: {
            value: {
                serializedName: "value",
                type: {
                    name: "String"
                }
            },
            localizedValue: {
                serializedName: "localizedValue",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var CsmUsageQuota = {
    serializedName: "CsmUsageQuota",
    type: {
        name: "Composite",
        className: "CsmUsageQuota",
        modelProperties: {
            unit: {
                serializedName: "unit",
                type: {
                    name: "String"
                }
            },
            nextResetTime: {
                serializedName: "nextResetTime",
                type: {
                    name: "DateTime"
                }
            },
            currentValue: {
                serializedName: "currentValue",
                type: {
                    name: "Number"
                }
            },
            limit: {
                serializedName: "limit",
                type: {
                    name: "Number"
                }
            },
            name: {
                serializedName: "name",
                type: {
                    name: "Composite",
                    className: "LocalizableString"
                }
            }
        }
    }
};
export var ErrorEntity = {
    serializedName: "ErrorEntity",
    type: {
        name: "Composite",
        className: "ErrorEntity",
        modelProperties: {
            extendedCode: {
                serializedName: "extendedCode",
                type: {
                    name: "String"
                }
            },
            messageTemplate: {
                serializedName: "messageTemplate",
                type: {
                    name: "String"
                }
            },
            parameters: {
                serializedName: "parameters",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String"
                        }
                    }
                }
            },
            innerErrors: {
                serializedName: "innerErrors",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "ErrorEntity"
                        }
                    }
                }
            },
            code: {
                serializedName: "code",
                type: {
                    name: "String"
                }
            },
            message: {
                serializedName: "message",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var Operation = {
    serializedName: "Operation",
    type: {
        name: "Composite",
        className: "Operation",
        modelProperties: {
            id: {
                serializedName: "id",
                type: {
                    name: "String"
                }
            },
            name: {
                serializedName: "name",
                type: {
                    name: "String"
                }
            },
            status: {
                serializedName: "status",
                type: {
                    name: "Enum",
                    allowedValues: [
                        "InProgress",
                        "Failed",
                        "Succeeded",
                        "TimedOut",
                        "Created"
                    ]
                }
            },
            errors: {
                serializedName: "errors",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "ErrorEntity"
                        }
                    }
                }
            },
            createdTime: {
                serializedName: "createdTime",
                type: {
                    name: "DateTime"
                }
            },
            modifiedTime: {
                serializedName: "modifiedTime",
                type: {
                    name: "DateTime"
                }
            },
            expirationTime: {
                serializedName: "expirationTime",
                type: {
                    name: "DateTime"
                }
            },
            geoMasterOperationId: {
                serializedName: "geoMasterOperationId",
                type: {
                    name: "Uuid"
                }
            }
        }
    }
};
export var Solution = {
    serializedName: "Solution",
    type: {
        name: "Composite",
        className: "Solution",
        modelProperties: {
            id: {
                serializedName: "id",
                type: {
                    name: "Number"
                }
            },
            displayName: {
                serializedName: "displayName",
                type: {
                    name: "String"
                }
            },
            order: {
                serializedName: "order",
                type: {
                    name: "Number"
                }
            },
            description: {
                serializedName: "description",
                type: {
                    name: "String"
                }
            },
            type: {
                serializedName: "type",
                type: {
                    name: "Enum",
                    allowedValues: [
                        "QuickSolution",
                        "DeepInvestigation",
                        "BestPractices"
                    ]
                }
            },
            data: {
                serializedName: "data",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Sequence",
                            element: {
                                type: {
                                    name: "Composite",
                                    className: "NameValuePair"
                                }
                            }
                        }
                    }
                }
            },
            metadata: {
                serializedName: "metadata",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Sequence",
                            element: {
                                type: {
                                    name: "Composite",
                                    className: "NameValuePair"
                                }
                            }
                        }
                    }
                }
            }
        }
    }
};
export var DetectorAbnormalTimePeriod = {
    serializedName: "DetectorAbnormalTimePeriod",
    type: {
        name: "Composite",
        className: "DetectorAbnormalTimePeriod",
        modelProperties: {
            startTime: {
                serializedName: "startTime",
                type: {
                    name: "DateTime"
                }
            },
            endTime: {
                serializedName: "endTime",
                type: {
                    name: "DateTime"
                }
            },
            message: {
                serializedName: "message",
                type: {
                    name: "String"
                }
            },
            source: {
                serializedName: "source",
                type: {
                    name: "String"
                }
            },
            priority: {
                serializedName: "priority",
                type: {
                    name: "Number"
                }
            },
            metaData: {
                serializedName: "metaData",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Sequence",
                            element: {
                                type: {
                                    name: "Composite",
                                    className: "NameValuePair"
                                }
                            }
                        }
                    }
                }
            },
            type: {
                serializedName: "type",
                type: {
                    name: "Enum",
                    allowedValues: [
                        "ServiceIncident",
                        "AppDeployment",
                        "AppCrash",
                        "RuntimeIssueDetected",
                        "AseDeployment",
                        "UserIssue",
                        "PlatformIssue",
                        "Other"
                    ]
                }
            },
            solutions: {
                serializedName: "solutions",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "Solution"
                        }
                    }
                }
            }
        }
    }
};
export var AbnormalTimePeriod = {
    serializedName: "AbnormalTimePeriod",
    type: {
        name: "Composite",
        className: "AbnormalTimePeriod",
        modelProperties: {
            startTime: {
                serializedName: "startTime",
                type: {
                    name: "DateTime"
                }
            },
            endTime: {
                serializedName: "endTime",
                type: {
                    name: "DateTime"
                }
            },
            events: {
                serializedName: "events",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "DetectorAbnormalTimePeriod"
                        }
                    }
                }
            },
            solutions: {
                serializedName: "solutions",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "Solution"
                        }
                    }
                }
            }
        }
    }
};
export var DetectorDefinition = {
    serializedName: "DetectorDefinition",
    type: {
        name: "Composite",
        className: "DetectorDefinition",
        modelProperties: __assign(__assign({}, ProxyOnlyResource.type.modelProperties), { displayName: {
                readOnly: true,
                serializedName: "properties.displayName",
                type: {
                    name: "String"
                }
            }, description: {
                readOnly: true,
                serializedName: "properties.description",
                type: {
                    name: "String"
                }
            }, rank: {
                readOnly: true,
                serializedName: "properties.rank",
                type: {
                    name: "Number"
                }
            }, isEnabled: {
                readOnly: true,
                serializedName: "properties.isEnabled",
                type: {
                    name: "Boolean"
                }
            } })
    }
};
export var DiagnosticMetricSample = {
    serializedName: "DiagnosticMetricSample",
    type: {
        name: "Composite",
        className: "DiagnosticMetricSample",
        modelProperties: {
            timestamp: {
                serializedName: "timestamp",
                type: {
                    name: "DateTime"
                }
            },
            roleInstance: {
                serializedName: "roleInstance",
                type: {
                    name: "String"
                }
            },
            total: {
                serializedName: "total",
                type: {
                    name: "Number"
                }
            },
            maximum: {
                serializedName: "maximum",
                type: {
                    name: "Number"
                }
            },
            minimum: {
                serializedName: "minimum",
                type: {
                    name: "Number"
                }
            },
            isAggregated: {
                serializedName: "isAggregated",
                type: {
                    name: "Boolean"
                }
            }
        }
    }
};
export var DiagnosticMetricSet = {
    serializedName: "DiagnosticMetricSet",
    type: {
        name: "Composite",
        className: "DiagnosticMetricSet",
        modelProperties: {
            name: {
                serializedName: "name",
                type: {
                    name: "String"
                }
            },
            unit: {
                serializedName: "unit",
                type: {
                    name: "String"
                }
            },
            startTime: {
                serializedName: "startTime",
                type: {
                    name: "DateTime"
                }
            },
            endTime: {
                serializedName: "endTime",
                type: {
                    name: "DateTime"
                }
            },
            timeGrain: {
                serializedName: "timeGrain",
                type: {
                    name: "String"
                }
            },
            values: {
                serializedName: "values",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "DiagnosticMetricSample"
                        }
                    }
                }
            }
        }
    }
};
export var DataSource = {
    serializedName: "DataSource",
    type: {
        name: "Composite",
        className: "DataSource",
        modelProperties: {
            instructions: {
                serializedName: "instructions",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String"
                        }
                    }
                }
            },
            dataSourceUri: {
                serializedName: "dataSourceUri",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "NameValuePair"
                        }
                    }
                }
            }
        }
    }
};
export var ResponseMetaData = {
    serializedName: "ResponseMetaData",
    type: {
        name: "Composite",
        className: "ResponseMetaData",
        modelProperties: {
            dataSource: {
                serializedName: "dataSource",
                type: {
                    name: "Composite",
                    className: "DataSource"
                }
            }
        }
    }
};
export var AnalysisData = {
    serializedName: "AnalysisData",
    type: {
        name: "Composite",
        className: "AnalysisData",
        modelProperties: {
            source: {
                serializedName: "source",
                type: {
                    name: "String"
                }
            },
            detectorDefinition: {
                serializedName: "detectorDefinition",
                type: {
                    name: "Composite",
                    className: "DetectorDefinition"
                }
            },
            metrics: {
                serializedName: "metrics",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "DiagnosticMetricSet"
                        }
                    }
                }
            },
            data: {
                serializedName: "data",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Sequence",
                            element: {
                                type: {
                                    name: "Composite",
                                    className: "NameValuePair"
                                }
                            }
                        }
                    }
                }
            },
            detectorMetaData: {
                serializedName: "detectorMetaData",
                type: {
                    name: "Composite",
                    className: "ResponseMetaData"
                }
            }
        }
    }
};
export var AnalysisDefinition = {
    serializedName: "AnalysisDefinition",
    type: {
        name: "Composite",
        className: "AnalysisDefinition",
        modelProperties: __assign(__assign({}, ProxyOnlyResource.type.modelProperties), { description: {
                readOnly: true,
                serializedName: "properties.description",
                type: {
                    name: "String"
                }
            } })
    }
};
export var DataTableResponseColumn = {
    serializedName: "DataTableResponseColumn",
    type: {
        name: "Composite",
        className: "DataTableResponseColumn",
        modelProperties: {
            columnName: {
                serializedName: "columnName",
                type: {
                    name: "String"
                }
            },
            dataType: {
                serializedName: "dataType",
                type: {
                    name: "String"
                }
            },
            columnType: {
                serializedName: "columnType",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var DataTableResponseObject = {
    serializedName: "DataTableResponseObject",
    type: {
        name: "Composite",
        className: "DataTableResponseObject",
        modelProperties: {
            tableName: {
                serializedName: "tableName",
                type: {
                    name: "String"
                }
            },
            columns: {
                serializedName: "columns",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "DataTableResponseColumn"
                        }
                    }
                }
            },
            rows: {
                serializedName: "rows",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Sequence",
                            element: {
                                type: {
                                    name: "String"
                                }
                            }
                        }
                    }
                }
            }
        }
    }
};
export var DetectorInfo = {
    serializedName: "DetectorInfo",
    type: {
        name: "Composite",
        className: "DetectorInfo",
        modelProperties: {
            description: {
                readOnly: true,
                serializedName: "description",
                type: {
                    name: "String"
                }
            },
            category: {
                readOnly: true,
                serializedName: "category",
                type: {
                    name: "String"
                }
            },
            subCategory: {
                readOnly: true,
                serializedName: "subCategory",
                type: {
                    name: "String"
                }
            },
            supportTopicId: {
                readOnly: true,
                serializedName: "supportTopicId",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var Rendering = {
    serializedName: "Rendering",
    type: {
        name: "Composite",
        className: "Rendering",
        modelProperties: {
            type: {
                serializedName: "type",
                type: {
                    name: "Enum",
                    allowedValues: [
                        "NoGraph",
                        "Table",
                        "TimeSeries",
                        "TimeSeriesPerInstance"
                    ]
                }
            },
            title: {
                serializedName: "title",
                type: {
                    name: "String"
                }
            },
            description: {
                serializedName: "description",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var DiagnosticData = {
    serializedName: "DiagnosticData",
    type: {
        name: "Composite",
        className: "DiagnosticData",
        modelProperties: {
            table: {
                serializedName: "table",
                type: {
                    name: "Composite",
                    className: "DataTableResponseObject"
                }
            },
            renderingProperties: {
                serializedName: "renderingProperties",
                type: {
                    name: "Composite",
                    className: "Rendering"
                }
            }
        }
    }
};
export var DetectorResponse = {
    serializedName: "DetectorResponse",
    type: {
        name: "Composite",
        className: "DetectorResponse",
        modelProperties: __assign(__assign({}, ProxyOnlyResource.type.modelProperties), { metadata: {
                serializedName: "properties.metadata",
                type: {
                    name: "Composite",
                    className: "DetectorInfo"
                }
            }, dataset: {
                serializedName: "properties.dataset",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "DiagnosticData"
                        }
                    }
                }
            } })
    }
};
export var DiagnosticAnalysis = {
    serializedName: "DiagnosticAnalysis",
    type: {
        name: "Composite",
        className: "DiagnosticAnalysis",
        modelProperties: __assign(__assign({}, ProxyOnlyResource.type.modelProperties), { startTime: {
                serializedName: "properties.startTime",
                type: {
                    name: "DateTime"
                }
            }, endTime: {
                serializedName: "properties.endTime",
                type: {
                    name: "DateTime"
                }
            }, abnormalTimePeriods: {
                serializedName: "properties.abnormalTimePeriods",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "AbnormalTimePeriod"
                        }
                    }
                }
            }, payload: {
                serializedName: "properties.payload",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "AnalysisData"
                        }
                    }
                }
            }, nonCorrelatedDetectors: {
                serializedName: "properties.nonCorrelatedDetectors",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "DetectorDefinition"
                        }
                    }
                }
            } })
    }
};
export var DiagnosticCategory = {
    serializedName: "DiagnosticCategory",
    type: {
        name: "Composite",
        className: "DiagnosticCategory",
        modelProperties: __assign(__assign({}, ProxyOnlyResource.type.modelProperties), { description: {
                readOnly: true,
                serializedName: "properties.description",
                type: {
                    name: "String"
                }
            } })
    }
};
export var DiagnosticDetectorResponse = {
    serializedName: "DiagnosticDetectorResponse",
    type: {
        name: "Composite",
        className: "DiagnosticDetectorResponse",
        modelProperties: __assign(__assign({}, ProxyOnlyResource.type.modelProperties), { startTime: {
                serializedName: "properties.startTime",
                type: {
                    name: "DateTime"
                }
            }, endTime: {
                serializedName: "properties.endTime",
                type: {
                    name: "DateTime"
                }
            }, issueDetected: {
                serializedName: "properties.issueDetected",
                type: {
                    name: "Boolean"
                }
            }, detectorDefinition: {
                serializedName: "properties.detectorDefinition",
                type: {
                    name: "Composite",
                    className: "DetectorDefinition"
                }
            }, metrics: {
                serializedName: "properties.metrics",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "DiagnosticMetricSet"
                        }
                    }
                }
            }, abnormalTimePeriods: {
                serializedName: "properties.abnormalTimePeriods",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "DetectorAbnormalTimePeriod"
                        }
                    }
                }
            }, data: {
                serializedName: "properties.data",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Sequence",
                            element: {
                                type: {
                                    name: "Composite",
                                    className: "NameValuePair"
                                }
                            }
                        }
                    }
                }
            }, responseMetaData: {
                serializedName: "properties.responseMetaData",
                type: {
                    name: "Composite",
                    className: "ResponseMetaData"
                }
            } })
    }
};
export var StackMinorVersion = {
    serializedName: "StackMinorVersion",
    type: {
        name: "Composite",
        className: "StackMinorVersion",
        modelProperties: {
            displayVersion: {
                serializedName: "displayVersion",
                type: {
                    name: "String"
                }
            },
            runtimeVersion: {
                serializedName: "runtimeVersion",
                type: {
                    name: "String"
                }
            },
            isDefault: {
                serializedName: "isDefault",
                type: {
                    name: "Boolean"
                }
            },
            isRemoteDebuggingEnabled: {
                serializedName: "isRemoteDebuggingEnabled",
                type: {
                    name: "Boolean"
                }
            }
        }
    }
};
export var StackMajorVersion = {
    serializedName: "StackMajorVersion",
    type: {
        name: "Composite",
        className: "StackMajorVersion",
        modelProperties: {
            displayVersion: {
                serializedName: "displayVersion",
                type: {
                    name: "String"
                }
            },
            runtimeVersion: {
                serializedName: "runtimeVersion",
                type: {
                    name: "String"
                }
            },
            isDefault: {
                serializedName: "isDefault",
                type: {
                    name: "Boolean"
                }
            },
            minorVersions: {
                serializedName: "minorVersions",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "StackMinorVersion"
                        }
                    }
                }
            },
            applicationInsights: {
                serializedName: "applicationInsights",
                type: {
                    name: "Boolean"
                }
            },
            isPreview: {
                serializedName: "isPreview",
                type: {
                    name: "Boolean"
                }
            },
            isDeprecated: {
                serializedName: "isDeprecated",
                type: {
                    name: "Boolean"
                }
            },
            isHidden: {
                serializedName: "isHidden",
                type: {
                    name: "Boolean"
                }
            }
        }
    }
};
export var ApplicationStack = {
    serializedName: "ApplicationStack",
    type: {
        name: "Composite",
        className: "ApplicationStack",
        modelProperties: {
            name: {
                serializedName: "name",
                type: {
                    name: "String"
                }
            },
            display: {
                serializedName: "display",
                type: {
                    name: "String"
                }
            },
            dependency: {
                serializedName: "dependency",
                type: {
                    name: "String"
                }
            },
            majorVersions: {
                serializedName: "majorVersions",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "StackMajorVersion"
                        }
                    }
                }
            },
            frameworks: {
                serializedName: "frameworks",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "ApplicationStack"
                        }
                    }
                }
            }
        }
    }
};
export var ApplicationStackResource = {
    serializedName: "ApplicationStackResource",
    type: {
        name: "Composite",
        className: "ApplicationStackResource",
        modelProperties: __assign(__assign({}, ProxyOnlyResource.type.modelProperties), { applicationStackResourceName: {
                serializedName: "properties.name",
                type: {
                    name: "String"
                }
            }, display: {
                serializedName: "properties.display",
                type: {
                    name: "String"
                }
            }, dependency: {
                serializedName: "properties.dependency",
                type: {
                    name: "String"
                }
            }, majorVersions: {
                serializedName: "properties.majorVersions",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "StackMajorVersion"
                        }
                    }
                }
            }, frameworks: {
                serializedName: "properties.frameworks",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "ApplicationStack"
                        }
                    }
                }
            } })
    }
};
export var Recommendation = {
    serializedName: "Recommendation",
    type: {
        name: "Composite",
        className: "Recommendation",
        modelProperties: __assign(__assign({}, ProxyOnlyResource.type.modelProperties), { creationTime: {
                serializedName: "properties.creationTime",
                type: {
                    name: "DateTime"
                }
            }, recommendationId: {
                serializedName: "properties.recommendationId",
                type: {
                    name: "Uuid"
                }
            }, resourceId: {
                serializedName: "properties.resourceId",
                type: {
                    name: "String"
                }
            }, resourceScope: {
                serializedName: "properties.resourceScope",
                type: {
                    name: "String"
                }
            }, ruleName: {
                serializedName: "properties.ruleName",
                type: {
                    name: "String"
                }
            }, displayName: {
                serializedName: "properties.displayName",
                type: {
                    name: "String"
                }
            }, message: {
                serializedName: "properties.message",
                type: {
                    name: "String"
                }
            }, level: {
                serializedName: "properties.level",
                type: {
                    name: "Enum",
                    allowedValues: [
                        "Critical",
                        "Warning",
                        "Information",
                        "NonUrgentSuggestion"
                    ]
                }
            }, channels: {
                serializedName: "properties.channels",
                type: {
                    name: "Enum",
                    allowedValues: [
                        "Notification",
                        "Api",
                        "Email",
                        "Webhook",
                        "All"
                    ]
                }
            }, categoryTags: {
                readOnly: true,
                serializedName: "properties.categoryTags",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String"
                        }
                    }
                }
            }, actionName: {
                serializedName: "properties.actionName",
                type: {
                    name: "String"
                }
            }, enabled: {
                serializedName: "properties.enabled",
                type: {
                    name: "Number"
                }
            }, states: {
                serializedName: "properties.states",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String"
                        }
                    }
                }
            }, startTime: {
                serializedName: "properties.startTime",
                type: {
                    name: "DateTime"
                }
            }, endTime: {
                serializedName: "properties.endTime",
                type: {
                    name: "DateTime"
                }
            }, nextNotificationTime: {
                serializedName: "properties.nextNotificationTime",
                type: {
                    name: "DateTime"
                }
            }, notificationExpirationTime: {
                serializedName: "properties.notificationExpirationTime",
                type: {
                    name: "DateTime"
                }
            }, notifiedTime: {
                serializedName: "properties.notifiedTime",
                type: {
                    name: "DateTime"
                }
            }, score: {
                serializedName: "properties.score",
                type: {
                    name: "Number"
                }
            }, isDynamic: {
                serializedName: "properties.isDynamic",
                type: {
                    name: "Boolean"
                }
            }, extensionName: {
                serializedName: "properties.extensionName",
                type: {
                    name: "String"
                }
            }, bladeName: {
                serializedName: "properties.bladeName",
                type: {
                    name: "String"
                }
            }, forwardLink: {
                serializedName: "properties.forwardLink",
                type: {
                    name: "String"
                }
            } })
    }
};
export var RecommendationRule = {
    serializedName: "RecommendationRule",
    type: {
        name: "Composite",
        className: "RecommendationRule",
        modelProperties: __assign(__assign({}, ProxyOnlyResource.type.modelProperties), { recommendationName: {
                serializedName: "properties.recommendationName",
                type: {
                    name: "String"
                }
            }, displayName: {
                serializedName: "properties.displayName",
                type: {
                    name: "String"
                }
            }, message: {
                serializedName: "properties.message",
                type: {
                    name: "String"
                }
            }, recommendationId: {
                serializedName: "properties.recommendationId",
                type: {
                    name: "Uuid"
                }
            }, description: {
                serializedName: "properties.description",
                type: {
                    name: "String"
                }
            }, actionName: {
                serializedName: "properties.actionName",
                type: {
                    name: "String"
                }
            }, level: {
                serializedName: "properties.level",
                type: {
                    name: "Enum",
                    allowedValues: [
                        "Critical",
                        "Warning",
                        "Information",
                        "NonUrgentSuggestion"
                    ]
                }
            }, channels: {
                serializedName: "properties.channels",
                type: {
                    name: "Enum",
                    allowedValues: [
                        "Notification",
                        "Api",
                        "Email",
                        "Webhook",
                        "All"
                    ]
                }
            }, categoryTags: {
                readOnly: true,
                serializedName: "properties.categoryTags",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String"
                        }
                    }
                }
            }, isDynamic: {
                serializedName: "properties.isDynamic",
                type: {
                    name: "Boolean"
                }
            }, extensionName: {
                serializedName: "properties.extensionName",
                type: {
                    name: "String"
                }
            }, bladeName: {
                serializedName: "properties.bladeName",
                type: {
                    name: "String"
                }
            }, forwardLink: {
                serializedName: "properties.forwardLink",
                type: {
                    name: "String"
                }
            } })
    }
};
export var AppserviceGithubToken = {
    serializedName: "AppserviceGithubToken",
    type: {
        name: "Composite",
        className: "AppserviceGithubToken",
        modelProperties: {
            accessToken: {
                serializedName: "accessToken",
                type: {
                    name: "String"
                }
            },
            scope: {
                serializedName: "scope",
                type: {
                    name: "String"
                }
            },
            tokenType: {
                serializedName: "tokenType",
                type: {
                    name: "String"
                }
            },
            gotToken: {
                serializedName: "gotToken",
                type: {
                    name: "Boolean"
                }
            },
            errorMessage: {
                serializedName: "errorMessage",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var AppserviceGithubTokenRequest = {
    serializedName: "AppserviceGithubTokenRequest",
    type: {
        name: "Composite",
        className: "AppserviceGithubTokenRequest",
        modelProperties: {
            code: {
                required: true,
                serializedName: "code",
                type: {
                    name: "String"
                }
            },
            state: {
                required: true,
                serializedName: "state",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var BillingMeter = {
    serializedName: "BillingMeter",
    type: {
        name: "Composite",
        className: "BillingMeter",
        modelProperties: __assign(__assign({}, ProxyOnlyResource.type.modelProperties), { meterId: {
                serializedName: "properties.meterId",
                type: {
                    name: "String"
                }
            }, billingLocation: {
                serializedName: "properties.billingLocation",
                type: {
                    name: "String"
                }
            }, shortName: {
                serializedName: "properties.shortName",
                type: {
                    name: "String"
                }
            }, friendlyName: {
                serializedName: "properties.friendlyName",
                type: {
                    name: "String"
                }
            }, resourceType: {
                serializedName: "properties.resourceType",
                type: {
                    name: "String"
                }
            }, osType: {
                serializedName: "properties.osType",
                type: {
                    name: "String"
                }
            } })
    }
};
export var CsmMoveResourceEnvelope = {
    serializedName: "CsmMoveResourceEnvelope",
    type: {
        name: "Composite",
        className: "CsmMoveResourceEnvelope",
        modelProperties: {
            targetResourceGroup: {
                serializedName: "targetResourceGroup",
                constraints: {
                    MaxLength: 90,
                    MinLength: 1,
                    Pattern: / ^[-\w\._\(\)]+[^\.]$/
                },
                type: {
                    name: "String"
                }
            },
            resources: {
                serializedName: "resources",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String"
                        }
                    }
                }
            }
        }
    }
};
export var GeoRegion = {
    serializedName: "GeoRegion",
    type: {
        name: "Composite",
        className: "GeoRegion",
        modelProperties: __assign(__assign({}, ProxyOnlyResource.type.modelProperties), { description: {
                readOnly: true,
                serializedName: "properties.description",
                type: {
                    name: "String"
                }
            }, displayName: {
                readOnly: true,
                serializedName: "properties.displayName",
                type: {
                    name: "String"
                }
            }, orgDomain: {
                readOnly: true,
                serializedName: "properties.orgDomain",
                type: {
                    name: "String"
                }
            } })
    }
};
export var HostingEnvironmentDeploymentInfo = {
    serializedName: "HostingEnvironmentDeploymentInfo",
    type: {
        name: "Composite",
        className: "HostingEnvironmentDeploymentInfo",
        modelProperties: {
            name: {
                serializedName: "name",
                type: {
                    name: "String"
                }
            },
            location: {
                serializedName: "location",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var DeploymentLocations = {
    serializedName: "DeploymentLocations",
    type: {
        name: "Composite",
        className: "DeploymentLocations",
        modelProperties: {
            locations: {
                serializedName: "locations",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "GeoRegion"
                        }
                    }
                }
            },
            hostingEnvironments: {
                serializedName: "hostingEnvironments",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "AppServiceEnvironment"
                        }
                    }
                }
            },
            hostingEnvironmentDeploymentInfos: {
                serializedName: "hostingEnvironmentDeploymentInfos",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "HostingEnvironmentDeploymentInfo"
                        }
                    }
                }
            }
        }
    }
};
export var GlobalCsmSkuDescription = {
    serializedName: "GlobalCsmSkuDescription",
    type: {
        name: "Composite",
        className: "GlobalCsmSkuDescription",
        modelProperties: {
            name: {
                serializedName: "name",
                type: {
                    name: "String"
                }
            },
            tier: {
                serializedName: "tier",
                type: {
                    name: "String"
                }
            },
            size: {
                serializedName: "size",
                type: {
                    name: "String"
                }
            },
            family: {
                serializedName: "family",
                type: {
                    name: "String"
                }
            },
            capacity: {
                serializedName: "capacity",
                type: {
                    name: "Composite",
                    className: "SkuCapacity"
                }
            },
            locations: {
                serializedName: "locations",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String"
                        }
                    }
                }
            },
            capabilities: {
                serializedName: "capabilities",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "Capability"
                        }
                    }
                }
            }
        }
    }
};
export var PremierAddOnOffer = {
    serializedName: "PremierAddOnOffer",
    type: {
        name: "Composite",
        className: "PremierAddOnOffer",
        modelProperties: __assign(__assign({}, ProxyOnlyResource.type.modelProperties), { sku: {
                serializedName: "properties.sku",
                type: {
                    name: "String"
                }
            }, product: {
                serializedName: "properties.product",
                type: {
                    name: "String"
                }
            }, vendor: {
                serializedName: "properties.vendor",
                type: {
                    name: "String"
                }
            }, promoCodeRequired: {
                serializedName: "properties.promoCodeRequired",
                type: {
                    name: "Boolean"
                }
            }, quota: {
                serializedName: "properties.quota",
                type: {
                    name: "Number"
                }
            }, webHostingPlanRestrictions: {
                serializedName: "properties.webHostingPlanRestrictions",
                type: {
                    name: "Enum",
                    allowedValues: [
                        "None",
                        "Free",
                        "Shared",
                        "Basic",
                        "Standard",
                        "Premium"
                    ]
                }
            }, privacyPolicyUrl: {
                serializedName: "properties.privacyPolicyUrl",
                type: {
                    name: "String"
                }
            }, legalTermsUrl: {
                serializedName: "properties.legalTermsUrl",
                type: {
                    name: "String"
                }
            }, marketplacePublisher: {
                serializedName: "properties.marketplacePublisher",
                type: {
                    name: "String"
                }
            }, marketplaceOffer: {
                serializedName: "properties.marketplaceOffer",
                type: {
                    name: "String"
                }
            } })
    }
};
export var ResourceNameAvailability = {
    serializedName: "ResourceNameAvailability",
    type: {
        name: "Composite",
        className: "ResourceNameAvailability",
        modelProperties: {
            nameAvailable: {
                serializedName: "nameAvailable",
                type: {
                    name: "Boolean"
                }
            },
            reason: {
                serializedName: "reason",
                type: {
                    name: "String"
                }
            },
            message: {
                serializedName: "message",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var ResourceNameAvailabilityRequest = {
    serializedName: "ResourceNameAvailabilityRequest",
    type: {
        name: "Composite",
        className: "ResourceNameAvailabilityRequest",
        modelProperties: {
            name: {
                required: true,
                serializedName: "name",
                type: {
                    name: "String"
                }
            },
            type: {
                required: true,
                serializedName: "type",
                type: {
                    name: "String"
                }
            },
            isFqdn: {
                serializedName: "isFqdn",
                type: {
                    name: "Boolean"
                }
            }
        }
    }
};
export var SkuInfos = {
    serializedName: "SkuInfos",
    type: {
        name: "Composite",
        className: "SkuInfos",
        modelProperties: {
            resourceType: {
                serializedName: "resourceType",
                type: {
                    name: "String"
                }
            },
            skus: {
                serializedName: "skus",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "GlobalCsmSkuDescription"
                        }
                    }
                }
            }
        }
    }
};
export var SourceControl = {
    serializedName: "SourceControl",
    type: {
        name: "Composite",
        className: "SourceControl",
        modelProperties: __assign(__assign({}, ProxyOnlyResource.type.modelProperties), { token: {
                serializedName: "properties.token",
                type: {
                    name: "String"
                }
            }, tokenSecret: {
                serializedName: "properties.tokenSecret",
                type: {
                    name: "String"
                }
            }, refreshToken: {
                serializedName: "properties.refreshToken",
                type: {
                    name: "String"
                }
            }, expirationTime: {
                serializedName: "properties.expirationTime",
                type: {
                    name: "DateTime"
                }
            } })
    }
};
export var ValidateRequest = {
    serializedName: "ValidateRequest",
    type: {
        name: "Composite",
        className: "ValidateRequest",
        modelProperties: {
            name: {
                required: true,
                serializedName: "name",
                type: {
                    name: "String"
                }
            },
            type: {
                required: true,
                serializedName: "type",
                type: {
                    name: "String"
                }
            },
            location: {
                required: true,
                serializedName: "location",
                type: {
                    name: "String"
                }
            },
            serverFarmId: {
                serializedName: "properties.serverFarmId",
                type: {
                    name: "String"
                }
            },
            skuName: {
                serializedName: "properties.skuName",
                type: {
                    name: "String"
                }
            },
            needLinuxWorkers: {
                serializedName: "properties.needLinuxWorkers",
                type: {
                    name: "Boolean"
                }
            },
            isSpot: {
                serializedName: "properties.isSpot",
                type: {
                    name: "Boolean"
                }
            },
            capacity: {
                serializedName: "properties.capacity",
                constraints: {
                    InclusiveMinimum: 1
                },
                type: {
                    name: "Number"
                }
            },
            hostingEnvironment: {
                serializedName: "properties.hostingEnvironment",
                type: {
                    name: "String"
                }
            },
            isXenon: {
                serializedName: "properties.isXenon",
                type: {
                    name: "Boolean"
                }
            },
            containerRegistryBaseUrl: {
                serializedName: "properties.containerRegistryBaseUrl",
                type: {
                    name: "String"
                }
            },
            containerRegistryUsername: {
                serializedName: "properties.containerRegistryUsername",
                type: {
                    name: "String"
                }
            },
            containerRegistryPassword: {
                serializedName: "properties.containerRegistryPassword",
                type: {
                    name: "String"
                }
            },
            containerImageRepository: {
                serializedName: "properties.containerImageRepository",
                type: {
                    name: "String"
                }
            },
            containerImageTag: {
                serializedName: "properties.containerImageTag",
                type: {
                    name: "String"
                }
            },
            containerImagePlatform: {
                serializedName: "properties.containerImagePlatform",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var ValidateResponseError = {
    serializedName: "ValidateResponseError",
    type: {
        name: "Composite",
        className: "ValidateResponseError",
        modelProperties: {
            code: {
                serializedName: "code",
                type: {
                    name: "String"
                }
            },
            message: {
                serializedName: "message",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var ValidateResponse = {
    serializedName: "ValidateResponse",
    type: {
        name: "Composite",
        className: "ValidateResponse",
        modelProperties: {
            status: {
                serializedName: "status",
                type: {
                    name: "String"
                }
            },
            error: {
                serializedName: "error",
                type: {
                    name: "Composite",
                    className: "ValidateResponseError"
                }
            }
        }
    }
};
export var VnetParameters = {
    serializedName: "VnetParameters",
    type: {
        name: "Composite",
        className: "VnetParameters",
        modelProperties: __assign(__assign({}, ProxyOnlyResource.type.modelProperties), { vnetResourceGroup: {
                serializedName: "properties.vnetResourceGroup",
                type: {
                    name: "String"
                }
            }, vnetName: {
                serializedName: "properties.vnetName",
                type: {
                    name: "String"
                }
            }, vnetSubnetName: {
                serializedName: "properties.vnetSubnetName",
                type: {
                    name: "String"
                }
            } })
    }
};
export var VnetValidationTestFailure = {
    serializedName: "VnetValidationTestFailure",
    type: {
        name: "Composite",
        className: "VnetValidationTestFailure",
        modelProperties: __assign(__assign({}, ProxyOnlyResource.type.modelProperties), { testName: {
                serializedName: "properties.testName",
                type: {
                    name: "String"
                }
            }, details: {
                serializedName: "properties.details",
                type: {
                    name: "String"
                }
            } })
    }
};
export var VnetValidationFailureDetails = {
    serializedName: "VnetValidationFailureDetails",
    type: {
        name: "Composite",
        className: "VnetValidationFailureDetails",
        modelProperties: __assign(__assign({}, ProxyOnlyResource.type.modelProperties), { failed: {
                serializedName: "properties.failed",
                type: {
                    name: "Boolean"
                }
            }, failedTests: {
                serializedName: "properties.failedTests",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "VnetValidationTestFailure"
                        }
                    }
                }
            } })
    }
};
export var AllowedAudiencesValidation = {
    serializedName: "AllowedAudiencesValidation",
    type: {
        name: "Composite",
        className: "AllowedAudiencesValidation",
        modelProperties: __assign(__assign({}, ProxyOnlyResource.type.modelProperties), { allowedAudiences: {
                serializedName: "properties.allowedAudiences",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String"
                        }
                    }
                }
            } })
    }
};
export var AppRegistration = {
    serializedName: "AppRegistration",
    type: {
        name: "Composite",
        className: "AppRegistration",
        modelProperties: __assign(__assign({}, ProxyOnlyResource.type.modelProperties), { appId: {
                serializedName: "properties.appId",
                type: {
                    name: "String"
                }
            }, appSecretSettingName: {
                serializedName: "properties.appSecretSettingName",
                type: {
                    name: "String"
                }
            } })
    }
};
export var FileSystemApplicationLogsConfig = {
    serializedName: "FileSystemApplicationLogsConfig",
    type: {
        name: "Composite",
        className: "FileSystemApplicationLogsConfig",
        modelProperties: {
            level: {
                serializedName: "level",
                defaultValue: 'Off',
                type: {
                    name: "Enum",
                    allowedValues: [
                        "Off",
                        "Verbose",
                        "Information",
                        "Warning",
                        "Error"
                    ]
                }
            }
        }
    }
};
export var AzureTableStorageApplicationLogsConfig = {
    serializedName: "AzureTableStorageApplicationLogsConfig",
    type: {
        name: "Composite",
        className: "AzureTableStorageApplicationLogsConfig",
        modelProperties: {
            level: {
                serializedName: "level",
                type: {
                    name: "Enum",
                    allowedValues: [
                        "Off",
                        "Verbose",
                        "Information",
                        "Warning",
                        "Error"
                    ]
                }
            },
            sasUrl: {
                required: true,
                serializedName: "sasUrl",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var AzureBlobStorageApplicationLogsConfig = {
    serializedName: "AzureBlobStorageApplicationLogsConfig",
    type: {
        name: "Composite",
        className: "AzureBlobStorageApplicationLogsConfig",
        modelProperties: {
            level: {
                serializedName: "level",
                type: {
                    name: "Enum",
                    allowedValues: [
                        "Off",
                        "Verbose",
                        "Information",
                        "Warning",
                        "Error"
                    ]
                }
            },
            sasUrl: {
                serializedName: "sasUrl",
                type: {
                    name: "String"
                }
            },
            retentionInDays: {
                serializedName: "retentionInDays",
                type: {
                    name: "Number"
                }
            }
        }
    }
};
export var ApplicationLogsConfig = {
    serializedName: "ApplicationLogsConfig",
    type: {
        name: "Composite",
        className: "ApplicationLogsConfig",
        modelProperties: {
            fileSystem: {
                serializedName: "fileSystem",
                type: {
                    name: "Composite",
                    className: "FileSystemApplicationLogsConfig"
                }
            },
            azureTableStorage: {
                serializedName: "azureTableStorage",
                type: {
                    name: "Composite",
                    className: "AzureTableStorageApplicationLogsConfig"
                }
            },
            azureBlobStorage: {
                serializedName: "azureBlobStorage",
                type: {
                    name: "Composite",
                    className: "AzureBlobStorageApplicationLogsConfig"
                }
            }
        }
    }
};
export var AuthPlatform = {
    serializedName: "AuthPlatform",
    type: {
        name: "Composite",
        className: "AuthPlatform",
        modelProperties: __assign(__assign({}, ProxyOnlyResource.type.modelProperties), { enabled: {
                serializedName: "properties.enabled",
                type: {
                    name: "Boolean"
                }
            }, runtimeVersion: {
                serializedName: "properties.runtimeVersion",
                type: {
                    name: "String"
                }
            }, configFilePath: {
                serializedName: "properties.configFilePath",
                type: {
                    name: "String"
                }
            } })
    }
};
export var AzureActiveDirectoryRegistration = {
    serializedName: "AzureActiveDirectoryRegistration",
    type: {
        name: "Composite",
        className: "AzureActiveDirectoryRegistration",
        modelProperties: __assign(__assign({}, ProxyOnlyResource.type.modelProperties), { openIdIssuer: {
                serializedName: "properties.openIdIssuer",
                type: {
                    name: "String"
                }
            }, clientId: {
                serializedName: "properties.clientId",
                type: {
                    name: "String"
                }
            }, clientSecretSettingName: {
                serializedName: "properties.clientSecretSettingName",
                type: {
                    name: "String"
                }
            }, clientSecretCertificateThumbprint: {
                serializedName: "properties.clientSecretCertificateThumbprint",
                type: {
                    name: "String"
                }
            } })
    }
};
export var AzureActiveDirectoryLogin = {
    serializedName: "AzureActiveDirectoryLogin",
    type: {
        name: "Composite",
        className: "AzureActiveDirectoryLogin",
        modelProperties: __assign(__assign({}, ProxyOnlyResource.type.modelProperties), { disableWWWAuthenticate: {
                serializedName: "properties.disableWWWAuthenticate",
                type: {
                    name: "Boolean"
                }
            }, loginParameters: {
                serializedName: "properties.loginParameters",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String"
                        }
                    }
                }
            } })
    }
};
export var JwtClaimChecks = {
    serializedName: "JwtClaimChecks",
    type: {
        name: "Composite",
        className: "JwtClaimChecks",
        modelProperties: __assign(__assign({}, ProxyOnlyResource.type.modelProperties), { allowedGroups: {
                serializedName: "properties.allowedGroups",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String"
                        }
                    }
                }
            }, allowedClientApplications: {
                serializedName: "properties.allowedClientApplications",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String"
                        }
                    }
                }
            } })
    }
};
export var AzureActiveDirectoryValidation = {
    serializedName: "AzureActiveDirectoryValidation",
    type: {
        name: "Composite",
        className: "AzureActiveDirectoryValidation",
        modelProperties: __assign(__assign({}, ProxyOnlyResource.type.modelProperties), { jwtClaimChecks: {
                serializedName: "properties.jwtClaimChecks",
                type: {
                    name: "Composite",
                    className: "JwtClaimChecks"
                }
            }, allowedAudiences: {
                serializedName: "properties.allowedAudiences",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String"
                        }
                    }
                }
            } })
    }
};
export var AzureActiveDirectory = {
    serializedName: "AzureActiveDirectory",
    type: {
        name: "Composite",
        className: "AzureActiveDirectory",
        modelProperties: __assign(__assign({}, ProxyOnlyResource.type.modelProperties), { enabled: {
                serializedName: "properties.enabled",
                type: {
                    name: "Boolean"
                }
            }, registration: {
                serializedName: "properties.registration",
                type: {
                    name: "Composite",
                    className: "AzureActiveDirectoryRegistration"
                }
            }, login: {
                serializedName: "properties.login",
                type: {
                    name: "Composite",
                    className: "AzureActiveDirectoryLogin"
                }
            }, validation: {
                serializedName: "properties.validation",
                type: {
                    name: "Composite",
                    className: "AzureActiveDirectoryValidation"
                }
            }, isAutoProvisioned: {
                serializedName: "properties.isAutoProvisioned",
                type: {
                    name: "Boolean"
                }
            } })
    }
};
export var ArmIdWrapper = {
    serializedName: "ArmIdWrapper",
    type: {
        name: "Composite",
        className: "ArmIdWrapper",
        modelProperties: {
            id: {
                readOnly: true,
                serializedName: "id",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var AzureBlobStorageHttpLogsConfig = {
    serializedName: "AzureBlobStorageHttpLogsConfig",
    type: {
        name: "Composite",
        className: "AzureBlobStorageHttpLogsConfig",
        modelProperties: {
            sasUrl: {
                serializedName: "sasUrl",
                type: {
                    name: "String"
                }
            },
            retentionInDays: {
                serializedName: "retentionInDays",
                type: {
                    name: "Number"
                }
            },
            enabled: {
                serializedName: "enabled",
                type: {
                    name: "Boolean"
                }
            }
        }
    }
};
export var AzureStorageInfoValue = {
    serializedName: "AzureStorageInfoValue",
    type: {
        name: "Composite",
        className: "AzureStorageInfoValue",
        modelProperties: {
            type: {
                serializedName: "type",
                type: {
                    name: "Enum",
                    allowedValues: [
                        "AzureFiles",
                        "AzureBlob"
                    ]
                }
            },
            accountName: {
                serializedName: "accountName",
                type: {
                    name: "String"
                }
            },
            shareName: {
                serializedName: "shareName",
                type: {
                    name: "String"
                }
            },
            accessKey: {
                serializedName: "accessKey",
                type: {
                    name: "String"
                }
            },
            mountPath: {
                serializedName: "mountPath",
                type: {
                    name: "String"
                }
            },
            state: {
                readOnly: true,
                serializedName: "state",
                type: {
                    name: "Enum",
                    allowedValues: [
                        "Ok",
                        "InvalidCredentials",
                        "InvalidShare"
                    ]
                }
            }
        }
    }
};
export var AzureStoragePropertyDictionaryResource = {
    serializedName: "AzureStoragePropertyDictionaryResource",
    type: {
        name: "Composite",
        className: "AzureStoragePropertyDictionaryResource",
        modelProperties: __assign(__assign({}, ProxyOnlyResource.type.modelProperties), { properties: {
                serializedName: "properties",
                type: {
                    name: "Dictionary",
                    value: {
                        type: {
                            name: "Composite",
                            className: "AzureStorageInfoValue"
                        }
                    }
                }
            } })
    }
};
export var DatabaseBackupSetting = {
    serializedName: "DatabaseBackupSetting",
    type: {
        name: "Composite",
        className: "DatabaseBackupSetting",
        modelProperties: {
            databaseType: {
                required: true,
                serializedName: "databaseType",
                type: {
                    name: "String"
                }
            },
            name: {
                serializedName: "name",
                type: {
                    name: "String"
                }
            },
            connectionStringName: {
                serializedName: "connectionStringName",
                type: {
                    name: "String"
                }
            },
            connectionString: {
                serializedName: "connectionString",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var BackupItem = {
    serializedName: "BackupItem",
    type: {
        name: "Composite",
        className: "BackupItem",
        modelProperties: __assign(__assign({}, ProxyOnlyResource.type.modelProperties), { backupId: {
                readOnly: true,
                serializedName: "properties.id",
                type: {
                    name: "Number"
                }
            }, storageAccountUrl: {
                readOnly: true,
                serializedName: "properties.storageAccountUrl",
                type: {
                    name: "String"
                }
            }, blobName: {
                readOnly: true,
                serializedName: "properties.blobName",
                type: {
                    name: "String"
                }
            }, backupItemName: {
                readOnly: true,
                serializedName: "properties.name",
                type: {
                    name: "String"
                }
            }, status: {
                readOnly: true,
                serializedName: "properties.status",
                type: {
                    name: "Enum",
                    allowedValues: [
                        "InProgress",
                        "Failed",
                        "Succeeded",
                        "TimedOut",
                        "Created",
                        "Skipped",
                        "PartiallySucceeded",
                        "DeleteInProgress",
                        "DeleteFailed",
                        "Deleted"
                    ]
                }
            }, sizeInBytes: {
                readOnly: true,
                serializedName: "properties.sizeInBytes",
                type: {
                    name: "Number"
                }
            }, created: {
                readOnly: true,
                serializedName: "properties.created",
                type: {
                    name: "DateTime"
                }
            }, log: {
                readOnly: true,
                serializedName: "properties.log",
                type: {
                    name: "String"
                }
            }, databases: {
                readOnly: true,
                serializedName: "properties.databases",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "DatabaseBackupSetting"
                        }
                    }
                }
            }, scheduled: {
                readOnly: true,
                serializedName: "properties.scheduled",
                type: {
                    name: "Boolean"
                }
            }, lastRestoreTimeStamp: {
                readOnly: true,
                serializedName: "properties.lastRestoreTimeStamp",
                type: {
                    name: "DateTime"
                }
            }, finishedTimeStamp: {
                readOnly: true,
                serializedName: "properties.finishedTimeStamp",
                type: {
                    name: "DateTime"
                }
            }, correlationId: {
                readOnly: true,
                serializedName: "properties.correlationId",
                type: {
                    name: "String"
                }
            }, websiteSizeInBytes: {
                readOnly: true,
                serializedName: "properties.websiteSizeInBytes",
                type: {
                    name: "Number"
                }
            } })
    }
};
export var BackupSchedule = {
    serializedName: "BackupSchedule",
    type: {
        name: "Composite",
        className: "BackupSchedule",
        modelProperties: {
            frequencyInterval: {
                required: true,
                serializedName: "frequencyInterval",
                defaultValue: 7,
                type: {
                    name: "Number"
                }
            },
            frequencyUnit: {
                required: true,
                serializedName: "frequencyUnit",
                defaultValue: 'Day',
                type: {
                    name: "Enum",
                    allowedValues: [
                        "Day",
                        "Hour"
                    ]
                }
            },
            keepAtLeastOneBackup: {
                required: true,
                serializedName: "keepAtLeastOneBackup",
                defaultValue: true,
                type: {
                    name: "Boolean"
                }
            },
            retentionPeriodInDays: {
                required: true,
                serializedName: "retentionPeriodInDays",
                defaultValue: 30,
                type: {
                    name: "Number"
                }
            },
            startTime: {
                serializedName: "startTime",
                type: {
                    name: "DateTime"
                }
            },
            lastExecutionTime: {
                readOnly: true,
                serializedName: "lastExecutionTime",
                type: {
                    name: "DateTime"
                }
            }
        }
    }
};
export var BackupRequest = {
    serializedName: "BackupRequest",
    type: {
        name: "Composite",
        className: "BackupRequest",
        modelProperties: __assign(__assign({}, ProxyOnlyResource.type.modelProperties), { backupName: {
                serializedName: "properties.backupName",
                type: {
                    name: "String"
                }
            }, enabled: {
                serializedName: "properties.enabled",
                type: {
                    name: "Boolean"
                }
            }, storageAccountUrl: {
                required: true,
                serializedName: "properties.storageAccountUrl",
                type: {
                    name: "String"
                }
            }, backupSchedule: {
                serializedName: "properties.backupSchedule",
                type: {
                    name: "Composite",
                    className: "BackupSchedule"
                }
            }, databases: {
                serializedName: "properties.databases",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "DatabaseBackupSetting"
                        }
                    }
                }
            } })
    }
};
export var BlobStorageTokenStore = {
    serializedName: "BlobStorageTokenStore",
    type: {
        name: "Composite",
        className: "BlobStorageTokenStore",
        modelProperties: __assign(__assign({}, ProxyOnlyResource.type.modelProperties), { sasUrlSettingName: {
                serializedName: "properties.sasUrlSettingName",
                type: {
                    name: "String"
                }
            } })
    }
};
export var ClientRegistration = {
    serializedName: "ClientRegistration",
    type: {
        name: "Composite",
        className: "ClientRegistration",
        modelProperties: __assign(__assign({}, ProxyOnlyResource.type.modelProperties), { clientId: {
                serializedName: "properties.clientId",
                type: {
                    name: "String"
                }
            }, clientSecretSettingName: {
                serializedName: "properties.clientSecretSettingName",
                type: {
                    name: "String"
                }
            } })
    }
};
export var ConnStringValueTypePair = {
    serializedName: "ConnStringValueTypePair",
    type: {
        name: "Composite",
        className: "ConnStringValueTypePair",
        modelProperties: {
            value: {
                required: true,
                serializedName: "value",
                type: {
                    name: "String"
                }
            },
            type: {
                required: true,
                serializedName: "type",
                type: {
                    name: "Enum",
                    allowedValues: [
                        "MySql",
                        "SQLServer",
                        "SQLAzure",
                        "Custom",
                        "NotificationHub",
                        "ServiceBus",
                        "EventHub",
                        "ApiHub",
                        "DocDb",
                        "RedisCache",
                        "PostgreSQL"
                    ]
                }
            }
        }
    }
};
export var ConnectionStringDictionary = {
    serializedName: "ConnectionStringDictionary",
    type: {
        name: "Composite",
        className: "ConnectionStringDictionary",
        modelProperties: __assign(__assign({}, ProxyOnlyResource.type.modelProperties), { properties: {
                serializedName: "properties",
                type: {
                    name: "Dictionary",
                    value: {
                        type: {
                            name: "Composite",
                            className: "ConnStringValueTypePair"
                        }
                    }
                }
            } })
    }
};
export var ContainerCpuUsage = {
    serializedName: "ContainerCpuUsage",
    type: {
        name: "Composite",
        className: "ContainerCpuUsage",
        modelProperties: {
            totalUsage: {
                serializedName: "totalUsage",
                type: {
                    name: "Number"
                }
            },
            perCpuUsage: {
                serializedName: "perCpuUsage",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Number"
                        }
                    }
                }
            },
            kernelModeUsage: {
                serializedName: "kernelModeUsage",
                type: {
                    name: "Number"
                }
            },
            userModeUsage: {
                serializedName: "userModeUsage",
                type: {
                    name: "Number"
                }
            }
        }
    }
};
export var ContainerThrottlingData = {
    serializedName: "ContainerThrottlingData",
    type: {
        name: "Composite",
        className: "ContainerThrottlingData",
        modelProperties: {
            periods: {
                serializedName: "periods",
                type: {
                    name: "Number"
                }
            },
            throttledPeriods: {
                serializedName: "throttledPeriods",
                type: {
                    name: "Number"
                }
            },
            throttledTime: {
                serializedName: "throttledTime",
                type: {
                    name: "Number"
                }
            }
        }
    }
};
export var ContainerCpuStatistics = {
    serializedName: "ContainerCpuStatistics",
    type: {
        name: "Composite",
        className: "ContainerCpuStatistics",
        modelProperties: {
            cpuUsage: {
                serializedName: "cpuUsage",
                type: {
                    name: "Composite",
                    className: "ContainerCpuUsage"
                }
            },
            systemCpuUsage: {
                serializedName: "systemCpuUsage",
                type: {
                    name: "Number"
                }
            },
            onlineCpuCount: {
                serializedName: "onlineCpuCount",
                type: {
                    name: "Number"
                }
            },
            throttlingData: {
                serializedName: "throttlingData",
                type: {
                    name: "Composite",
                    className: "ContainerThrottlingData"
                }
            }
        }
    }
};
export var ContainerMemoryStatistics = {
    serializedName: "ContainerMemoryStatistics",
    type: {
        name: "Composite",
        className: "ContainerMemoryStatistics",
        modelProperties: {
            usage: {
                serializedName: "usage",
                type: {
                    name: "Number"
                }
            },
            maxUsage: {
                serializedName: "maxUsage",
                type: {
                    name: "Number"
                }
            },
            limit: {
                serializedName: "limit",
                type: {
                    name: "Number"
                }
            }
        }
    }
};
export var ContainerNetworkInterfaceStatistics = {
    serializedName: "ContainerNetworkInterfaceStatistics",
    type: {
        name: "Composite",
        className: "ContainerNetworkInterfaceStatistics",
        modelProperties: {
            rxBytes: {
                serializedName: "rxBytes",
                type: {
                    name: "Number"
                }
            },
            rxPackets: {
                serializedName: "rxPackets",
                type: {
                    name: "Number"
                }
            },
            rxErrors: {
                serializedName: "rxErrors",
                type: {
                    name: "Number"
                }
            },
            rxDropped: {
                serializedName: "rxDropped",
                type: {
                    name: "Number"
                }
            },
            txBytes: {
                serializedName: "txBytes",
                type: {
                    name: "Number"
                }
            },
            txPackets: {
                serializedName: "txPackets",
                type: {
                    name: "Number"
                }
            },
            txErrors: {
                serializedName: "txErrors",
                type: {
                    name: "Number"
                }
            },
            txDropped: {
                serializedName: "txDropped",
                type: {
                    name: "Number"
                }
            }
        }
    }
};
export var ContainerInfo = {
    serializedName: "ContainerInfo",
    type: {
        name: "Composite",
        className: "ContainerInfo",
        modelProperties: {
            currentTimeStamp: {
                serializedName: "currentTimeStamp",
                type: {
                    name: "DateTime"
                }
            },
            previousTimeStamp: {
                serializedName: "previousTimeStamp",
                type: {
                    name: "DateTime"
                }
            },
            currentCpuStats: {
                serializedName: "currentCpuStats",
                type: {
                    name: "Composite",
                    className: "ContainerCpuStatistics"
                }
            },
            previousCpuStats: {
                serializedName: "previousCpuStats",
                type: {
                    name: "Composite",
                    className: "ContainerCpuStatistics"
                }
            },
            memoryStats: {
                serializedName: "memoryStats",
                type: {
                    name: "Composite",
                    className: "ContainerMemoryStatistics"
                }
            },
            name: {
                serializedName: "name",
                type: {
                    name: "String"
                }
            },
            id: {
                serializedName: "id",
                type: {
                    name: "String"
                }
            },
            eth0: {
                serializedName: "eth0",
                type: {
                    name: "Composite",
                    className: "ContainerNetworkInterfaceStatistics"
                }
            }
        }
    }
};
export var ContinuousWebJob = {
    serializedName: "ContinuousWebJob",
    type: {
        name: "Composite",
        className: "ContinuousWebJob",
        modelProperties: __assign(__assign({}, ProxyOnlyResource.type.modelProperties), { status: {
                serializedName: "properties.status",
                type: {
                    name: "Enum",
                    allowedValues: [
                        "Initializing",
                        "Starting",
                        "Running",
                        "PendingRestart",
                        "Stopped"
                    ]
                }
            }, detailedStatus: {
                serializedName: "properties.detailed_status",
                type: {
                    name: "String"
                }
            }, logUrl: {
                serializedName: "properties.log_url",
                type: {
                    name: "String"
                }
            }, runCommand: {
                serializedName: "properties.run_command",
                type: {
                    name: "String"
                }
            }, url: {
                serializedName: "properties.url",
                type: {
                    name: "String"
                }
            }, extraInfoUrl: {
                serializedName: "properties.extra_info_url",
                type: {
                    name: "String"
                }
            }, webJobType: {
                serializedName: "properties.web_job_type",
                type: {
                    name: "Enum",
                    allowedValues: [
                        "Continuous",
                        "Triggered"
                    ]
                }
            }, error: {
                serializedName: "properties.error",
                type: {
                    name: "String"
                }
            }, usingSdk: {
                serializedName: "properties.using_sdk",
                type: {
                    name: "Boolean"
                }
            }, settings: {
                serializedName: "properties.settings",
                type: {
                    name: "Dictionary",
                    value: {
                        type: {
                            name: "Object"
                        }
                    }
                }
            } })
    }
};
export var CookieExpiration = {
    serializedName: "CookieExpiration",
    type: {
        name: "Composite",
        className: "CookieExpiration",
        modelProperties: __assign(__assign({}, ProxyOnlyResource.type.modelProperties), { convention: {
                serializedName: "properties.convention",
                type: {
                    name: "Enum",
                    allowedValues: [
                        "FixedTime",
                        "IdentityProviderDerived"
                    ]
                }
            }, timeToExpiration: {
                serializedName: "properties.timeToExpiration",
                type: {
                    name: "String"
                }
            } })
    }
};
export var CsmCopySlotEntity = {
    serializedName: "CsmCopySlotEntity",
    type: {
        name: "Composite",
        className: "CsmCopySlotEntity",
        modelProperties: {
            targetSlot: {
                required: true,
                serializedName: "targetSlot",
                type: {
                    name: "String"
                }
            },
            siteConfig: {
                required: true,
                serializedName: "siteConfig",
                type: {
                    name: "Composite",
                    className: "SiteConfig"
                }
            }
        }
    }
};
export var CsmPublishingCredentialsPoliciesEntity = {
    serializedName: "CsmPublishingCredentialsPoliciesEntity",
    type: {
        name: "Composite",
        className: "CsmPublishingCredentialsPoliciesEntity",
        modelProperties: __assign(__assign({}, ProxyOnlyResource.type.modelProperties), { allow: {
                required: true,
                serializedName: "properties.allow",
                type: {
                    name: "Boolean"
                }
            } })
    }
};
export var CsmPublishingCredentialsPoliciesCollection = {
    serializedName: "CsmPublishingCredentialsPoliciesCollection",
    type: {
        name: "Composite",
        className: "CsmPublishingCredentialsPoliciesCollection",
        modelProperties: __assign(__assign({}, ProxyOnlyResource.type.modelProperties), { ftp: {
                required: true,
                serializedName: "properties.ftp",
                type: {
                    name: "Composite",
                    className: "CsmPublishingCredentialsPoliciesEntity"
                }
            }, scm: {
                required: true,
                serializedName: "properties.scm",
                type: {
                    name: "Composite",
                    className: "CsmPublishingCredentialsPoliciesEntity"
                }
            } })
    }
};
export var CsmPublishingProfileOptions = {
    serializedName: "CsmPublishingProfileOptions",
    type: {
        name: "Composite",
        className: "CsmPublishingProfileOptions",
        modelProperties: {
            format: {
                serializedName: "format",
                type: {
                    name: "String"
                }
            },
            includeDisasterRecoveryEndpoints: {
                serializedName: "includeDisasterRecoveryEndpoints",
                type: {
                    name: "Boolean"
                }
            }
        }
    }
};
export var CsmSlotEntity = {
    serializedName: "CsmSlotEntity",
    type: {
        name: "Composite",
        className: "CsmSlotEntity",
        modelProperties: {
            targetSlot: {
                required: true,
                serializedName: "targetSlot",
                type: {
                    name: "String"
                }
            },
            preserveVnet: {
                required: true,
                serializedName: "preserveVnet",
                type: {
                    name: "Boolean"
                }
            }
        }
    }
};
export var CustomHostnameAnalysisResult = {
    serializedName: "CustomHostnameAnalysisResult",
    type: {
        name: "Composite",
        className: "CustomHostnameAnalysisResult",
        modelProperties: __assign(__assign({}, ProxyOnlyResource.type.modelProperties), { isHostnameAlreadyVerified: {
                readOnly: true,
                serializedName: "properties.isHostnameAlreadyVerified",
                type: {
                    name: "Boolean"
                }
            }, customDomainVerificationTest: {
                readOnly: true,
                serializedName: "properties.customDomainVerificationTest",
                type: {
                    name: "Enum",
                    allowedValues: [
                        "Passed",
                        "Failed",
                        "Skipped"
                    ]
                }
            }, customDomainVerificationFailureInfo: {
                readOnly: true,
                serializedName: "properties.customDomainVerificationFailureInfo",
                type: {
                    name: "Composite",
                    className: "ErrorEntity"
                }
            }, hasConflictOnScaleUnit: {
                readOnly: true,
                serializedName: "properties.hasConflictOnScaleUnit",
                type: {
                    name: "Boolean"
                }
            }, hasConflictAcrossSubscription: {
                readOnly: true,
                serializedName: "properties.hasConflictAcrossSubscription",
                type: {
                    name: "Boolean"
                }
            }, conflictingAppResourceId: {
                readOnly: true,
                serializedName: "properties.conflictingAppResourceId",
                type: {
                    name: "String"
                }
            }, cNameRecords: {
                serializedName: "properties.cNameRecords",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String"
                        }
                    }
                }
            }, txtRecords: {
                serializedName: "properties.txtRecords",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String"
                        }
                    }
                }
            }, aRecords: {
                serializedName: "properties.aRecords",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String"
                        }
                    }
                }
            }, alternateCNameRecords: {
                serializedName: "properties.alternateCNameRecords",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String"
                        }
                    }
                }
            }, alternateTxtRecords: {
                serializedName: "properties.alternateTxtRecords",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String"
                        }
                    }
                }
            } })
    }
};
export var OpenIdConnectClientCredential = {
    serializedName: "OpenIdConnectClientCredential",
    type: {
        name: "Composite",
        className: "OpenIdConnectClientCredential",
        modelProperties: __assign(__assign({}, ProxyOnlyResource.type.modelProperties), { method: {
                serializedName: "properties.method",
                type: {
                    name: "Enum",
                    allowedValues: [
                        "ClientSecretPost"
                    ]
                }
            }, clientSecretSettingName: {
                serializedName: "properties.clientSecretSettingName",
                type: {
                    name: "String"
                }
            } })
    }
};
export var OpenIdConnectConfig = {
    serializedName: "OpenIdConnectConfig",
    type: {
        name: "Composite",
        className: "OpenIdConnectConfig",
        modelProperties: __assign(__assign({}, ProxyOnlyResource.type.modelProperties), { authorizationEndpoint: {
                serializedName: "properties.authorizationEndpoint",
                type: {
                    name: "String"
                }
            }, tokenEndpoint: {
                serializedName: "properties.tokenEndpoint",
                type: {
                    name: "String"
                }
            }, issuer: {
                serializedName: "properties.issuer",
                type: {
                    name: "String"
                }
            }, certificationUri: {
                serializedName: "properties.certificationUri",
                type: {
                    name: "String"
                }
            }, wellKnownOpenIdConfiguration: {
                serializedName: "properties.wellKnownOpenIdConfiguration",
                type: {
                    name: "String"
                }
            } })
    }
};
export var OpenIdConnectRegistration = {
    serializedName: "OpenIdConnectRegistration",
    type: {
        name: "Composite",
        className: "OpenIdConnectRegistration",
        modelProperties: __assign(__assign({}, ProxyOnlyResource.type.modelProperties), { clientId: {
                serializedName: "properties.clientId",
                type: {
                    name: "String"
                }
            }, clientCredential: {
                serializedName: "properties.clientCredential",
                type: {
                    name: "Composite",
                    className: "OpenIdConnectClientCredential"
                }
            }, openIdConnectConfiguration: {
                serializedName: "properties.openIdConnectConfiguration",
                type: {
                    name: "Composite",
                    className: "OpenIdConnectConfig"
                }
            } })
    }
};
export var OpenIdConnectLogin = {
    serializedName: "OpenIdConnectLogin",
    type: {
        name: "Composite",
        className: "OpenIdConnectLogin",
        modelProperties: __assign(__assign({}, ProxyOnlyResource.type.modelProperties), { nameClaimType: {
                serializedName: "properties.nameClaimType",
                type: {
                    name: "String"
                }
            }, scopes: {
                serializedName: "properties.scopes",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String"
                        }
                    }
                }
            } })
    }
};
export var CustomOpenIdConnectProvider = {
    serializedName: "CustomOpenIdConnectProvider",
    type: {
        name: "Composite",
        className: "CustomOpenIdConnectProvider",
        modelProperties: __assign(__assign({}, ProxyOnlyResource.type.modelProperties), { enabled: {
                serializedName: "properties.enabled",
                type: {
                    name: "Boolean"
                }
            }, registration: {
                serializedName: "properties.registration",
                type: {
                    name: "Composite",
                    className: "OpenIdConnectRegistration"
                }
            }, login: {
                serializedName: "properties.login",
                type: {
                    name: "Composite",
                    className: "OpenIdConnectLogin"
                }
            } })
    }
};
export var DeletedAppRestoreRequest = {
    serializedName: "DeletedAppRestoreRequest",
    type: {
        name: "Composite",
        className: "DeletedAppRestoreRequest",
        modelProperties: __assign(__assign({}, ProxyOnlyResource.type.modelProperties), { deletedSiteId: {
                serializedName: "properties.deletedSiteId",
                type: {
                    name: "String"
                }
            }, recoverConfiguration: {
                serializedName: "properties.recoverConfiguration",
                type: {
                    name: "Boolean"
                }
            }, snapshotTime: {
                serializedName: "properties.snapshotTime",
                type: {
                    name: "String"
                }
            }, useDRSecondary: {
                serializedName: "properties.useDRSecondary",
                type: {
                    name: "Boolean"
                }
            } })
    }
};
export var Deployment = {
    serializedName: "Deployment",
    type: {
        name: "Composite",
        className: "Deployment",
        modelProperties: __assign(__assign({}, ProxyOnlyResource.type.modelProperties), { status: {
                serializedName: "properties.status",
                type: {
                    name: "Number"
                }
            }, message: {
                serializedName: "properties.message",
                type: {
                    name: "String"
                }
            }, author: {
                serializedName: "properties.author",
                type: {
                    name: "String"
                }
            }, deployer: {
                serializedName: "properties.deployer",
                type: {
                    name: "String"
                }
            }, authorEmail: {
                serializedName: "properties.author_email",
                type: {
                    name: "String"
                }
            }, startTime: {
                serializedName: "properties.start_time",
                type: {
                    name: "DateTime"
                }
            }, endTime: {
                serializedName: "properties.end_time",
                type: {
                    name: "DateTime"
                }
            }, active: {
                serializedName: "properties.active",
                type: {
                    name: "Boolean"
                }
            }, details: {
                serializedName: "properties.details",
                type: {
                    name: "String"
                }
            } })
    }
};
export var EnabledConfig = {
    serializedName: "EnabledConfig",
    type: {
        name: "Composite",
        className: "EnabledConfig",
        modelProperties: {
            enabled: {
                serializedName: "enabled",
                type: {
                    name: "Boolean"
                }
            }
        }
    }
};
export var LoginScopes = {
    serializedName: "LoginScopes",
    type: {
        name: "Composite",
        className: "LoginScopes",
        modelProperties: __assign(__assign({}, ProxyOnlyResource.type.modelProperties), { scopes: {
                serializedName: "properties.scopes",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String"
                        }
                    }
                }
            } })
    }
};
export var Facebook = {
    serializedName: "Facebook",
    type: {
        name: "Composite",
        className: "Facebook",
        modelProperties: __assign(__assign({}, ProxyOnlyResource.type.modelProperties), { enabled: {
                serializedName: "properties.enabled",
                type: {
                    name: "Boolean"
                }
            }, registration: {
                serializedName: "properties.registration",
                type: {
                    name: "Composite",
                    className: "AppRegistration"
                }
            }, graphApiVersion: {
                serializedName: "properties.graphApiVersion",
                type: {
                    name: "String"
                }
            }, login: {
                serializedName: "properties.login",
                type: {
                    name: "Composite",
                    className: "LoginScopes"
                }
            } })
    }
};
export var FileSystemHttpLogsConfig = {
    serializedName: "FileSystemHttpLogsConfig",
    type: {
        name: "Composite",
        className: "FileSystemHttpLogsConfig",
        modelProperties: {
            retentionInMb: {
                serializedName: "retentionInMb",
                constraints: {
                    InclusiveMaximum: 100,
                    InclusiveMinimum: 25
                },
                type: {
                    name: "Number"
                }
            },
            retentionInDays: {
                serializedName: "retentionInDays",
                type: {
                    name: "Number"
                }
            },
            enabled: {
                serializedName: "enabled",
                type: {
                    name: "Boolean"
                }
            }
        }
    }
};
export var FileSystemTokenStore = {
    serializedName: "FileSystemTokenStore",
    type: {
        name: "Composite",
        className: "FileSystemTokenStore",
        modelProperties: __assign(__assign({}, ProxyOnlyResource.type.modelProperties), { directory: {
                serializedName: "properties.directory",
                type: {
                    name: "String"
                }
            } })
    }
};
export var ForwardProxy = {
    serializedName: "ForwardProxy",
    type: {
        name: "Composite",
        className: "ForwardProxy",
        modelProperties: __assign(__assign({}, ProxyOnlyResource.type.modelProperties), { convention: {
                serializedName: "properties.convention",
                type: {
                    name: "Enum",
                    allowedValues: [
                        "NoProxy",
                        "Standard",
                        "Custom"
                    ]
                }
            }, customHostHeaderName: {
                serializedName: "properties.customHostHeaderName",
                type: {
                    name: "String"
                }
            }, customProtoHeaderName: {
                serializedName: "properties.customProtoHeaderName",
                type: {
                    name: "String"
                }
            } })
    }
};
export var FunctionEnvelope = {
    serializedName: "FunctionEnvelope",
    type: {
        name: "Composite",
        className: "FunctionEnvelope",
        modelProperties: __assign(__assign({}, ProxyOnlyResource.type.modelProperties), { functionAppId: {
                serializedName: "properties.function_app_id",
                type: {
                    name: "String"
                }
            }, scriptRootPathHref: {
                serializedName: "properties.script_root_path_href",
                type: {
                    name: "String"
                }
            }, scriptHref: {
                serializedName: "properties.script_href",
                type: {
                    name: "String"
                }
            }, configHref: {
                serializedName: "properties.config_href",
                type: {
                    name: "String"
                }
            }, testDataHref: {
                serializedName: "properties.test_data_href",
                type: {
                    name: "String"
                }
            }, secretsFileHref: {
                serializedName: "properties.secrets_file_href",
                type: {
                    name: "String"
                }
            }, href: {
                serializedName: "properties.href",
                type: {
                    name: "String"
                }
            }, config: {
                serializedName: "properties.config",
                type: {
                    name: "Object"
                }
            }, files: {
                serializedName: "properties.files",
                type: {
                    name: "Dictionary",
                    value: {
                        type: {
                            name: "String"
                        }
                    }
                }
            }, testData: {
                serializedName: "properties.test_data",
                type: {
                    name: "String"
                }
            }, invokeUrlTemplate: {
                serializedName: "properties.invoke_url_template",
                type: {
                    name: "String"
                }
            }, language: {
                serializedName: "properties.language",
                type: {
                    name: "String"
                }
            }, isDisabled: {
                serializedName: "properties.isDisabled",
                type: {
                    name: "Boolean"
                }
            } })
    }
};
export var FunctionSecrets = {
    serializedName: "FunctionSecrets",
    type: {
        name: "Composite",
        className: "FunctionSecrets",
        modelProperties: {
            key: {
                serializedName: "key",
                type: {
                    name: "String"
                }
            },
            triggerUrl: {
                serializedName: "trigger_url",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var GitHub = {
    serializedName: "GitHub",
    type: {
        name: "Composite",
        className: "GitHub",
        modelProperties: __assign(__assign({}, ProxyOnlyResource.type.modelProperties), { enabled: {
                serializedName: "properties.enabled",
                type: {
                    name: "Boolean"
                }
            }, registration: {
                serializedName: "properties.registration",
                type: {
                    name: "Composite",
                    className: "ClientRegistration"
                }
            }, login: {
                serializedName: "properties.login",
                type: {
                    name: "Composite",
                    className: "LoginScopes"
                }
            } })
    }
};
export var GlobalValidation = {
    serializedName: "GlobalValidation",
    type: {
        name: "Composite",
        className: "GlobalValidation",
        modelProperties: __assign(__assign({}, ProxyOnlyResource.type.modelProperties), { requireAuthentication: {
                serializedName: "properties.requireAuthentication",
                type: {
                    name: "Boolean"
                }
            }, unauthenticatedClientAction: {
                serializedName: "properties.unauthenticatedClientAction",
                type: {
                    name: "Enum",
                    allowedValues: [
                        "RedirectToLoginPage",
                        "AllowAnonymous",
                        "Return401",
                        "Return403"
                    ]
                }
            }, redirectToProvider: {
                serializedName: "properties.redirectToProvider",
                type: {
                    name: "String"
                }
            }, excludedPaths: {
                serializedName: "properties.excludedPaths",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String"
                        }
                    }
                }
            } })
    }
};
export var Google = {
    serializedName: "Google",
    type: {
        name: "Composite",
        className: "Google",
        modelProperties: __assign(__assign({}, ProxyOnlyResource.type.modelProperties), { enabled: {
                serializedName: "properties.enabled",
                type: {
                    name: "Boolean"
                }
            }, registration: {
                serializedName: "properties.registration",
                type: {
                    name: "Composite",
                    className: "ClientRegistration"
                }
            }, login: {
                serializedName: "properties.login",
                type: {
                    name: "Composite",
                    className: "LoginScopes"
                }
            }, validation: {
                serializedName: "properties.validation",
                type: {
                    name: "Composite",
                    className: "AllowedAudiencesValidation"
                }
            } })
    }
};
export var HostKeys = {
    serializedName: "HostKeys",
    type: {
        name: "Composite",
        className: "HostKeys",
        modelProperties: {
            masterKey: {
                serializedName: "masterKey",
                type: {
                    name: "String"
                }
            },
            functionKeys: {
                serializedName: "functionKeys",
                type: {
                    name: "Dictionary",
                    value: {
                        type: {
                            name: "String"
                        }
                    }
                }
            },
            systemKeys: {
                serializedName: "systemKeys",
                type: {
                    name: "Dictionary",
                    value: {
                        type: {
                            name: "String"
                        }
                    }
                }
            }
        }
    }
};
export var HostNameBinding = {
    serializedName: "HostNameBinding",
    type: {
        name: "Composite",
        className: "HostNameBinding",
        modelProperties: __assign(__assign({}, ProxyOnlyResource.type.modelProperties), { siteName: {
                serializedName: "properties.siteName",
                type: {
                    name: "String"
                }
            }, domainId: {
                serializedName: "properties.domainId",
                type: {
                    name: "String"
                }
            }, azureResourceName: {
                serializedName: "properties.azureResourceName",
                type: {
                    name: "String"
                }
            }, azureResourceType: {
                serializedName: "properties.azureResourceType",
                type: {
                    name: "Enum",
                    allowedValues: [
                        "Website",
                        "TrafficManager"
                    ]
                }
            }, customHostNameDnsRecordType: {
                serializedName: "properties.customHostNameDnsRecordType",
                type: {
                    name: "Enum",
                    allowedValues: [
                        "CName",
                        "A"
                    ]
                }
            }, hostNameType: {
                serializedName: "properties.hostNameType",
                type: {
                    name: "Enum",
                    allowedValues: [
                        "Verified",
                        "Managed"
                    ]
                }
            }, sslState: {
                serializedName: "properties.sslState",
                type: {
                    name: "Enum",
                    allowedValues: [
                        "Disabled",
                        "SniEnabled",
                        "IpBasedEnabled"
                    ]
                }
            }, thumbprint: {
                serializedName: "properties.thumbprint",
                type: {
                    name: "String"
                }
            }, virtualIP: {
                readOnly: true,
                serializedName: "properties.virtualIP",
                type: {
                    name: "String"
                }
            } })
    }
};
export var HttpLogsConfig = {
    serializedName: "HttpLogsConfig",
    type: {
        name: "Composite",
        className: "HttpLogsConfig",
        modelProperties: {
            fileSystem: {
                serializedName: "fileSystem",
                type: {
                    name: "Composite",
                    className: "FileSystemHttpLogsConfig"
                }
            },
            azureBlobStorage: {
                serializedName: "azureBlobStorage",
                type: {
                    name: "Composite",
                    className: "AzureBlobStorageHttpLogsConfig"
                }
            }
        }
    }
};
export var HttpSettingsRoutes = {
    serializedName: "HttpSettingsRoutes",
    type: {
        name: "Composite",
        className: "HttpSettingsRoutes",
        modelProperties: __assign(__assign({}, ProxyOnlyResource.type.modelProperties), { apiPrefix: {
                serializedName: "properties.apiPrefix",
                type: {
                    name: "String"
                }
            } })
    }
};
export var HttpSettings = {
    serializedName: "HttpSettings",
    type: {
        name: "Composite",
        className: "HttpSettings",
        modelProperties: __assign(__assign({}, ProxyOnlyResource.type.modelProperties), { requireHttps: {
                serializedName: "properties.requireHttps",
                type: {
                    name: "Boolean"
                }
            }, routes: {
                serializedName: "properties.routes",
                type: {
                    name: "Composite",
                    className: "HttpSettingsRoutes"
                }
            }, forwardProxy: {
                serializedName: "properties.forwardProxy",
                type: {
                    name: "Composite",
                    className: "ForwardProxy"
                }
            } })
    }
};
export var TwitterRegistration = {
    serializedName: "TwitterRegistration",
    type: {
        name: "Composite",
        className: "TwitterRegistration",
        modelProperties: __assign(__assign({}, ProxyOnlyResource.type.modelProperties), { consumerKey: {
                serializedName: "properties.consumerKey",
                type: {
                    name: "String"
                }
            }, consumerSecretSettingName: {
                serializedName: "properties.consumerSecretSettingName",
                type: {
                    name: "String"
                }
            } })
    }
};
export var Twitter = {
    serializedName: "Twitter",
    type: {
        name: "Composite",
        className: "Twitter",
        modelProperties: __assign(__assign({}, ProxyOnlyResource.type.modelProperties), { enabled: {
                serializedName: "properties.enabled",
                type: {
                    name: "Boolean"
                }
            }, registration: {
                serializedName: "properties.registration",
                type: {
                    name: "Composite",
                    className: "TwitterRegistration"
                }
            } })
    }
};
export var IdentityProviders = {
    serializedName: "IdentityProviders",
    type: {
        name: "Composite",
        className: "IdentityProviders",
        modelProperties: __assign(__assign({}, ProxyOnlyResource.type.modelProperties), { azureActiveDirectory: {
                serializedName: "properties.azureActiveDirectory",
                type: {
                    name: "Composite",
                    className: "AzureActiveDirectory"
                }
            }, facebook: {
                serializedName: "properties.facebook",
                type: {
                    name: "Composite",
                    className: "Facebook"
                }
            }, gitHub: {
                serializedName: "properties.gitHub",
                type: {
                    name: "Composite",
                    className: "GitHub"
                }
            }, google: {
                serializedName: "properties.google",
                type: {
                    name: "Composite",
                    className: "Google"
                }
            }, twitter: {
                serializedName: "properties.twitter",
                type: {
                    name: "Composite",
                    className: "Twitter"
                }
            }, customOpenIdConnectProviders: {
                serializedName: "properties.customOpenIdConnectProviders",
                type: {
                    name: "Dictionary",
                    value: {
                        type: {
                            name: "Composite",
                            className: "CustomOpenIdConnectProvider"
                        }
                    }
                }
            } })
    }
};
export var KeyInfo = {
    serializedName: "KeyInfo",
    type: {
        name: "Composite",
        className: "KeyInfo",
        modelProperties: {
            name: {
                serializedName: "name",
                type: {
                    name: "String"
                }
            },
            value: {
                serializedName: "value",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var LoginRoutes = {
    serializedName: "LoginRoutes",
    type: {
        name: "Composite",
        className: "LoginRoutes",
        modelProperties: __assign(__assign({}, ProxyOnlyResource.type.modelProperties), { logoutEndpoint: {
                serializedName: "properties.logoutEndpoint",
                type: {
                    name: "String"
                }
            } })
    }
};
export var TokenStore = {
    serializedName: "TokenStore",
    type: {
        name: "Composite",
        className: "TokenStore",
        modelProperties: __assign(__assign({}, ProxyOnlyResource.type.modelProperties), { enabled: {
                serializedName: "properties.enabled",
                type: {
                    name: "Boolean"
                }
            }, tokenRefreshExtensionHours: {
                serializedName: "properties.tokenRefreshExtensionHours",
                type: {
                    name: "Number"
                }
            }, fileSystem: {
                serializedName: "properties.fileSystem",
                type: {
                    name: "Composite",
                    className: "FileSystemTokenStore"
                }
            }, azureBlobStorage: {
                serializedName: "properties.azureBlobStorage",
                type: {
                    name: "Composite",
                    className: "BlobStorageTokenStore"
                }
            } })
    }
};
export var Nonce = {
    serializedName: "Nonce",
    type: {
        name: "Composite",
        className: "Nonce",
        modelProperties: __assign(__assign({}, ProxyOnlyResource.type.modelProperties), { validateNonce: {
                serializedName: "properties.validateNonce",
                type: {
                    name: "Boolean"
                }
            }, nonceExpirationInterval: {
                serializedName: "properties.nonceExpirationInterval",
                type: {
                    name: "String"
                }
            } })
    }
};
export var Login = {
    serializedName: "Login",
    type: {
        name: "Composite",
        className: "Login",
        modelProperties: __assign(__assign({}, ProxyOnlyResource.type.modelProperties), { routes: {
                serializedName: "properties.routes",
                type: {
                    name: "Composite",
                    className: "LoginRoutes"
                }
            }, tokenStore: {
                serializedName: "properties.tokenStore",
                type: {
                    name: "Composite",
                    className: "TokenStore"
                }
            }, preserveUrlFragmentsForLogins: {
                serializedName: "properties.preserveUrlFragmentsForLogins",
                type: {
                    name: "Boolean"
                }
            }, allowedExternalRedirectUrls: {
                serializedName: "properties.allowedExternalRedirectUrls",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String"
                        }
                    }
                }
            }, cookieExpiration: {
                serializedName: "properties.cookieExpiration",
                type: {
                    name: "Composite",
                    className: "CookieExpiration"
                }
            }, nonce: {
                serializedName: "properties.nonce",
                type: {
                    name: "Composite",
                    className: "Nonce"
                }
            } })
    }
};
export var MSDeploy = {
    serializedName: "MSDeploy",
    type: {
        name: "Composite",
        className: "MSDeploy",
        modelProperties: __assign(__assign({}, ProxyOnlyResource.type.modelProperties), { packageUri: {
                serializedName: "properties.packageUri",
                type: {
                    name: "String"
                }
            }, connectionString: {
                serializedName: "properties.connectionString",
                type: {
                    name: "String"
                }
            }, dbType: {
                serializedName: "properties.dbType",
                type: {
                    name: "String"
                }
            }, setParametersXmlFileUri: {
                serializedName: "properties.setParametersXmlFileUri",
                type: {
                    name: "String"
                }
            }, setParameters: {
                serializedName: "properties.setParameters",
                type: {
                    name: "Dictionary",
                    value: {
                        type: {
                            name: "String"
                        }
                    }
                }
            }, skipAppData: {
                serializedName: "properties.skipAppData",
                type: {
                    name: "Boolean"
                }
            }, appOffline: {
                serializedName: "properties.appOffline",
                type: {
                    name: "Boolean"
                }
            } })
    }
};
export var MSDeployLogEntry = {
    serializedName: "MSDeployLogEntry",
    type: {
        name: "Composite",
        className: "MSDeployLogEntry",
        modelProperties: {
            time: {
                readOnly: true,
                serializedName: "time",
                type: {
                    name: "DateTime"
                }
            },
            type: {
                readOnly: true,
                serializedName: "type",
                type: {
                    name: "Enum",
                    allowedValues: [
                        "Message",
                        "Warning",
                        "Error"
                    ]
                }
            },
            message: {
                readOnly: true,
                serializedName: "message",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var MSDeployLog = {
    serializedName: "MSDeployLog",
    type: {
        name: "Composite",
        className: "MSDeployLog",
        modelProperties: __assign(__assign({}, ProxyOnlyResource.type.modelProperties), { entries: {
                readOnly: true,
                serializedName: "properties.entries",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "MSDeployLogEntry"
                        }
                    }
                }
            } })
    }
};
export var MSDeployStatus = {
    serializedName: "MSDeployStatus",
    type: {
        name: "Composite",
        className: "MSDeployStatus",
        modelProperties: __assign(__assign({}, ProxyOnlyResource.type.modelProperties), { deployer: {
                readOnly: true,
                serializedName: "properties.deployer",
                type: {
                    name: "String"
                }
            }, provisioningState: {
                readOnly: true,
                serializedName: "properties.provisioningState",
                type: {
                    name: "Enum",
                    allowedValues: [
                        "accepted",
                        "running",
                        "succeeded",
                        "failed",
                        "canceled"
                    ]
                }
            }, startTime: {
                readOnly: true,
                serializedName: "properties.startTime",
                type: {
                    name: "DateTime"
                }
            }, endTime: {
                readOnly: true,
                serializedName: "properties.endTime",
                type: {
                    name: "DateTime"
                }
            }, complete: {
                readOnly: true,
                serializedName: "properties.complete",
                type: {
                    name: "Boolean"
                }
            } })
    }
};
export var MigrateMySqlRequest = {
    serializedName: "MigrateMySqlRequest",
    type: {
        name: "Composite",
        className: "MigrateMySqlRequest",
        modelProperties: __assign(__assign({}, ProxyOnlyResource.type.modelProperties), { connectionString: {
                required: true,
                serializedName: "properties.connectionString",
                type: {
                    name: "String"
                }
            }, migrationType: {
                required: true,
                serializedName: "properties.migrationType",
                type: {
                    name: "Enum",
                    allowedValues: [
                        "LocalToRemote",
                        "RemoteToLocal"
                    ]
                }
            } })
    }
};
export var MigrateMySqlStatus = {
    serializedName: "MigrateMySqlStatus",
    type: {
        name: "Composite",
        className: "MigrateMySqlStatus",
        modelProperties: __assign(__assign({}, ProxyOnlyResource.type.modelProperties), { migrationOperationStatus: {
                readOnly: true,
                serializedName: "properties.migrationOperationStatus",
                type: {
                    name: "Enum",
                    allowedValues: [
                        "InProgress",
                        "Failed",
                        "Succeeded",
                        "TimedOut",
                        "Created"
                    ]
                }
            }, operationId: {
                readOnly: true,
                serializedName: "properties.operationId",
                type: {
                    name: "String"
                }
            }, localMySqlEnabled: {
                readOnly: true,
                serializedName: "properties.localMySqlEnabled",
                type: {
                    name: "Boolean"
                }
            } })
    }
};
export var RelayServiceConnectionEntity = {
    serializedName: "RelayServiceConnectionEntity",
    type: {
        name: "Composite",
        className: "RelayServiceConnectionEntity",
        modelProperties: __assign(__assign({}, ProxyOnlyResource.type.modelProperties), { entityName: {
                serializedName: "properties.entityName",
                type: {
                    name: "String"
                }
            }, entityConnectionString: {
                serializedName: "properties.entityConnectionString",
                type: {
                    name: "String"
                }
            }, resourceType: {
                serializedName: "properties.resourceType",
                type: {
                    name: "String"
                }
            }, resourceConnectionString: {
                serializedName: "properties.resourceConnectionString",
                type: {
                    name: "String"
                }
            }, hostname: {
                serializedName: "properties.hostname",
                type: {
                    name: "String"
                }
            }, port: {
                serializedName: "properties.port",
                type: {
                    name: "Number"
                }
            }, biztalkUri: {
                serializedName: "properties.biztalkUri",
                type: {
                    name: "String"
                }
            } })
    }
};
export var NetworkFeatures = {
    serializedName: "NetworkFeatures",
    type: {
        name: "Composite",
        className: "NetworkFeatures",
        modelProperties: __assign(__assign({}, ProxyOnlyResource.type.modelProperties), { virtualNetworkName: {
                readOnly: true,
                serializedName: "properties.virtualNetworkName",
                type: {
                    name: "String"
                }
            }, virtualNetworkConnection: {
                readOnly: true,
                serializedName: "properties.virtualNetworkConnection",
                type: {
                    name: "Composite",
                    className: "VnetInfo"
                }
            }, hybridConnections: {
                readOnly: true,
                serializedName: "properties.hybridConnections",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "RelayServiceConnectionEntity"
                        }
                    }
                }
            }, hybridConnectionsV2: {
                readOnly: true,
                serializedName: "properties.hybridConnectionsV2",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "HybridConnection"
                        }
                    }
                }
            } })
    }
};
export var NetworkTrace = {
    serializedName: "NetworkTrace",
    type: {
        name: "Composite",
        className: "NetworkTrace",
        modelProperties: {
            path: {
                serializedName: "path",
                type: {
                    name: "String"
                }
            },
            status: {
                serializedName: "status",
                type: {
                    name: "String"
                }
            },
            message: {
                serializedName: "message",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var PerfMonSample = {
    serializedName: "PerfMonSample",
    type: {
        name: "Composite",
        className: "PerfMonSample",
        modelProperties: {
            time: {
                serializedName: "time",
                type: {
                    name: "DateTime"
                }
            },
            instanceName: {
                serializedName: "instanceName",
                type: {
                    name: "String"
                }
            },
            value: {
                serializedName: "value",
                type: {
                    name: "Number"
                }
            }
        }
    }
};
export var PerfMonSet = {
    serializedName: "PerfMonSet",
    type: {
        name: "Composite",
        className: "PerfMonSet",
        modelProperties: {
            name: {
                serializedName: "name",
                type: {
                    name: "String"
                }
            },
            startTime: {
                serializedName: "startTime",
                type: {
                    name: "DateTime"
                }
            },
            endTime: {
                serializedName: "endTime",
                type: {
                    name: "DateTime"
                }
            },
            timeGrain: {
                serializedName: "timeGrain",
                type: {
                    name: "String"
                }
            },
            values: {
                serializedName: "values",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "PerfMonSample"
                        }
                    }
                }
            }
        }
    }
};
export var PerfMonResponse = {
    serializedName: "PerfMonResponse",
    type: {
        name: "Composite",
        className: "PerfMonResponse",
        modelProperties: {
            code: {
                serializedName: "code",
                type: {
                    name: "String"
                }
            },
            message: {
                serializedName: "message",
                type: {
                    name: "String"
                }
            },
            data: {
                serializedName: "data",
                type: {
                    name: "Composite",
                    className: "PerfMonSet"
                }
            }
        }
    }
};
export var PremierAddOn = {
    serializedName: "PremierAddOn",
    type: {
        name: "Composite",
        className: "PremierAddOn",
        modelProperties: __assign(__assign({}, Resource.type.modelProperties), { sku: {
                serializedName: "properties.sku",
                type: {
                    name: "String"
                }
            }, product: {
                serializedName: "properties.product",
                type: {
                    name: "String"
                }
            }, vendor: {
                serializedName: "properties.vendor",
                type: {
                    name: "String"
                }
            }, marketplacePublisher: {
                serializedName: "properties.marketplacePublisher",
                type: {
                    name: "String"
                }
            }, marketplaceOffer: {
                serializedName: "properties.marketplaceOffer",
                type: {
                    name: "String"
                }
            } })
    }
};
export var PremierAddOnPatchResource = {
    serializedName: "PremierAddOnPatchResource",
    type: {
        name: "Composite",
        className: "PremierAddOnPatchResource",
        modelProperties: __assign(__assign({}, ProxyOnlyResource.type.modelProperties), { sku: {
                serializedName: "properties.sku",
                type: {
                    name: "String"
                }
            }, product: {
                serializedName: "properties.product",
                type: {
                    name: "String"
                }
            }, vendor: {
                serializedName: "properties.vendor",
                type: {
                    name: "String"
                }
            }, marketplacePublisher: {
                serializedName: "properties.marketplacePublisher",
                type: {
                    name: "String"
                }
            }, marketplaceOffer: {
                serializedName: "properties.marketplaceOffer",
                type: {
                    name: "String"
                }
            } })
    }
};
export var PrivateAccessSubnet = {
    serializedName: "PrivateAccessSubnet",
    type: {
        name: "Composite",
        className: "PrivateAccessSubnet",
        modelProperties: {
            name: {
                serializedName: "name",
                type: {
                    name: "String"
                }
            },
            key: {
                serializedName: "key",
                type: {
                    name: "Number"
                }
            }
        }
    }
};
export var PrivateAccessVirtualNetwork = {
    serializedName: "PrivateAccessVirtualNetwork",
    type: {
        name: "Composite",
        className: "PrivateAccessVirtualNetwork",
        modelProperties: {
            name: {
                serializedName: "name",
                type: {
                    name: "String"
                }
            },
            key: {
                serializedName: "key",
                type: {
                    name: "Number"
                }
            },
            resourceId: {
                serializedName: "resourceId",
                type: {
                    name: "String"
                }
            },
            subnets: {
                serializedName: "subnets",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "PrivateAccessSubnet"
                        }
                    }
                }
            }
        }
    }
};
export var PrivateAccess = {
    serializedName: "PrivateAccess",
    type: {
        name: "Composite",
        className: "PrivateAccess",
        modelProperties: __assign(__assign({}, ProxyOnlyResource.type.modelProperties), { enabled: {
                serializedName: "properties.enabled",
                type: {
                    name: "Boolean"
                }
            }, virtualNetworks: {
                serializedName: "properties.virtualNetworks",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "PrivateAccessVirtualNetwork"
                        }
                    }
                }
            } })
    }
};
export var PrivateLinkConnectionState = {
    serializedName: "PrivateLinkConnectionState",
    type: {
        name: "Composite",
        className: "PrivateLinkConnectionState",
        modelProperties: {
            status: {
                serializedName: "status",
                type: {
                    name: "String"
                }
            },
            description: {
                serializedName: "description",
                type: {
                    name: "String"
                }
            },
            actionsRequired: {
                serializedName: "actionsRequired",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var PrivateEndpointConnectionResource = {
    serializedName: "PrivateEndpointConnectionResource",
    type: {
        name: "Composite",
        className: "PrivateEndpointConnectionResource",
        modelProperties: __assign(__assign({}, ProxyOnlyResource.type.modelProperties), { provisioningState: {
                readOnly: true,
                serializedName: "properties.provisioningState",
                type: {
                    name: "String"
                }
            }, privateEndpoint: {
                serializedName: "properties.privateEndpoint",
                type: {
                    name: "Composite",
                    className: "ArmIdWrapper"
                }
            }, privateLinkServiceConnectionState: {
                serializedName: "properties.privateLinkServiceConnectionState",
                type: {
                    name: "Composite",
                    className: "PrivateLinkConnectionState"
                }
            } })
    }
};
export var PrivateLinkConnectionApprovalRequestResource = {
    serializedName: "PrivateLinkConnectionApprovalRequestResource",
    type: {
        name: "Composite",
        className: "PrivateLinkConnectionApprovalRequestResource",
        modelProperties: __assign(__assign({}, ProxyOnlyResource.type.modelProperties), { privateLinkServiceConnectionState: {
                serializedName: "properties.privateLinkServiceConnectionState",
                type: {
                    name: "Composite",
                    className: "PrivateLinkConnectionState"
                }
            } })
    }
};
export var PrivateLinkResourceProperties = {
    serializedName: "PrivateLinkResourceProperties",
    type: {
        name: "Composite",
        className: "PrivateLinkResourceProperties",
        modelProperties: {
            groupId: {
                readOnly: true,
                serializedName: "groupId",
                type: {
                    name: "String"
                }
            },
            requiredMembers: {
                readOnly: true,
                serializedName: "requiredMembers",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String"
                        }
                    }
                }
            },
            requiredZoneNames: {
                readOnly: true,
                serializedName: "requiredZoneNames",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String"
                        }
                    }
                }
            }
        }
    }
};
export var PrivateLinkResource = {
    serializedName: "PrivateLinkResource",
    type: {
        name: "Composite",
        className: "PrivateLinkResource",
        modelProperties: {
            id: {
                required: true,
                serializedName: "id",
                type: {
                    name: "String"
                }
            },
            name: {
                required: true,
                serializedName: "name",
                type: {
                    name: "String"
                }
            },
            type: {
                required: true,
                serializedName: "type",
                type: {
                    name: "String"
                }
            },
            properties: {
                required: true,
                serializedName: "properties",
                type: {
                    name: "Composite",
                    className: "PrivateLinkResourceProperties"
                }
            }
        }
    }
};
export var PrivateLinkResourcesWrapper = {
    serializedName: "PrivateLinkResourcesWrapper",
    type: {
        name: "Composite",
        className: "PrivateLinkResourcesWrapper",
        modelProperties: {
            value: {
                required: true,
                serializedName: "value",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "PrivateLinkResource"
                        }
                    }
                }
            }
        }
    }
};
export var ProcessThreadInfo = {
    serializedName: "ProcessThreadInfo",
    type: {
        name: "Composite",
        className: "ProcessThreadInfo",
        modelProperties: __assign(__assign({}, ProxyOnlyResource.type.modelProperties), { identifier: {
                readOnly: true,
                serializedName: "properties.identifier",
                type: {
                    name: "Number"
                }
            }, href: {
                serializedName: "properties.href",
                type: {
                    name: "String"
                }
            }, process: {
                serializedName: "properties.process",
                type: {
                    name: "String"
                }
            }, startAddress: {
                serializedName: "properties.start_address",
                type: {
                    name: "String"
                }
            }, currentPriority: {
                serializedName: "properties.current_priority",
                type: {
                    name: "Number"
                }
            }, priorityLevel: {
                serializedName: "properties.priority_level",
                type: {
                    name: "String"
                }
            }, basePriority: {
                serializedName: "properties.base_priority",
                type: {
                    name: "Number"
                }
            }, startTime: {
                serializedName: "properties.start_time",
                type: {
                    name: "DateTime"
                }
            }, totalProcessorTime: {
                serializedName: "properties.total_processor_time",
                type: {
                    name: "String"
                }
            }, userProcessorTime: {
                serializedName: "properties.user_processor_time",
                type: {
                    name: "String"
                }
            }, state: {
                serializedName: "properties.state",
                type: {
                    name: "String"
                }
            }, waitReason: {
                serializedName: "properties.wait_reason",
                type: {
                    name: "String"
                }
            } })
    }
};
export var ProcessModuleInfo = {
    serializedName: "ProcessModuleInfo",
    type: {
        name: "Composite",
        className: "ProcessModuleInfo",
        modelProperties: __assign(__assign({}, ProxyOnlyResource.type.modelProperties), { baseAddress: {
                serializedName: "properties.base_address",
                type: {
                    name: "String"
                }
            }, fileName: {
                serializedName: "properties.file_name",
                type: {
                    name: "String"
                }
            }, href: {
                serializedName: "properties.href",
                type: {
                    name: "String"
                }
            }, filePath: {
                serializedName: "properties.file_path",
                type: {
                    name: "String"
                }
            }, moduleMemorySize: {
                serializedName: "properties.module_memory_size",
                type: {
                    name: "Number"
                }
            }, fileVersion: {
                serializedName: "properties.file_version",
                type: {
                    name: "String"
                }
            }, fileDescription: {
                serializedName: "properties.file_description",
                type: {
                    name: "String"
                }
            }, product: {
                serializedName: "properties.product",
                type: {
                    name: "String"
                }
            }, productVersion: {
                serializedName: "properties.product_version",
                type: {
                    name: "String"
                }
            }, isDebug: {
                serializedName: "properties.is_debug",
                type: {
                    name: "Boolean"
                }
            }, language: {
                serializedName: "properties.language",
                type: {
                    name: "String"
                }
            } })
    }
};
export var ProcessInfo = {
    serializedName: "ProcessInfo",
    type: {
        name: "Composite",
        className: "ProcessInfo",
        modelProperties: __assign(__assign({}, ProxyOnlyResource.type.modelProperties), { identifier: {
                readOnly: true,
                serializedName: "properties.identifier",
                type: {
                    name: "Number"
                }
            }, deploymentName: {
                serializedName: "properties.deployment_name",
                type: {
                    name: "String"
                }
            }, href: {
                serializedName: "properties.href",
                type: {
                    name: "String"
                }
            }, minidump: {
                serializedName: "properties.minidump",
                type: {
                    name: "String"
                }
            }, isProfileRunning: {
                serializedName: "properties.is_profile_running",
                type: {
                    name: "Boolean"
                }
            }, isIisProfileRunning: {
                serializedName: "properties.is_iis_profile_running",
                type: {
                    name: "Boolean"
                }
            }, iisProfileTimeoutInSeconds: {
                serializedName: "properties.iis_profile_timeout_in_seconds",
                type: {
                    name: "Number"
                }
            }, parent: {
                serializedName: "properties.parent",
                type: {
                    name: "String"
                }
            }, children: {
                serializedName: "properties.children",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String"
                        }
                    }
                }
            }, threads: {
                serializedName: "properties.threads",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "ProcessThreadInfo"
                        }
                    }
                }
            }, openFileHandles: {
                serializedName: "properties.open_file_handles",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String"
                        }
                    }
                }
            }, modules: {
                serializedName: "properties.modules",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "ProcessModuleInfo"
                        }
                    }
                }
            }, fileName: {
                serializedName: "properties.file_name",
                type: {
                    name: "String"
                }
            }, commandLine: {
                serializedName: "properties.command_line",
                type: {
                    name: "String"
                }
            }, userName: {
                serializedName: "properties.user_name",
                type: {
                    name: "String"
                }
            }, handleCount: {
                serializedName: "properties.handle_count",
                type: {
                    name: "Number"
                }
            }, moduleCount: {
                serializedName: "properties.module_count",
                type: {
                    name: "Number"
                }
            }, threadCount: {
                serializedName: "properties.thread_count",
                type: {
                    name: "Number"
                }
            }, startTime: {
                serializedName: "properties.start_time",
                type: {
                    name: "DateTime"
                }
            }, totalCpuTime: {
                serializedName: "properties.total_cpu_time",
                type: {
                    name: "String"
                }
            }, userCpuTime: {
                serializedName: "properties.user_cpu_time",
                type: {
                    name: "String"
                }
            }, privilegedCpuTime: {
                serializedName: "properties.privileged_cpu_time",
                type: {
                    name: "String"
                }
            }, workingSet: {
                serializedName: "properties.working_set",
                type: {
                    name: "Number"
                }
            }, peakWorkingSet: {
                serializedName: "properties.peak_working_set",
                type: {
                    name: "Number"
                }
            }, privateMemory: {
                serializedName: "properties.private_memory",
                type: {
                    name: "Number"
                }
            }, virtualMemory: {
                serializedName: "properties.virtual_memory",
                type: {
                    name: "Number"
                }
            }, peakVirtualMemory: {
                serializedName: "properties.peak_virtual_memory",
                type: {
                    name: "Number"
                }
            }, pagedSystemMemory: {
                serializedName: "properties.paged_system_memory",
                type: {
                    name: "Number"
                }
            }, nonPagedSystemMemory: {
                serializedName: "properties.non_paged_system_memory",
                type: {
                    name: "Number"
                }
            }, pagedMemory: {
                serializedName: "properties.paged_memory",
                type: {
                    name: "Number"
                }
            }, peakPagedMemory: {
                serializedName: "properties.peak_paged_memory",
                type: {
                    name: "Number"
                }
            }, timeStamp: {
                serializedName: "properties.time_stamp",
                type: {
                    name: "DateTime"
                }
            }, environmentVariables: {
                serializedName: "properties.environment_variables",
                type: {
                    name: "Dictionary",
                    value: {
                        type: {
                            name: "String"
                        }
                    }
                }
            }, isScmSite: {
                serializedName: "properties.is_scm_site",
                type: {
                    name: "Boolean"
                }
            }, isWebjob: {
                serializedName: "properties.is_webjob",
                type: {
                    name: "Boolean"
                }
            }, description: {
                serializedName: "properties.description",
                type: {
                    name: "String"
                }
            } })
    }
};
export var PublicCertificate = {
    serializedName: "PublicCertificate",
    type: {
        name: "Composite",
        className: "PublicCertificate",
        modelProperties: __assign(__assign({}, ProxyOnlyResource.type.modelProperties), { blob: {
                serializedName: "properties.blob",
                type: {
                    name: "ByteArray"
                }
            }, publicCertificateLocation: {
                serializedName: "properties.publicCertificateLocation",
                type: {
                    name: "Enum",
                    allowedValues: [
                        "CurrentUserMy",
                        "LocalMachineMy",
                        "Unknown"
                    ]
                }
            }, thumbprint: {
                readOnly: true,
                serializedName: "properties.thumbprint",
                type: {
                    name: "String"
                }
            } })
    }
};
export var RestoreRequest = {
    serializedName: "RestoreRequest",
    type: {
        name: "Composite",
        className: "RestoreRequest",
        modelProperties: __assign(__assign({}, ProxyOnlyResource.type.modelProperties), { storageAccountUrl: {
                required: true,
                serializedName: "properties.storageAccountUrl",
                type: {
                    name: "String"
                }
            }, blobName: {
                serializedName: "properties.blobName",
                type: {
                    name: "String"
                }
            }, overwrite: {
                required: true,
                serializedName: "properties.overwrite",
                type: {
                    name: "Boolean"
                }
            }, siteName: {
                serializedName: "properties.siteName",
                type: {
                    name: "String"
                }
            }, databases: {
                serializedName: "properties.databases",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "DatabaseBackupSetting"
                        }
                    }
                }
            }, ignoreConflictingHostNames: {
                serializedName: "properties.ignoreConflictingHostNames",
                defaultValue: false,
                type: {
                    name: "Boolean"
                }
            }, ignoreDatabases: {
                serializedName: "properties.ignoreDatabases",
                defaultValue: false,
                type: {
                    name: "Boolean"
                }
            }, appServicePlan: {
                serializedName: "properties.appServicePlan",
                type: {
                    name: "String"
                }
            }, operationType: {
                serializedName: "properties.operationType",
                defaultValue: 'Default',
                type: {
                    name: "Enum",
                    allowedValues: [
                        "Default",
                        "Clone",
                        "Relocation",
                        "Snapshot",
                        "CloudFS"
                    ]
                }
            }, adjustConnectionStrings: {
                serializedName: "properties.adjustConnectionStrings",
                type: {
                    name: "Boolean"
                }
            }, hostingEnvironment: {
                serializedName: "properties.hostingEnvironment",
                type: {
                    name: "String"
                }
            } })
    }
};
export var SiteAuthSettings = {
    serializedName: "SiteAuthSettings",
    type: {
        name: "Composite",
        className: "SiteAuthSettings",
        modelProperties: __assign(__assign({}, ProxyOnlyResource.type.modelProperties), { enabled: {
                serializedName: "properties.enabled",
                type: {
                    name: "Boolean"
                }
            }, runtimeVersion: {
                serializedName: "properties.runtimeVersion",
                type: {
                    name: "String"
                }
            }, unauthenticatedClientAction: {
                serializedName: "properties.unauthenticatedClientAction",
                type: {
                    name: "Enum",
                    allowedValues: [
                        "RedirectToLoginPage",
                        "AllowAnonymous"
                    ]
                }
            }, tokenStoreEnabled: {
                serializedName: "properties.tokenStoreEnabled",
                type: {
                    name: "Boolean"
                }
            }, allowedExternalRedirectUrls: {
                serializedName: "properties.allowedExternalRedirectUrls",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String"
                        }
                    }
                }
            }, defaultProvider: {
                serializedName: "properties.defaultProvider",
                type: {
                    name: "Enum",
                    allowedValues: [
                        "AzureActiveDirectory",
                        "Facebook",
                        "Google",
                        "MicrosoftAccount",
                        "Twitter",
                        "Github"
                    ]
                }
            }, tokenRefreshExtensionHours: {
                serializedName: "properties.tokenRefreshExtensionHours",
                type: {
                    name: "Number"
                }
            }, clientId: {
                serializedName: "properties.clientId",
                type: {
                    name: "String"
                }
            }, clientSecret: {
                serializedName: "properties.clientSecret",
                type: {
                    name: "String"
                }
            }, clientSecretSettingName: {
                serializedName: "properties.clientSecretSettingName",
                type: {
                    name: "String"
                }
            }, clientSecretCertificateThumbprint: {
                serializedName: "properties.clientSecretCertificateThumbprint",
                type: {
                    name: "String"
                }
            }, issuer: {
                serializedName: "properties.issuer",
                type: {
                    name: "String"
                }
            }, validateIssuer: {
                serializedName: "properties.validateIssuer",
                type: {
                    name: "Boolean"
                }
            }, allowedAudiences: {
                serializedName: "properties.allowedAudiences",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String"
                        }
                    }
                }
            }, additionalLoginParams: {
                serializedName: "properties.additionalLoginParams",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String"
                        }
                    }
                }
            }, aadClaimsAuthorization: {
                serializedName: "properties.aadClaimsAuthorization",
                type: {
                    name: "String"
                }
            }, googleClientId: {
                serializedName: "properties.googleClientId",
                type: {
                    name: "String"
                }
            }, googleClientSecret: {
                serializedName: "properties.googleClientSecret",
                type: {
                    name: "String"
                }
            }, googleClientSecretSettingName: {
                serializedName: "properties.googleClientSecretSettingName",
                type: {
                    name: "String"
                }
            }, googleOAuthScopes: {
                serializedName: "properties.googleOAuthScopes",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String"
                        }
                    }
                }
            }, facebookAppId: {
                serializedName: "properties.facebookAppId",
                type: {
                    name: "String"
                }
            }, facebookAppSecret: {
                serializedName: "properties.facebookAppSecret",
                type: {
                    name: "String"
                }
            }, facebookAppSecretSettingName: {
                serializedName: "properties.facebookAppSecretSettingName",
                type: {
                    name: "String"
                }
            }, facebookOAuthScopes: {
                serializedName: "properties.facebookOAuthScopes",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String"
                        }
                    }
                }
            }, gitHubClientId: {
                serializedName: "properties.gitHubClientId",
                type: {
                    name: "String"
                }
            }, gitHubClientSecret: {
                serializedName: "properties.gitHubClientSecret",
                type: {
                    name: "String"
                }
            }, gitHubClientSecretSettingName: {
                serializedName: "properties.gitHubClientSecretSettingName",
                type: {
                    name: "String"
                }
            }, gitHubOAuthScopes: {
                serializedName: "properties.gitHubOAuthScopes",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String"
                        }
                    }
                }
            }, twitterConsumerKey: {
                serializedName: "properties.twitterConsumerKey",
                type: {
                    name: "String"
                }
            }, twitterConsumerSecret: {
                serializedName: "properties.twitterConsumerSecret",
                type: {
                    name: "String"
                }
            }, twitterConsumerSecretSettingName: {
                serializedName: "properties.twitterConsumerSecretSettingName",
                type: {
                    name: "String"
                }
            }, microsoftAccountClientId: {
                serializedName: "properties.microsoftAccountClientId",
                type: {
                    name: "String"
                }
            }, microsoftAccountClientSecret: {
                serializedName: "properties.microsoftAccountClientSecret",
                type: {
                    name: "String"
                }
            }, microsoftAccountClientSecretSettingName: {
                serializedName: "properties.microsoftAccountClientSecretSettingName",
                type: {
                    name: "String"
                }
            }, microsoftAccountOAuthScopes: {
                serializedName: "properties.microsoftAccountOAuthScopes",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String"
                        }
                    }
                }
            }, isAuthFromFile: {
                serializedName: "properties.isAuthFromFile",
                type: {
                    name: "String"
                }
            }, authFilePath: {
                serializedName: "properties.authFilePath",
                type: {
                    name: "String"
                }
            } })
    }
};
export var SiteAuthSettingsV2 = {
    serializedName: "SiteAuthSettingsV2",
    type: {
        name: "Composite",
        className: "SiteAuthSettingsV2",
        modelProperties: __assign(__assign({}, ProxyOnlyResource.type.modelProperties), { platform: {
                serializedName: "properties.platform",
                type: {
                    name: "Composite",
                    className: "AuthPlatform"
                }
            }, globalValidation: {
                serializedName: "properties.globalValidation",
                type: {
                    name: "Composite",
                    className: "GlobalValidation"
                }
            }, identityProviders: {
                serializedName: "properties.identityProviders",
                type: {
                    name: "Composite",
                    className: "IdentityProviders"
                }
            }, login: {
                serializedName: "properties.login",
                type: {
                    name: "Composite",
                    className: "Login"
                }
            }, httpSettings: {
                serializedName: "properties.httpSettings",
                type: {
                    name: "Composite",
                    className: "HttpSettings"
                }
            } })
    }
};
export var SiteCloneabilityCriterion = {
    serializedName: "SiteCloneabilityCriterion",
    type: {
        name: "Composite",
        className: "SiteCloneabilityCriterion",
        modelProperties: {
            name: {
                serializedName: "name",
                type: {
                    name: "String"
                }
            },
            description: {
                serializedName: "description",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var SiteCloneability = {
    serializedName: "SiteCloneability",
    type: {
        name: "Composite",
        className: "SiteCloneability",
        modelProperties: {
            result: {
                serializedName: "result",
                type: {
                    name: "Enum",
                    allowedValues: [
                        "Cloneable",
                        "PartiallyCloneable",
                        "NotCloneable"
                    ]
                }
            },
            blockingFeatures: {
                serializedName: "blockingFeatures",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "SiteCloneabilityCriterion"
                        }
                    }
                }
            },
            unsupportedFeatures: {
                serializedName: "unsupportedFeatures",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "SiteCloneabilityCriterion"
                        }
                    }
                }
            },
            blockingCharacteristics: {
                serializedName: "blockingCharacteristics",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "SiteCloneabilityCriterion"
                        }
                    }
                }
            }
        }
    }
};
export var SiteConfigResource = {
    serializedName: "SiteConfigResource",
    type: {
        name: "Composite",
        className: "SiteConfigResource",
        modelProperties: __assign(__assign({}, ProxyOnlyResource.type.modelProperties), { numberOfWorkers: {
                serializedName: "properties.numberOfWorkers",
                type: {
                    name: "Number"
                }
            }, defaultDocuments: {
                serializedName: "properties.defaultDocuments",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String"
                        }
                    }
                }
            }, netFrameworkVersion: {
                serializedName: "properties.netFrameworkVersion",
                defaultValue: 'v4.6',
                type: {
                    name: "String"
                }
            }, phpVersion: {
                serializedName: "properties.phpVersion",
                type: {
                    name: "String"
                }
            }, pythonVersion: {
                serializedName: "properties.pythonVersion",
                type: {
                    name: "String"
                }
            }, nodeVersion: {
                serializedName: "properties.nodeVersion",
                type: {
                    name: "String"
                }
            }, powerShellVersion: {
                serializedName: "properties.powerShellVersion",
                type: {
                    name: "String"
                }
            }, linuxFxVersion: {
                serializedName: "properties.linuxFxVersion",
                type: {
                    name: "String"
                }
            }, windowsFxVersion: {
                serializedName: "properties.windowsFxVersion",
                type: {
                    name: "String"
                }
            }, requestTracingEnabled: {
                serializedName: "properties.requestTracingEnabled",
                type: {
                    name: "Boolean"
                }
            }, requestTracingExpirationTime: {
                serializedName: "properties.requestTracingExpirationTime",
                type: {
                    name: "DateTime"
                }
            }, remoteDebuggingEnabled: {
                serializedName: "properties.remoteDebuggingEnabled",
                type: {
                    name: "Boolean"
                }
            }, remoteDebuggingVersion: {
                serializedName: "properties.remoteDebuggingVersion",
                type: {
                    name: "String"
                }
            }, httpLoggingEnabled: {
                serializedName: "properties.httpLoggingEnabled",
                type: {
                    name: "Boolean"
                }
            }, logsDirectorySizeLimit: {
                serializedName: "properties.logsDirectorySizeLimit",
                type: {
                    name: "Number"
                }
            }, detailedErrorLoggingEnabled: {
                serializedName: "properties.detailedErrorLoggingEnabled",
                type: {
                    name: "Boolean"
                }
            }, publishingUsername: {
                serializedName: "properties.publishingUsername",
                type: {
                    name: "String"
                }
            }, appSettings: {
                serializedName: "properties.appSettings",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "NameValuePair"
                        }
                    }
                }
            }, connectionStrings: {
                serializedName: "properties.connectionStrings",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "ConnStringInfo"
                        }
                    }
                }
            }, machineKey: {
                readOnly: true,
                serializedName: "properties.machineKey",
                type: {
                    name: "Composite",
                    className: "SiteMachineKey"
                }
            }, handlerMappings: {
                serializedName: "properties.handlerMappings",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "HandlerMapping"
                        }
                    }
                }
            }, documentRoot: {
                serializedName: "properties.documentRoot",
                type: {
                    name: "String"
                }
            }, scmType: {
                serializedName: "properties.scmType",
                type: {
                    name: "String"
                }
            }, use32BitWorkerProcess: {
                serializedName: "properties.use32BitWorkerProcess",
                type: {
                    name: "Boolean"
                }
            }, webSocketsEnabled: {
                serializedName: "properties.webSocketsEnabled",
                type: {
                    name: "Boolean"
                }
            }, alwaysOn: {
                serializedName: "properties.alwaysOn",
                type: {
                    name: "Boolean"
                }
            }, javaVersion: {
                serializedName: "properties.javaVersion",
                type: {
                    name: "String"
                }
            }, javaContainer: {
                serializedName: "properties.javaContainer",
                type: {
                    name: "String"
                }
            }, javaContainerVersion: {
                serializedName: "properties.javaContainerVersion",
                type: {
                    name: "String"
                }
            }, appCommandLine: {
                serializedName: "properties.appCommandLine",
                type: {
                    name: "String"
                }
            }, managedPipelineMode: {
                serializedName: "properties.managedPipelineMode",
                type: {
                    name: "Enum",
                    allowedValues: [
                        "Integrated",
                        "Classic"
                    ]
                }
            }, virtualApplications: {
                serializedName: "properties.virtualApplications",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "VirtualApplication"
                        }
                    }
                }
            }, loadBalancing: {
                serializedName: "properties.loadBalancing",
                type: {
                    name: "Enum",
                    allowedValues: [
                        "WeightedRoundRobin",
                        "LeastRequests",
                        "LeastResponseTime",
                        "WeightedTotalTraffic",
                        "RequestHash"
                    ]
                }
            }, experiments: {
                serializedName: "properties.experiments",
                type: {
                    name: "Composite",
                    className: "Experiments"
                }
            }, limits: {
                serializedName: "properties.limits",
                type: {
                    name: "Composite",
                    className: "SiteLimits"
                }
            }, autoHealEnabled: {
                serializedName: "properties.autoHealEnabled",
                type: {
                    name: "Boolean"
                }
            }, autoHealRules: {
                serializedName: "properties.autoHealRules",
                type: {
                    name: "Composite",
                    className: "AutoHealRules"
                }
            }, tracingOptions: {
                serializedName: "properties.tracingOptions",
                type: {
                    name: "String"
                }
            }, vnetName: {
                serializedName: "properties.vnetName",
                type: {
                    name: "String"
                }
            }, vnetRouteAllEnabled: {
                serializedName: "properties.vnetRouteAllEnabled",
                type: {
                    name: "Boolean"
                }
            }, vnetPrivatePortsCount: {
                serializedName: "properties.vnetPrivatePortsCount",
                type: {
                    name: "Number"
                }
            }, cors: {
                serializedName: "properties.cors",
                type: {
                    name: "Composite",
                    className: "CorsSettings"
                }
            }, push: {
                serializedName: "properties.push",
                type: {
                    name: "Composite",
                    className: "PushSettings"
                }
            }, apiDefinition: {
                serializedName: "properties.apiDefinition",
                type: {
                    name: "Composite",
                    className: "ApiDefinitionInfo"
                }
            }, apiManagementConfig: {
                serializedName: "properties.apiManagementConfig",
                type: {
                    name: "Composite",
                    className: "ApiManagementConfig"
                }
            }, autoSwapSlotName: {
                serializedName: "properties.autoSwapSlotName",
                type: {
                    name: "String"
                }
            }, localMySqlEnabled: {
                serializedName: "properties.localMySqlEnabled",
                defaultValue: false,
                type: {
                    name: "Boolean"
                }
            }, managedServiceIdentityId: {
                serializedName: "properties.managedServiceIdentityId",
                type: {
                    name: "Number"
                }
            }, xManagedServiceIdentityId: {
                serializedName: "properties.xManagedServiceIdentityId",
                type: {
                    name: "Number"
                }
            }, ipSecurityRestrictions: {
                serializedName: "properties.ipSecurityRestrictions",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "IpSecurityRestriction"
                        }
                    }
                }
            }, scmIpSecurityRestrictions: {
                serializedName: "properties.scmIpSecurityRestrictions",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "IpSecurityRestriction"
                        }
                    }
                }
            }, scmIpSecurityRestrictionsUseMain: {
                serializedName: "properties.scmIpSecurityRestrictionsUseMain",
                type: {
                    name: "Boolean"
                }
            }, http20Enabled: {
                serializedName: "properties.http20Enabled",
                defaultValue: true,
                type: {
                    name: "Boolean"
                }
            }, minTlsVersion: {
                serializedName: "properties.minTlsVersion",
                type: {
                    name: "String"
                }
            }, scmMinTlsVersion: {
                serializedName: "properties.scmMinTlsVersion",
                type: {
                    name: "String"
                }
            }, ftpsState: {
                serializedName: "properties.ftpsState",
                type: {
                    name: "String"
                }
            }, preWarmedInstanceCount: {
                serializedName: "properties.preWarmedInstanceCount",
                constraints: {
                    InclusiveMaximum: 10,
                    InclusiveMinimum: 0
                },
                type: {
                    name: "Number"
                }
            }, healthCheckPath: {
                serializedName: "properties.healthCheckPath",
                type: {
                    name: "String"
                }
            } })
    }
};
export var SiteConfigurationSnapshotInfo = {
    serializedName: "SiteConfigurationSnapshotInfo",
    type: {
        name: "Composite",
        className: "SiteConfigurationSnapshotInfo",
        modelProperties: __assign(__assign({}, ProxyOnlyResource.type.modelProperties), { time: {
                readOnly: true,
                serializedName: "properties.time",
                type: {
                    name: "DateTime"
                }
            }, snapshotId: {
                readOnly: true,
                serializedName: "properties.snapshotId",
                type: {
                    name: "Number"
                }
            } })
    }
};
export var SiteExtensionInfo = {
    serializedName: "SiteExtensionInfo",
    type: {
        name: "Composite",
        className: "SiteExtensionInfo",
        modelProperties: __assign(__assign({}, ProxyOnlyResource.type.modelProperties), { extensionId: {
                serializedName: "properties.extension_id",
                type: {
                    name: "String"
                }
            }, title: {
                serializedName: "properties.title",
                type: {
                    name: "String"
                }
            }, extensionType: {
                serializedName: "properties.extension_type",
                type: {
                    name: "Enum",
                    allowedValues: [
                        "Gallery",
                        "WebRoot"
                    ]
                }
            }, summary: {
                serializedName: "properties.summary",
                type: {
                    name: "String"
                }
            }, description: {
                serializedName: "properties.description",
                type: {
                    name: "String"
                }
            }, version: {
                serializedName: "properties.version",
                type: {
                    name: "String"
                }
            }, extensionUrl: {
                serializedName: "properties.extension_url",
                type: {
                    name: "String"
                }
            }, projectUrl: {
                serializedName: "properties.project_url",
                type: {
                    name: "String"
                }
            }, iconUrl: {
                serializedName: "properties.icon_url",
                type: {
                    name: "String"
                }
            }, licenseUrl: {
                serializedName: "properties.license_url",
                type: {
                    name: "String"
                }
            }, feedUrl: {
                serializedName: "properties.feed_url",
                type: {
                    name: "String"
                }
            }, authors: {
                serializedName: "properties.authors",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String"
                        }
                    }
                }
            }, installerCommandLineParams: {
                serializedName: "properties.installer_command_line_params",
                type: {
                    name: "String"
                }
            }, publishedDateTime: {
                serializedName: "properties.published_date_time",
                type: {
                    name: "DateTime"
                }
            }, downloadCount: {
                serializedName: "properties.download_count",
                type: {
                    name: "Number"
                }
            }, localIsLatestVersion: {
                serializedName: "properties.local_is_latest_version",
                type: {
                    name: "Boolean"
                }
            }, localPath: {
                serializedName: "properties.local_path",
                type: {
                    name: "String"
                }
            }, installedDateTime: {
                serializedName: "properties.installed_date_time",
                type: {
                    name: "DateTime"
                }
            }, provisioningState: {
                serializedName: "properties.provisioningState",
                type: {
                    name: "String"
                }
            }, comment: {
                serializedName: "properties.comment",
                type: {
                    name: "String"
                }
            } })
    }
};
export var SiteLogsConfig = {
    serializedName: "SiteLogsConfig",
    type: {
        name: "Composite",
        className: "SiteLogsConfig",
        modelProperties: __assign(__assign({}, ProxyOnlyResource.type.modelProperties), { applicationLogs: {
                serializedName: "properties.applicationLogs",
                type: {
                    name: "Composite",
                    className: "ApplicationLogsConfig"
                }
            }, httpLogs: {
                serializedName: "properties.httpLogs",
                type: {
                    name: "Composite",
                    className: "HttpLogsConfig"
                }
            }, failedRequestsTracing: {
                serializedName: "properties.failedRequestsTracing",
                type: {
                    name: "Composite",
                    className: "EnabledConfig"
                }
            }, detailedErrorMessages: {
                serializedName: "properties.detailedErrorMessages",
                type: {
                    name: "Composite",
                    className: "EnabledConfig"
                }
            } })
    }
};
export var SitePatchResource = {
    serializedName: "SitePatchResource",
    type: {
        name: "Composite",
        className: "SitePatchResource",
        modelProperties: __assign(__assign({}, ProxyOnlyResource.type.modelProperties), { state: {
                readOnly: true,
                serializedName: "properties.state",
                type: {
                    name: "String"
                }
            }, hostNames: {
                readOnly: true,
                serializedName: "properties.hostNames",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String"
                        }
                    }
                }
            }, repositorySiteName: {
                readOnly: true,
                serializedName: "properties.repositorySiteName",
                type: {
                    name: "String"
                }
            }, usageState: {
                readOnly: true,
                serializedName: "properties.usageState",
                type: {
                    name: "Enum",
                    allowedValues: [
                        "Normal",
                        "Exceeded"
                    ]
                }
            }, enabled: {
                serializedName: "properties.enabled",
                type: {
                    name: "Boolean"
                }
            }, enabledHostNames: {
                readOnly: true,
                serializedName: "properties.enabledHostNames",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String"
                        }
                    }
                }
            }, availabilityState: {
                readOnly: true,
                serializedName: "properties.availabilityState",
                type: {
                    name: "Enum",
                    allowedValues: [
                        "Normal",
                        "Limited",
                        "DisasterRecoveryMode"
                    ]
                }
            }, hostNameSslStates: {
                serializedName: "properties.hostNameSslStates",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "HostNameSslState"
                        }
                    }
                }
            }, serverFarmId: {
                serializedName: "properties.serverFarmId",
                type: {
                    name: "String"
                }
            }, reserved: {
                serializedName: "properties.reserved",
                defaultValue: false,
                type: {
                    name: "Boolean"
                }
            }, isXenon: {
                serializedName: "properties.isXenon",
                defaultValue: false,
                type: {
                    name: "Boolean"
                }
            }, hyperV: {
                serializedName: "properties.hyperV",
                defaultValue: false,
                type: {
                    name: "Boolean"
                }
            }, lastModifiedTimeUtc: {
                readOnly: true,
                serializedName: "properties.lastModifiedTimeUtc",
                type: {
                    name: "DateTime"
                }
            }, siteConfig: {
                serializedName: "properties.siteConfig",
                type: {
                    name: "Composite",
                    className: "SiteConfig"
                }
            }, trafficManagerHostNames: {
                readOnly: true,
                serializedName: "properties.trafficManagerHostNames",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String"
                        }
                    }
                }
            }, scmSiteAlsoStopped: {
                serializedName: "properties.scmSiteAlsoStopped",
                defaultValue: false,
                type: {
                    name: "Boolean"
                }
            }, targetSwapSlot: {
                readOnly: true,
                serializedName: "properties.targetSwapSlot",
                type: {
                    name: "String"
                }
            }, hostingEnvironmentProfile: {
                serializedName: "properties.hostingEnvironmentProfile",
                type: {
                    name: "Composite",
                    className: "HostingEnvironmentProfile"
                }
            }, clientAffinityEnabled: {
                serializedName: "properties.clientAffinityEnabled",
                type: {
                    name: "Boolean"
                }
            }, clientCertEnabled: {
                serializedName: "properties.clientCertEnabled",
                type: {
                    name: "Boolean"
                }
            }, clientCertMode: {
                serializedName: "properties.clientCertMode",
                type: {
                    name: "Enum",
                    allowedValues: [
                        "Required",
                        "Optional"
                    ]
                }
            }, clientCertExclusionPaths: {
                serializedName: "properties.clientCertExclusionPaths",
                type: {
                    name: "String"
                }
            }, hostNamesDisabled: {
                serializedName: "properties.hostNamesDisabled",
                type: {
                    name: "Boolean"
                }
            }, customDomainVerificationId: {
                serializedName: "properties.customDomainVerificationId",
                type: {
                    name: "String"
                }
            }, outboundIpAddresses: {
                readOnly: true,
                serializedName: "properties.outboundIpAddresses",
                type: {
                    name: "String"
                }
            }, possibleOutboundIpAddresses: {
                readOnly: true,
                serializedName: "properties.possibleOutboundIpAddresses",
                type: {
                    name: "String"
                }
            }, containerSize: {
                serializedName: "properties.containerSize",
                type: {
                    name: "Number"
                }
            }, dailyMemoryTimeQuota: {
                serializedName: "properties.dailyMemoryTimeQuota",
                type: {
                    name: "Number"
                }
            }, suspendedTill: {
                readOnly: true,
                serializedName: "properties.suspendedTill",
                type: {
                    name: "DateTime"
                }
            }, maxNumberOfWorkers: {
                readOnly: true,
                serializedName: "properties.maxNumberOfWorkers",
                type: {
                    name: "Number"
                }
            }, cloningInfo: {
                serializedName: "properties.cloningInfo",
                type: {
                    name: "Composite",
                    className: "CloningInfo"
                }
            }, resourceGroup: {
                readOnly: true,
                serializedName: "properties.resourceGroup",
                type: {
                    name: "String"
                }
            }, isDefaultContainer: {
                readOnly: true,
                serializedName: "properties.isDefaultContainer",
                type: {
                    name: "Boolean"
                }
            }, defaultHostName: {
                readOnly: true,
                serializedName: "properties.defaultHostName",
                type: {
                    name: "String"
                }
            }, slotSwapStatus: {
                readOnly: true,
                serializedName: "properties.slotSwapStatus",
                type: {
                    name: "Composite",
                    className: "SlotSwapStatus"
                }
            }, httpsOnly: {
                serializedName: "properties.httpsOnly",
                type: {
                    name: "Boolean"
                }
            }, redundancyMode: {
                serializedName: "properties.redundancyMode",
                type: {
                    name: "Enum",
                    allowedValues: [
                        "None",
                        "Manual",
                        "Failover",
                        "ActiveActive",
                        "GeoRedundant"
                    ]
                }
            }, inProgressOperationId: {
                readOnly: true,
                serializedName: "properties.inProgressOperationId",
                type: {
                    name: "Uuid"
                }
            }, identity: {
                serializedName: "identity",
                type: {
                    name: "Composite",
                    className: "ManagedServiceIdentity"
                }
            } })
    }
};
export var SitePhpErrorLogFlag = {
    serializedName: "SitePhpErrorLogFlag",
    type: {
        name: "Composite",
        className: "SitePhpErrorLogFlag",
        modelProperties: __assign(__assign({}, ProxyOnlyResource.type.modelProperties), { localLogErrors: {
                serializedName: "properties.localLogErrors",
                type: {
                    name: "String"
                }
            }, masterLogErrors: {
                serializedName: "properties.masterLogErrors",
                type: {
                    name: "String"
                }
            }, localLogErrorsMaxLength: {
                serializedName: "properties.localLogErrorsMaxLength",
                type: {
                    name: "String"
                }
            }, masterLogErrorsMaxLength: {
                serializedName: "properties.masterLogErrorsMaxLength",
                type: {
                    name: "String"
                }
            } })
    }
};
export var SiteSourceControl = {
    serializedName: "SiteSourceControl",
    type: {
        name: "Composite",
        className: "SiteSourceControl",
        modelProperties: __assign(__assign({}, ProxyOnlyResource.type.modelProperties), { repoUrl: {
                serializedName: "properties.repoUrl",
                type: {
                    name: "String"
                }
            }, branch: {
                serializedName: "properties.branch",
                type: {
                    name: "String"
                }
            }, isManualIntegration: {
                serializedName: "properties.isManualIntegration",
                type: {
                    name: "Boolean"
                }
            }, isGitHubAction: {
                serializedName: "properties.isGitHubAction",
                type: {
                    name: "Boolean"
                }
            }, deploymentRollbackEnabled: {
                serializedName: "properties.deploymentRollbackEnabled",
                type: {
                    name: "Boolean"
                }
            }, isMercurial: {
                serializedName: "properties.isMercurial",
                type: {
                    name: "Boolean"
                }
            } })
    }
};
export var SlotConfigNamesResource = {
    serializedName: "SlotConfigNamesResource",
    type: {
        name: "Composite",
        className: "SlotConfigNamesResource",
        modelProperties: __assign(__assign({}, ProxyOnlyResource.type.modelProperties), { connectionStringNames: {
                serializedName: "properties.connectionStringNames",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String"
                        }
                    }
                }
            }, appSettingNames: {
                serializedName: "properties.appSettingNames",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String"
                        }
                    }
                }
            }, azureStorageConfigNames: {
                serializedName: "properties.azureStorageConfigNames",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String"
                        }
                    }
                }
            } })
    }
};
export var SlotDifference = {
    serializedName: "SlotDifference",
    type: {
        name: "Composite",
        className: "SlotDifference",
        modelProperties: __assign(__assign({}, ProxyOnlyResource.type.modelProperties), { level: {
                readOnly: true,
                serializedName: "properties.level",
                type: {
                    name: "String"
                }
            }, settingType: {
                readOnly: true,
                serializedName: "properties.settingType",
                type: {
                    name: "String"
                }
            }, diffRule: {
                readOnly: true,
                serializedName: "properties.diffRule",
                type: {
                    name: "String"
                }
            }, settingName: {
                readOnly: true,
                serializedName: "properties.settingName",
                type: {
                    name: "String"
                }
            }, valueInCurrentSlot: {
                readOnly: true,
                serializedName: "properties.valueInCurrentSlot",
                type: {
                    name: "String"
                }
            }, valueInTargetSlot: {
                readOnly: true,
                serializedName: "properties.valueInTargetSlot",
                type: {
                    name: "String"
                }
            }, description: {
                readOnly: true,
                serializedName: "properties.description",
                type: {
                    name: "String"
                }
            } })
    }
};
export var SnapshotRecoverySource = {
    serializedName: "SnapshotRecoverySource",
    type: {
        name: "Composite",
        className: "SnapshotRecoverySource",
        modelProperties: {
            location: {
                serializedName: "location",
                type: {
                    name: "String"
                }
            },
            id: {
                serializedName: "id",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var SnapshotRestoreRequest = {
    serializedName: "SnapshotRestoreRequest",
    type: {
        name: "Composite",
        className: "SnapshotRestoreRequest",
        modelProperties: __assign(__assign({}, ProxyOnlyResource.type.modelProperties), { snapshotTime: {
                serializedName: "properties.snapshotTime",
                type: {
                    name: "String"
                }
            }, recoverySource: {
                serializedName: "properties.recoverySource",
                type: {
                    name: "Composite",
                    className: "SnapshotRecoverySource"
                }
            }, overwrite: {
                required: true,
                serializedName: "properties.overwrite",
                type: {
                    name: "Boolean"
                }
            }, recoverConfiguration: {
                serializedName: "properties.recoverConfiguration",
                type: {
                    name: "Boolean"
                }
            }, ignoreConflictingHostNames: {
                serializedName: "properties.ignoreConflictingHostNames",
                type: {
                    name: "Boolean"
                }
            }, useDRSecondary: {
                serializedName: "properties.useDRSecondary",
                type: {
                    name: "Boolean"
                }
            } })
    }
};
export var StorageMigrationOptions = {
    serializedName: "StorageMigrationOptions",
    type: {
        name: "Composite",
        className: "StorageMigrationOptions",
        modelProperties: __assign(__assign({}, ProxyOnlyResource.type.modelProperties), { azurefilesConnectionString: {
                required: true,
                serializedName: "properties.azurefilesConnectionString",
                type: {
                    name: "String"
                }
            }, azurefilesShare: {
                required: true,
                serializedName: "properties.azurefilesShare",
                type: {
                    name: "String"
                }
            }, switchSiteAfterMigration: {
                serializedName: "properties.switchSiteAfterMigration",
                defaultValue: false,
                type: {
                    name: "Boolean"
                }
            }, blockWriteAccessToSite: {
                serializedName: "properties.blockWriteAccessToSite",
                defaultValue: false,
                type: {
                    name: "Boolean"
                }
            } })
    }
};
export var StorageMigrationResponse = {
    serializedName: "StorageMigrationResponse",
    type: {
        name: "Composite",
        className: "StorageMigrationResponse",
        modelProperties: __assign(__assign({}, ProxyOnlyResource.type.modelProperties), { operationId: {
                readOnly: true,
                serializedName: "properties.operationId",
                type: {
                    name: "String"
                }
            } })
    }
};
export var SwiftVirtualNetwork = {
    serializedName: "SwiftVirtualNetwork",
    type: {
        name: "Composite",
        className: "SwiftVirtualNetwork",
        modelProperties: __assign(__assign({}, ProxyOnlyResource.type.modelProperties), { subnetResourceId: {
                serializedName: "properties.subnetResourceId",
                type: {
                    name: "String"
                }
            }, swiftSupported: {
                serializedName: "properties.swiftSupported",
                type: {
                    name: "Boolean"
                }
            } })
    }
};
export var TriggeredJobRun = {
    serializedName: "TriggeredJobRun",
    type: {
        name: "Composite",
        className: "TriggeredJobRun",
        modelProperties: __assign(__assign({}, ProxyOnlyResource.type.modelProperties), { webJobId: {
                serializedName: "properties.web_job_id",
                type: {
                    name: "String"
                }
            }, webJobName: {
                serializedName: "properties.web_job_name",
                type: {
                    name: "String"
                }
            }, status: {
                serializedName: "properties.status",
                type: {
                    name: "Enum",
                    allowedValues: [
                        "Success",
                        "Failed",
                        "Error"
                    ]
                }
            }, startTime: {
                serializedName: "properties.start_time",
                type: {
                    name: "DateTime"
                }
            }, endTime: {
                serializedName: "properties.end_time",
                type: {
                    name: "DateTime"
                }
            }, duration: {
                serializedName: "properties.duration",
                type: {
                    name: "String"
                }
            }, outputUrl: {
                serializedName: "properties.output_url",
                type: {
                    name: "String"
                }
            }, errorUrl: {
                serializedName: "properties.error_url",
                type: {
                    name: "String"
                }
            }, url: {
                serializedName: "properties.url",
                type: {
                    name: "String"
                }
            }, jobName: {
                serializedName: "properties.job_name",
                type: {
                    name: "String"
                }
            }, trigger: {
                serializedName: "properties.trigger",
                type: {
                    name: "String"
                }
            } })
    }
};
export var TriggeredJobHistory = {
    serializedName: "TriggeredJobHistory",
    type: {
        name: "Composite",
        className: "TriggeredJobHistory",
        modelProperties: __assign(__assign({}, ProxyOnlyResource.type.modelProperties), { runs: {
                serializedName: "properties.runs",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "TriggeredJobRun"
                        }
                    }
                }
            } })
    }
};
export var TriggeredWebJob = {
    serializedName: "TriggeredWebJob",
    type: {
        name: "Composite",
        className: "TriggeredWebJob",
        modelProperties: __assign(__assign({}, ProxyOnlyResource.type.modelProperties), { latestRun: {
                serializedName: "properties.latest_run",
                type: {
                    name: "Composite",
                    className: "TriggeredJobRun"
                }
            }, historyUrl: {
                serializedName: "properties.history_url",
                type: {
                    name: "String"
                }
            }, schedulerLogsUrl: {
                serializedName: "properties.scheduler_logs_url",
                type: {
                    name: "String"
                }
            }, runCommand: {
                serializedName: "properties.run_command",
                type: {
                    name: "String"
                }
            }, url: {
                serializedName: "properties.url",
                type: {
                    name: "String"
                }
            }, extraInfoUrl: {
                serializedName: "properties.extra_info_url",
                type: {
                    name: "String"
                }
            }, webJobType: {
                serializedName: "properties.web_job_type",
                type: {
                    name: "Enum",
                    allowedValues: [
                        "Continuous",
                        "Triggered"
                    ]
                }
            }, error: {
                serializedName: "properties.error",
                type: {
                    name: "String"
                }
            }, usingSdk: {
                serializedName: "properties.using_sdk",
                type: {
                    name: "Boolean"
                }
            }, settings: {
                serializedName: "properties.settings",
                type: {
                    name: "Dictionary",
                    value: {
                        type: {
                            name: "Object"
                        }
                    }
                }
            } })
    }
};
export var WebSiteInstanceStatus = {
    serializedName: "WebSiteInstanceStatus",
    type: {
        name: "Composite",
        className: "WebSiteInstanceStatus",
        modelProperties: __assign(__assign({}, ProxyOnlyResource.type.modelProperties), { state: {
                serializedName: "properties.state",
                type: {
                    name: "Enum",
                    allowedValues: [
                        "READY",
                        "STOPPED",
                        "UNKNOWN"
                    ]
                }
            }, statusUrl: {
                serializedName: "properties.statusUrl",
                type: {
                    name: "String"
                }
            }, detectorUrl: {
                serializedName: "properties.detectorUrl",
                type: {
                    name: "String"
                }
            }, consoleUrl: {
                serializedName: "properties.consoleUrl",
                type: {
                    name: "String"
                }
            }, healthCheckUrl: {
                serializedName: "properties.healthCheckUrl",
                type: {
                    name: "String"
                }
            }, containers: {
                serializedName: "properties.containers",
                type: {
                    name: "Dictionary",
                    value: {
                        type: {
                            name: "Composite",
                            className: "ContainerInfo"
                        }
                    }
                }
            } })
    }
};
export var WebJob = {
    serializedName: "WebJob",
    type: {
        name: "Composite",
        className: "WebJob",
        modelProperties: __assign(__assign({}, ProxyOnlyResource.type.modelProperties), { runCommand: {
                serializedName: "properties.run_command",
                type: {
                    name: "String"
                }
            }, url: {
                serializedName: "properties.url",
                type: {
                    name: "String"
                }
            }, extraInfoUrl: {
                serializedName: "properties.extra_info_url",
                type: {
                    name: "String"
                }
            }, webJobType: {
                serializedName: "properties.web_job_type",
                type: {
                    name: "Enum",
                    allowedValues: [
                        "Continuous",
                        "Triggered"
                    ]
                }
            }, error: {
                serializedName: "properties.error",
                type: {
                    name: "String"
                }
            }, usingSdk: {
                serializedName: "properties.using_sdk",
                type: {
                    name: "Boolean"
                }
            }, settings: {
                serializedName: "properties.settings",
                type: {
                    name: "Dictionary",
                    value: {
                        type: {
                            name: "Object"
                        }
                    }
                }
            } })
    }
};
export var StaticSiteBuildProperties = {
    serializedName: "StaticSiteBuildProperties",
    type: {
        name: "Composite",
        className: "StaticSiteBuildProperties",
        modelProperties: {
            appLocation: {
                serializedName: "appLocation",
                type: {
                    name: "String"
                }
            },
            apiLocation: {
                serializedName: "apiLocation",
                type: {
                    name: "String"
                }
            },
            appArtifactLocation: {
                serializedName: "appArtifactLocation",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var StaticSiteARMResource = {
    serializedName: "StaticSiteARMResource",
    type: {
        name: "Composite",
        className: "StaticSiteARMResource",
        modelProperties: __assign(__assign({}, Resource.type.modelProperties), { defaultHostname: {
                readOnly: true,
                serializedName: "properties.defaultHostname",
                type: {
                    name: "String"
                }
            }, repositoryUrl: {
                serializedName: "properties.repositoryUrl",
                type: {
                    name: "String"
                }
            }, branch: {
                serializedName: "properties.branch",
                type: {
                    name: "String"
                }
            }, customDomains: {
                readOnly: true,
                serializedName: "properties.customDomains",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String"
                        }
                    }
                }
            }, repositoryToken: {
                serializedName: "properties.repositoryToken",
                type: {
                    name: "String"
                }
            }, buildProperties: {
                serializedName: "properties.buildProperties",
                type: {
                    name: "Composite",
                    className: "StaticSiteBuildProperties"
                }
            }, sku: {
                serializedName: "sku",
                type: {
                    name: "Composite",
                    className: "SkuDescription"
                }
            } })
    }
};
export var StaticSiteBuildARMResource = {
    serializedName: "StaticSiteBuildARMResource",
    type: {
        name: "Composite",
        className: "StaticSiteBuildARMResource",
        modelProperties: __assign(__assign({}, ProxyOnlyResource.type.modelProperties), { buildId: {
                readOnly: true,
                serializedName: "properties.buildId",
                type: {
                    name: "String"
                }
            }, sourceBranch: {
                readOnly: true,
                serializedName: "properties.sourceBranch",
                type: {
                    name: "String"
                }
            }, pullRequestTitle: {
                readOnly: true,
                serializedName: "properties.pullRequestTitle",
                type: {
                    name: "String"
                }
            }, hostname: {
                readOnly: true,
                serializedName: "properties.hostname",
                type: {
                    name: "String"
                }
            }, createdTimeUtc: {
                readOnly: true,
                serializedName: "properties.createdTimeUtc",
                type: {
                    name: "DateTime"
                }
            }, lastUpdatedOn: {
                readOnly: true,
                serializedName: "properties.lastUpdatedOn",
                type: {
                    name: "DateTime"
                }
            }, status: {
                readOnly: true,
                serializedName: "properties.status",
                type: {
                    name: "String"
                }
            } })
    }
};
export var StaticSiteCustomDomainOverviewARMResource = {
    serializedName: "StaticSiteCustomDomainOverviewARMResource",
    type: {
        name: "Composite",
        className: "StaticSiteCustomDomainOverviewARMResource",
        modelProperties: __assign(__assign({}, ProxyOnlyResource.type.modelProperties), { domainName: {
                readOnly: true,
                serializedName: "properties.domainName",
                type: {
                    name: "String"
                }
            }, createdOn: {
                readOnly: true,
                serializedName: "properties.createdOn",
                type: {
                    name: "DateTime"
                }
            } })
    }
};
export var StaticSiteFunctionOverviewARMResource = {
    serializedName: "StaticSiteFunctionOverviewARMResource",
    type: {
        name: "Composite",
        className: "StaticSiteFunctionOverviewARMResource",
        modelProperties: __assign(__assign({}, ProxyOnlyResource.type.modelProperties), { functionName: {
                readOnly: true,
                serializedName: "properties.functionName",
                type: {
                    name: "String"
                }
            }, triggerType: {
                readOnly: true,
                serializedName: "properties.triggerType",
                type: {
                    name: "String"
                }
            } })
    }
};
export var StaticSitePatchResource = {
    serializedName: "StaticSitePatchResource",
    type: {
        name: "Composite",
        className: "StaticSitePatchResource",
        modelProperties: __assign(__assign({}, ProxyOnlyResource.type.modelProperties), { defaultHostname: {
                readOnly: true,
                serializedName: "properties.defaultHostname",
                type: {
                    name: "String"
                }
            }, repositoryUrl: {
                serializedName: "properties.repositoryUrl",
                type: {
                    name: "String"
                }
            }, branch: {
                serializedName: "properties.branch",
                type: {
                    name: "String"
                }
            }, customDomains: {
                readOnly: true,
                serializedName: "properties.customDomains",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String"
                        }
                    }
                }
            }, repositoryToken: {
                serializedName: "properties.repositoryToken",
                type: {
                    name: "String"
                }
            }, buildProperties: {
                serializedName: "properties.buildProperties",
                type: {
                    name: "Composite",
                    className: "StaticSiteBuildProperties"
                }
            } })
    }
};
export var StaticSiteResetPropertiesARMResource = {
    serializedName: "StaticSiteResetPropertiesARMResource",
    type: {
        name: "Composite",
        className: "StaticSiteResetPropertiesARMResource",
        modelProperties: __assign(__assign({}, ProxyOnlyResource.type.modelProperties), { repositoryToken: {
                serializedName: "properties.repositoryToken",
                type: {
                    name: "String"
                }
            }, shouldUpdateRepository: {
                serializedName: "properties.shouldUpdateRepository",
                type: {
                    name: "Boolean"
                }
            } })
    }
};
export var StaticSiteUserARMResource = {
    serializedName: "StaticSiteUserARMResource",
    type: {
        name: "Composite",
        className: "StaticSiteUserARMResource",
        modelProperties: __assign(__assign({}, ProxyOnlyResource.type.modelProperties), { provider: {
                readOnly: true,
                serializedName: "properties.provider",
                type: {
                    name: "String"
                }
            }, userId: {
                readOnly: true,
                serializedName: "properties.userId",
                type: {
                    name: "String"
                }
            }, displayName: {
                readOnly: true,
                serializedName: "properties.displayName",
                type: {
                    name: "String"
                }
            }, roles: {
                serializedName: "properties.roles",
                type: {
                    name: "String"
                }
            } })
    }
};
export var StaticSiteUserInvitationRequestResource = {
    serializedName: "StaticSiteUserInvitationRequestResource",
    type: {
        name: "Composite",
        className: "StaticSiteUserInvitationRequestResource",
        modelProperties: __assign(__assign({}, ProxyOnlyResource.type.modelProperties), { domain: {
                serializedName: "properties.domain",
                type: {
                    name: "String"
                }
            }, provider: {
                serializedName: "properties.provider",
                type: {
                    name: "String"
                }
            }, userDetails: {
                serializedName: "properties.userDetails",
                type: {
                    name: "String"
                }
            }, roles: {
                serializedName: "properties.roles",
                type: {
                    name: "String"
                }
            }, numHoursToExpiration: {
                serializedName: "properties.numHoursToExpiration",
                type: {
                    name: "Number"
                }
            } })
    }
};
export var StaticSiteUserInvitationResponseResource = {
    serializedName: "StaticSiteUserInvitationResponseResource",
    type: {
        name: "Composite",
        className: "StaticSiteUserInvitationResponseResource",
        modelProperties: __assign(__assign({}, ProxyOnlyResource.type.modelProperties), { expiresOn: {
                readOnly: true,
                serializedName: "properties.expiresOn",
                type: {
                    name: "DateTime"
                }
            }, invitationUrl: {
                readOnly: true,
                serializedName: "properties.invitationUrl",
                type: {
                    name: "String"
                }
            } })
    }
};
export var StaticSitesWorkflowPreview = {
    serializedName: "StaticSitesWorkflowPreview",
    type: {
        name: "Composite",
        className: "StaticSitesWorkflowPreview",
        modelProperties: __assign(__assign({}, ProxyOnlyResource.type.modelProperties), { path: {
                readOnly: true,
                serializedName: "properties.path",
                type: {
                    name: "String"
                }
            }, contents: {
                readOnly: true,
                serializedName: "properties.contents",
                type: {
                    name: "String"
                }
            } })
    }
};
export var StaticSitesWorkflowPreviewRequest = {
    serializedName: "StaticSitesWorkflowPreviewRequest",
    type: {
        name: "Composite",
        className: "StaticSitesWorkflowPreviewRequest",
        modelProperties: __assign(__assign({}, ProxyOnlyResource.type.modelProperties), { repositoryUrl: {
                serializedName: "properties.repositoryUrl",
                type: {
                    name: "String"
                }
            }, branch: {
                serializedName: "properties.branch",
                type: {
                    name: "String"
                }
            }, buildProperties: {
                serializedName: "properties.buildProperties",
                type: {
                    name: "Composite",
                    className: "StaticSiteBuildProperties"
                }
            } })
    }
};
export var AddressResponse = {
    serializedName: "AddressResponse",
    type: {
        name: "Composite",
        className: "AddressResponse",
        modelProperties: __assign(__assign({}, ProxyOnlyResource.type.modelProperties), { serviceIpAddress: {
                serializedName: "properties.serviceIpAddress",
                type: {
                    name: "String"
                }
            }, internalIpAddress: {
                serializedName: "properties.internalIpAddress",
                type: {
                    name: "String"
                }
            }, outboundIpAddresses: {
                serializedName: "properties.outboundIpAddresses",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String"
                        }
                    }
                }
            }, vipMappings: {
                serializedName: "properties.vipMappings",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "VirtualIPMapping"
                        }
                    }
                }
            } })
    }
};
export var AppServiceEnvironmentResource = {
    serializedName: "AppServiceEnvironmentResource",
    type: {
        name: "Composite",
        className: "AppServiceEnvironmentResource",
        modelProperties: __assign(__assign({}, Resource.type.modelProperties), { appServiceEnvironmentResourceName: {
                required: true,
                serializedName: "properties.name",
                type: {
                    name: "String"
                }
            }, appServiceEnvironmentResourceLocation: {
                required: true,
                serializedName: "properties.location",
                type: {
                    name: "String"
                }
            }, provisioningState: {
                readOnly: true,
                serializedName: "properties.provisioningState",
                type: {
                    name: "Enum",
                    allowedValues: [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "InProgress",
                        "Deleting"
                    ]
                }
            }, status: {
                readOnly: true,
                serializedName: "properties.status",
                type: {
                    name: "Enum",
                    allowedValues: [
                        "Preparing",
                        "Ready",
                        "Scaling",
                        "Deleting"
                    ]
                }
            }, vnetName: {
                serializedName: "properties.vnetName",
                type: {
                    name: "String"
                }
            }, vnetResourceGroupName: {
                serializedName: "properties.vnetResourceGroupName",
                type: {
                    name: "String"
                }
            }, vnetSubnetName: {
                serializedName: "properties.vnetSubnetName",
                type: {
                    name: "String"
                }
            }, virtualNetwork: {
                required: true,
                serializedName: "properties.virtualNetwork",
                type: {
                    name: "Composite",
                    className: "VirtualNetworkProfile"
                }
            }, internalLoadBalancingMode: {
                serializedName: "properties.internalLoadBalancingMode",
                type: {
                    name: "String"
                }
            }, multiSize: {
                serializedName: "properties.multiSize",
                type: {
                    name: "String"
                }
            }, multiRoleCount: {
                serializedName: "properties.multiRoleCount",
                type: {
                    name: "Number"
                }
            }, workerPools: {
                required: true,
                serializedName: "properties.workerPools",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "WorkerPool"
                        }
                    }
                }
            }, ipsslAddressCount: {
                serializedName: "properties.ipsslAddressCount",
                type: {
                    name: "Number"
                }
            }, databaseEdition: {
                readOnly: true,
                serializedName: "properties.databaseEdition",
                type: {
                    name: "String"
                }
            }, databaseServiceObjective: {
                readOnly: true,
                serializedName: "properties.databaseServiceObjective",
                type: {
                    name: "String"
                }
            }, upgradeDomains: {
                readOnly: true,
                serializedName: "properties.upgradeDomains",
                type: {
                    name: "Number"
                }
            }, subscriptionId: {
                readOnly: true,
                serializedName: "properties.subscriptionId",
                type: {
                    name: "String"
                }
            }, dnsSuffix: {
                serializedName: "properties.dnsSuffix",
                type: {
                    name: "String"
                }
            }, lastAction: {
                readOnly: true,
                serializedName: "properties.lastAction",
                type: {
                    name: "String"
                }
            }, lastActionResult: {
                readOnly: true,
                serializedName: "properties.lastActionResult",
                type: {
                    name: "String"
                }
            }, allowedMultiSizes: {
                readOnly: true,
                serializedName: "properties.allowedMultiSizes",
                type: {
                    name: "String"
                }
            }, allowedWorkerSizes: {
                readOnly: true,
                serializedName: "properties.allowedWorkerSizes",
                type: {
                    name: "String"
                }
            }, maximumNumberOfMachines: {
                readOnly: true,
                serializedName: "properties.maximumNumberOfMachines",
                type: {
                    name: "Number"
                }
            }, vipMappings: {
                readOnly: true,
                serializedName: "properties.vipMappings",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "VirtualIPMapping"
                        }
                    }
                }
            }, environmentCapacities: {
                readOnly: true,
                serializedName: "properties.environmentCapacities",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "StampCapacity"
                        }
                    }
                }
            }, networkAccessControlList: {
                serializedName: "properties.networkAccessControlList",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "NetworkAccessControlEntry"
                        }
                    }
                }
            }, environmentIsHealthy: {
                readOnly: true,
                serializedName: "properties.environmentIsHealthy",
                type: {
                    name: "Boolean"
                }
            }, environmentStatus: {
                readOnly: true,
                serializedName: "properties.environmentStatus",
                type: {
                    name: "String"
                }
            }, resourceGroup: {
                readOnly: true,
                serializedName: "properties.resourceGroup",
                type: {
                    name: "String"
                }
            }, frontEndScaleFactor: {
                serializedName: "properties.frontEndScaleFactor",
                type: {
                    name: "Number"
                }
            }, defaultFrontEndScaleFactor: {
                readOnly: true,
                serializedName: "properties.defaultFrontEndScaleFactor",
                type: {
                    name: "Number"
                }
            }, apiManagementAccountId: {
                serializedName: "properties.apiManagementAccountId",
                type: {
                    name: "String"
                }
            }, suspended: {
                serializedName: "properties.suspended",
                type: {
                    name: "Boolean"
                }
            }, dynamicCacheEnabled: {
                serializedName: "properties.dynamicCacheEnabled",
                type: {
                    name: "Boolean"
                }
            }, clusterSettings: {
                serializedName: "properties.clusterSettings",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "NameValuePair"
                        }
                    }
                }
            }, userWhitelistedIpRanges: {
                serializedName: "properties.userWhitelistedIpRanges",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String"
                        }
                    }
                }
            }, hasLinuxWorkers: {
                serializedName: "properties.hasLinuxWorkers",
                type: {
                    name: "Boolean"
                }
            }, sslCertKeyVaultId: {
                serializedName: "properties.sslCertKeyVaultId",
                type: {
                    name: "String"
                }
            }, sslCertKeyVaultSecretName: {
                serializedName: "properties.sslCertKeyVaultSecretName",
                type: {
                    name: "String"
                }
            } })
    }
};
export var AppServiceEnvironmentPatchResource = {
    serializedName: "AppServiceEnvironmentPatchResource",
    type: {
        name: "Composite",
        className: "AppServiceEnvironmentPatchResource",
        modelProperties: __assign(__assign({}, ProxyOnlyResource.type.modelProperties), { appServiceEnvironmentPatchResourceName: {
                required: true,
                serializedName: "properties.name",
                type: {
                    name: "String"
                }
            }, location: {
                required: true,
                serializedName: "properties.location",
                type: {
                    name: "String"
                }
            }, provisioningState: {
                readOnly: true,
                serializedName: "properties.provisioningState",
                type: {
                    name: "Enum",
                    allowedValues: [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "InProgress",
                        "Deleting"
                    ]
                }
            }, status: {
                readOnly: true,
                serializedName: "properties.status",
                type: {
                    name: "Enum",
                    allowedValues: [
                        "Preparing",
                        "Ready",
                        "Scaling",
                        "Deleting"
                    ]
                }
            }, vnetName: {
                serializedName: "properties.vnetName",
                type: {
                    name: "String"
                }
            }, vnetResourceGroupName: {
                serializedName: "properties.vnetResourceGroupName",
                type: {
                    name: "String"
                }
            }, vnetSubnetName: {
                serializedName: "properties.vnetSubnetName",
                type: {
                    name: "String"
                }
            }, virtualNetwork: {
                required: true,
                serializedName: "properties.virtualNetwork",
                type: {
                    name: "Composite",
                    className: "VirtualNetworkProfile"
                }
            }, internalLoadBalancingMode: {
                serializedName: "properties.internalLoadBalancingMode",
                type: {
                    name: "String"
                }
            }, multiSize: {
                serializedName: "properties.multiSize",
                type: {
                    name: "String"
                }
            }, multiRoleCount: {
                serializedName: "properties.multiRoleCount",
                type: {
                    name: "Number"
                }
            }, workerPools: {
                required: true,
                serializedName: "properties.workerPools",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "WorkerPool"
                        }
                    }
                }
            }, ipsslAddressCount: {
                serializedName: "properties.ipsslAddressCount",
                type: {
                    name: "Number"
                }
            }, databaseEdition: {
                readOnly: true,
                serializedName: "properties.databaseEdition",
                type: {
                    name: "String"
                }
            }, databaseServiceObjective: {
                readOnly: true,
                serializedName: "properties.databaseServiceObjective",
                type: {
                    name: "String"
                }
            }, upgradeDomains: {
                readOnly: true,
                serializedName: "properties.upgradeDomains",
                type: {
                    name: "Number"
                }
            }, subscriptionId: {
                readOnly: true,
                serializedName: "properties.subscriptionId",
                type: {
                    name: "String"
                }
            }, dnsSuffix: {
                serializedName: "properties.dnsSuffix",
                type: {
                    name: "String"
                }
            }, lastAction: {
                readOnly: true,
                serializedName: "properties.lastAction",
                type: {
                    name: "String"
                }
            }, lastActionResult: {
                readOnly: true,
                serializedName: "properties.lastActionResult",
                type: {
                    name: "String"
                }
            }, allowedMultiSizes: {
                readOnly: true,
                serializedName: "properties.allowedMultiSizes",
                type: {
                    name: "String"
                }
            }, allowedWorkerSizes: {
                readOnly: true,
                serializedName: "properties.allowedWorkerSizes",
                type: {
                    name: "String"
                }
            }, maximumNumberOfMachines: {
                readOnly: true,
                serializedName: "properties.maximumNumberOfMachines",
                type: {
                    name: "Number"
                }
            }, vipMappings: {
                readOnly: true,
                serializedName: "properties.vipMappings",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "VirtualIPMapping"
                        }
                    }
                }
            }, environmentCapacities: {
                readOnly: true,
                serializedName: "properties.environmentCapacities",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "StampCapacity"
                        }
                    }
                }
            }, networkAccessControlList: {
                serializedName: "properties.networkAccessControlList",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "NetworkAccessControlEntry"
                        }
                    }
                }
            }, environmentIsHealthy: {
                readOnly: true,
                serializedName: "properties.environmentIsHealthy",
                type: {
                    name: "Boolean"
                }
            }, environmentStatus: {
                readOnly: true,
                serializedName: "properties.environmentStatus",
                type: {
                    name: "String"
                }
            }, resourceGroup: {
                readOnly: true,
                serializedName: "properties.resourceGroup",
                type: {
                    name: "String"
                }
            }, frontEndScaleFactor: {
                serializedName: "properties.frontEndScaleFactor",
                type: {
                    name: "Number"
                }
            }, defaultFrontEndScaleFactor: {
                readOnly: true,
                serializedName: "properties.defaultFrontEndScaleFactor",
                type: {
                    name: "Number"
                }
            }, apiManagementAccountId: {
                serializedName: "properties.apiManagementAccountId",
                type: {
                    name: "String"
                }
            }, suspended: {
                serializedName: "properties.suspended",
                type: {
                    name: "Boolean"
                }
            }, dynamicCacheEnabled: {
                serializedName: "properties.dynamicCacheEnabled",
                type: {
                    name: "Boolean"
                }
            }, clusterSettings: {
                serializedName: "properties.clusterSettings",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "NameValuePair"
                        }
                    }
                }
            }, userWhitelistedIpRanges: {
                serializedName: "properties.userWhitelistedIpRanges",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String"
                        }
                    }
                }
            }, hasLinuxWorkers: {
                serializedName: "properties.hasLinuxWorkers",
                type: {
                    name: "Boolean"
                }
            }, sslCertKeyVaultId: {
                serializedName: "properties.sslCertKeyVaultId",
                type: {
                    name: "String"
                }
            }, sslCertKeyVaultSecretName: {
                serializedName: "properties.sslCertKeyVaultSecretName",
                type: {
                    name: "String"
                }
            } })
    }
};
export var EndpointDetail = {
    serializedName: "EndpointDetail",
    type: {
        name: "Composite",
        className: "EndpointDetail",
        modelProperties: {
            ipAddress: {
                serializedName: "ipAddress",
                type: {
                    name: "String"
                }
            },
            port: {
                serializedName: "port",
                type: {
                    name: "Number"
                }
            },
            latency: {
                serializedName: "latency",
                type: {
                    name: "Number"
                }
            },
            isAccessible: {
                serializedName: "isAccessible",
                type: {
                    name: "Boolean"
                }
            }
        }
    }
};
export var EndpointDependency = {
    serializedName: "EndpointDependency",
    type: {
        name: "Composite",
        className: "EndpointDependency",
        modelProperties: {
            domainName: {
                serializedName: "domainName",
                type: {
                    name: "String"
                }
            },
            endpointDetails: {
                serializedName: "endpointDetails",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "EndpointDetail"
                        }
                    }
                }
            }
        }
    }
};
export var HostingEnvironmentDiagnostics = {
    serializedName: "HostingEnvironmentDiagnostics",
    type: {
        name: "Composite",
        className: "HostingEnvironmentDiagnostics",
        modelProperties: {
            name: {
                serializedName: "name",
                type: {
                    name: "String"
                }
            },
            diagnosticsOutput: {
                serializedName: "diagnosticsOutput",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var InboundEnvironmentEndpoint = {
    serializedName: "InboundEnvironmentEndpoint",
    type: {
        name: "Composite",
        className: "InboundEnvironmentEndpoint",
        modelProperties: {
            description: {
                serializedName: "description",
                type: {
                    name: "String"
                }
            },
            endpoints: {
                serializedName: "endpoints",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String"
                        }
                    }
                }
            },
            ports: {
                serializedName: "ports",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String"
                        }
                    }
                }
            }
        }
    }
};
export var OutboundEnvironmentEndpoint = {
    serializedName: "OutboundEnvironmentEndpoint",
    type: {
        name: "Composite",
        className: "OutboundEnvironmentEndpoint",
        modelProperties: {
            category: {
                serializedName: "category",
                type: {
                    name: "String"
                }
            },
            endpoints: {
                serializedName: "endpoints",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "EndpointDependency"
                        }
                    }
                }
            }
        }
    }
};
export var ResourceMetricAvailability = {
    serializedName: "ResourceMetricAvailability",
    type: {
        name: "Composite",
        className: "ResourceMetricAvailability",
        modelProperties: {
            timeGrain: {
                readOnly: true,
                serializedName: "timeGrain",
                type: {
                    name: "String"
                }
            },
            retention: {
                readOnly: true,
                serializedName: "retention",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var ResourceMetricDefinition = {
    serializedName: "ResourceMetricDefinition",
    type: {
        name: "Composite",
        className: "ResourceMetricDefinition",
        modelProperties: __assign(__assign({}, ProxyOnlyResource.type.modelProperties), { unit: {
                readOnly: true,
                serializedName: "properties.unit",
                type: {
                    name: "String"
                }
            }, primaryAggregationType: {
                readOnly: true,
                serializedName: "properties.primaryAggregationType",
                type: {
                    name: "String"
                }
            }, metricAvailabilities: {
                readOnly: true,
                serializedName: "properties.metricAvailabilities",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "ResourceMetricAvailability"
                        }
                    }
                }
            }, resourceUri: {
                readOnly: true,
                serializedName: "properties.resourceUri",
                type: {
                    name: "String"
                }
            }, properties: {
                readOnly: true,
                serializedName: "properties.properties",
                type: {
                    name: "Dictionary",
                    value: {
                        type: {
                            name: "String"
                        }
                    }
                }
            } })
    }
};
export var SkuInfo = {
    serializedName: "SkuInfo",
    type: {
        name: "Composite",
        className: "SkuInfo",
        modelProperties: {
            resourceType: {
                serializedName: "resourceType",
                type: {
                    name: "String"
                }
            },
            sku: {
                serializedName: "sku",
                type: {
                    name: "Composite",
                    className: "SkuDescription"
                }
            },
            capacity: {
                serializedName: "capacity",
                type: {
                    name: "Composite",
                    className: "SkuCapacity"
                }
            }
        }
    }
};
export var Usage = {
    serializedName: "Usage",
    type: {
        name: "Composite",
        className: "Usage",
        modelProperties: __assign(__assign({}, ProxyOnlyResource.type.modelProperties), { displayName: {
                readOnly: true,
                serializedName: "properties.displayName",
                type: {
                    name: "String"
                }
            }, resourceName: {
                readOnly: true,
                serializedName: "properties.resourceName",
                type: {
                    name: "String"
                }
            }, unit: {
                readOnly: true,
                serializedName: "properties.unit",
                type: {
                    name: "String"
                }
            }, currentValue: {
                readOnly: true,
                serializedName: "properties.currentValue",
                type: {
                    name: "Number"
                }
            }, limit: {
                readOnly: true,
                serializedName: "properties.limit",
                type: {
                    name: "Number"
                }
            }, nextResetTime: {
                readOnly: true,
                serializedName: "properties.nextResetTime",
                type: {
                    name: "DateTime"
                }
            }, computeMode: {
                readOnly: true,
                serializedName: "properties.computeMode",
                type: {
                    name: "Enum",
                    allowedValues: [
                        "Shared",
                        "Dedicated",
                        "Dynamic"
                    ]
                }
            }, siteMode: {
                readOnly: true,
                serializedName: "properties.siteMode",
                type: {
                    name: "String"
                }
            } })
    }
};
export var WorkerPoolResource = {
    serializedName: "WorkerPoolResource",
    type: {
        name: "Composite",
        className: "WorkerPoolResource",
        modelProperties: __assign(__assign({}, ProxyOnlyResource.type.modelProperties), { workerSizeId: {
                serializedName: "properties.workerSizeId",
                type: {
                    name: "Number"
                }
            }, computeMode: {
                serializedName: "properties.computeMode",
                type: {
                    name: "Enum",
                    allowedValues: [
                        "Shared",
                        "Dedicated",
                        "Dynamic"
                    ]
                }
            }, workerSize: {
                serializedName: "properties.workerSize",
                type: {
                    name: "String"
                }
            }, workerCount: {
                serializedName: "properties.workerCount",
                type: {
                    name: "Number"
                }
            }, instanceNames: {
                readOnly: true,
                serializedName: "properties.instanceNames",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String"
                        }
                    }
                }
            }, sku: {
                serializedName: "sku",
                type: {
                    name: "Composite",
                    className: "SkuDescription"
                }
            } })
    }
};
export var AppServicePlanPatchResource = {
    serializedName: "AppServicePlanPatchResource",
    type: {
        name: "Composite",
        className: "AppServicePlanPatchResource",
        modelProperties: __assign(__assign({}, ProxyOnlyResource.type.modelProperties), { workerTierName: {
                serializedName: "properties.workerTierName",
                type: {
                    name: "String"
                }
            }, status: {
                readOnly: true,
                serializedName: "properties.status",
                type: {
                    name: "Enum",
                    allowedValues: [
                        "Ready",
                        "Pending",
                        "Creating"
                    ]
                }
            }, subscription: {
                readOnly: true,
                serializedName: "properties.subscription",
                type: {
                    name: "String"
                }
            }, hostingEnvironmentProfile: {
                serializedName: "properties.hostingEnvironmentProfile",
                type: {
                    name: "Composite",
                    className: "HostingEnvironmentProfile"
                }
            }, maximumNumberOfWorkers: {
                readOnly: true,
                serializedName: "properties.maximumNumberOfWorkers",
                type: {
                    name: "Number"
                }
            }, geoRegion: {
                readOnly: true,
                serializedName: "properties.geoRegion",
                type: {
                    name: "String"
                }
            }, perSiteScaling: {
                serializedName: "properties.perSiteScaling",
                defaultValue: false,
                type: {
                    name: "Boolean"
                }
            }, maximumElasticWorkerCount: {
                serializedName: "properties.maximumElasticWorkerCount",
                type: {
                    name: "Number"
                }
            }, numberOfSites: {
                readOnly: true,
                serializedName: "properties.numberOfSites",
                type: {
                    name: "Number"
                }
            }, isSpot: {
                serializedName: "properties.isSpot",
                type: {
                    name: "Boolean"
                }
            }, spotExpirationTime: {
                serializedName: "properties.spotExpirationTime",
                type: {
                    name: "DateTime"
                }
            }, freeOfferExpirationTime: {
                serializedName: "properties.freeOfferExpirationTime",
                type: {
                    name: "DateTime"
                }
            }, resourceGroup: {
                readOnly: true,
                serializedName: "properties.resourceGroup",
                type: {
                    name: "String"
                }
            }, reserved: {
                serializedName: "properties.reserved",
                defaultValue: false,
                type: {
                    name: "Boolean"
                }
            }, isXenon: {
                serializedName: "properties.isXenon",
                defaultValue: false,
                type: {
                    name: "Boolean"
                }
            }, hyperV: {
                serializedName: "properties.hyperV",
                defaultValue: false,
                type: {
                    name: "Boolean"
                }
            }, targetWorkerCount: {
                serializedName: "properties.targetWorkerCount",
                type: {
                    name: "Number"
                }
            }, targetWorkerSizeId: {
                serializedName: "properties.targetWorkerSizeId",
                type: {
                    name: "Number"
                }
            }, provisioningState: {
                readOnly: true,
                serializedName: "properties.provisioningState",
                type: {
                    name: "Enum",
                    allowedValues: [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "InProgress",
                        "Deleting"
                    ]
                }
            } })
    }
};
export var HybridConnectionKey = {
    serializedName: "HybridConnectionKey",
    type: {
        name: "Composite",
        className: "HybridConnectionKey",
        modelProperties: __assign(__assign({}, ProxyOnlyResource.type.modelProperties), { sendKeyName: {
                readOnly: true,
                serializedName: "properties.sendKeyName",
                type: {
                    name: "String"
                }
            }, sendKeyValue: {
                readOnly: true,
                serializedName: "properties.sendKeyValue",
                type: {
                    name: "String"
                }
            } })
    }
};
export var HybridConnectionLimits = {
    serializedName: "HybridConnectionLimits",
    type: {
        name: "Composite",
        className: "HybridConnectionLimits",
        modelProperties: __assign(__assign({}, ProxyOnlyResource.type.modelProperties), { current: {
                readOnly: true,
                serializedName: "properties.current",
                type: {
                    name: "Number"
                }
            }, maximum: {
                readOnly: true,
                serializedName: "properties.maximum",
                type: {
                    name: "Number"
                }
            } })
    }
};
export var ResourceHealthMetadata = {
    serializedName: "ResourceHealthMetadata",
    type: {
        name: "Composite",
        className: "ResourceHealthMetadata",
        modelProperties: __assign(__assign({}, ProxyOnlyResource.type.modelProperties), { category: {
                serializedName: "properties.category",
                type: {
                    name: "String"
                }
            }, signalAvailability: {
                serializedName: "properties.signalAvailability",
                type: {
                    name: "Boolean"
                }
            } })
    }
};
export var AppServiceCertificateOrderCollection = {
    serializedName: "AppServiceCertificateOrderCollection",
    type: {
        name: "Composite",
        className: "AppServiceCertificateOrderCollection",
        modelProperties: {
            value: {
                required: true,
                serializedName: "",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "AppServiceCertificateOrder"
                        }
                    }
                }
            },
            nextLink: {
                readOnly: true,
                serializedName: "nextLink",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var AppServiceCertificateCollection = {
    serializedName: "AppServiceCertificateCollection",
    type: {
        name: "Composite",
        className: "AppServiceCertificateCollection",
        modelProperties: {
            value: {
                required: true,
                serializedName: "",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "AppServiceCertificateResource"
                        }
                    }
                }
            },
            nextLink: {
                readOnly: true,
                serializedName: "nextLink",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var CsmOperationCollection = {
    serializedName: "CsmOperationCollection",
    type: {
        name: "Composite",
        className: "CsmOperationCollection",
        modelProperties: {
            value: {
                required: true,
                serializedName: "",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "CsmOperationDescription"
                        }
                    }
                }
            },
            nextLink: {
                readOnly: true,
                serializedName: "nextLink",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var DomainCollection = {
    serializedName: "DomainCollection",
    type: {
        name: "Composite",
        className: "DomainCollection",
        modelProperties: {
            value: {
                required: true,
                serializedName: "",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "Domain"
                        }
                    }
                }
            },
            nextLink: {
                readOnly: true,
                serializedName: "nextLink",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var NameIdentifierCollection = {
    serializedName: "NameIdentifierCollection",
    type: {
        name: "Composite",
        className: "NameIdentifierCollection",
        modelProperties: {
            value: {
                required: true,
                serializedName: "",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "NameIdentifier"
                        }
                    }
                }
            },
            nextLink: {
                readOnly: true,
                serializedName: "nextLink",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var DomainOwnershipIdentifierCollection = {
    serializedName: "DomainOwnershipIdentifierCollection",
    type: {
        name: "Composite",
        className: "DomainOwnershipIdentifierCollection",
        modelProperties: {
            value: {
                required: true,
                serializedName: "",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "DomainOwnershipIdentifier"
                        }
                    }
                }
            },
            nextLink: {
                readOnly: true,
                serializedName: "nextLink",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var TopLevelDomainCollection = {
    serializedName: "TopLevelDomainCollection",
    type: {
        name: "Composite",
        className: "TopLevelDomainCollection",
        modelProperties: {
            value: {
                required: true,
                serializedName: "",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "TopLevelDomain"
                        }
                    }
                }
            },
            nextLink: {
                readOnly: true,
                serializedName: "nextLink",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var TldLegalAgreementCollection = {
    serializedName: "TldLegalAgreementCollection",
    type: {
        name: "Composite",
        className: "TldLegalAgreementCollection",
        modelProperties: {
            value: {
                required: true,
                serializedName: "",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "TldLegalAgreement"
                        }
                    }
                }
            },
            nextLink: {
                readOnly: true,
                serializedName: "nextLink",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var CertificateCollection = {
    serializedName: "CertificateCollection",
    type: {
        name: "Composite",
        className: "CertificateCollection",
        modelProperties: {
            value: {
                required: true,
                serializedName: "",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "Certificate"
                        }
                    }
                }
            },
            nextLink: {
                readOnly: true,
                serializedName: "nextLink",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var DeletedWebAppCollection = {
    serializedName: "DeletedWebAppCollection",
    type: {
        name: "Composite",
        className: "DeletedWebAppCollection",
        modelProperties: {
            value: {
                required: true,
                serializedName: "",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "DeletedSite"
                        }
                    }
                }
            },
            nextLink: {
                readOnly: true,
                serializedName: "nextLink",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var DetectorResponseCollection = {
    serializedName: "DetectorResponseCollection",
    type: {
        name: "Composite",
        className: "DetectorResponseCollection",
        modelProperties: {
            value: {
                required: true,
                serializedName: "",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "DetectorResponse"
                        }
                    }
                }
            },
            nextLink: {
                readOnly: true,
                serializedName: "nextLink",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var DiagnosticCategoryCollection = {
    serializedName: "DiagnosticCategoryCollection",
    type: {
        name: "Composite",
        className: "DiagnosticCategoryCollection",
        modelProperties: {
            value: {
                required: true,
                serializedName: "",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "DiagnosticCategory"
                        }
                    }
                }
            },
            nextLink: {
                readOnly: true,
                serializedName: "nextLink",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var DiagnosticAnalysisCollection = {
    serializedName: "DiagnosticAnalysisCollection",
    type: {
        name: "Composite",
        className: "DiagnosticAnalysisCollection",
        modelProperties: {
            value: {
                required: true,
                serializedName: "",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "AnalysisDefinition"
                        }
                    }
                }
            },
            nextLink: {
                readOnly: true,
                serializedName: "nextLink",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var DiagnosticDetectorCollection = {
    serializedName: "DiagnosticDetectorCollection",
    type: {
        name: "Composite",
        className: "DiagnosticDetectorCollection",
        modelProperties: {
            value: {
                required: true,
                serializedName: "",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "DetectorDefinition"
                        }
                    }
                }
            },
            nextLink: {
                readOnly: true,
                serializedName: "nextLink",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var ApplicationStackCollection = {
    serializedName: "ApplicationStackCollection",
    type: {
        name: "Composite",
        className: "ApplicationStackCollection",
        modelProperties: {
            value: {
                required: true,
                serializedName: "",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "ApplicationStackResource"
                        }
                    }
                }
            },
            nextLink: {
                readOnly: true,
                serializedName: "nextLink",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var RecommendationCollection = {
    serializedName: "RecommendationCollection",
    type: {
        name: "Composite",
        className: "RecommendationCollection",
        modelProperties: {
            value: {
                required: true,
                serializedName: "",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "Recommendation"
                        }
                    }
                }
            },
            nextLink: {
                readOnly: true,
                serializedName: "nextLink",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var SourceControlCollection = {
    serializedName: "SourceControlCollection",
    type: {
        name: "Composite",
        className: "SourceControlCollection",
        modelProperties: {
            value: {
                required: true,
                serializedName: "",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "SourceControl"
                        }
                    }
                }
            },
            nextLink: {
                readOnly: true,
                serializedName: "nextLink",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var BillingMeterCollection = {
    serializedName: "BillingMeterCollection",
    type: {
        name: "Composite",
        className: "BillingMeterCollection",
        modelProperties: {
            value: {
                required: true,
                serializedName: "",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "BillingMeter"
                        }
                    }
                }
            },
            nextLink: {
                readOnly: true,
                serializedName: "nextLink",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var GeoRegionCollection = {
    serializedName: "GeoRegionCollection",
    type: {
        name: "Composite",
        className: "GeoRegionCollection",
        modelProperties: {
            value: {
                required: true,
                serializedName: "",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "GeoRegion"
                        }
                    }
                }
            },
            nextLink: {
                readOnly: true,
                serializedName: "nextLink",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var IdentifierCollection = {
    serializedName: "IdentifierCollection",
    type: {
        name: "Composite",
        className: "IdentifierCollection",
        modelProperties: {
            value: {
                required: true,
                serializedName: "",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "Identifier"
                        }
                    }
                }
            },
            nextLink: {
                readOnly: true,
                serializedName: "nextLink",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var PremierAddOnOfferCollection = {
    serializedName: "PremierAddOnOfferCollection",
    type: {
        name: "Composite",
        className: "PremierAddOnOfferCollection",
        modelProperties: {
            value: {
                required: true,
                serializedName: "",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "PremierAddOnOffer"
                        }
                    }
                }
            },
            nextLink: {
                readOnly: true,
                serializedName: "nextLink",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var WebAppCollection = {
    serializedName: "WebAppCollection",
    type: {
        name: "Composite",
        className: "WebAppCollection",
        modelProperties: {
            value: {
                required: true,
                serializedName: "",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "Site"
                        }
                    }
                }
            },
            nextLink: {
                readOnly: true,
                serializedName: "nextLink",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var BackupItemCollection = {
    serializedName: "BackupItemCollection",
    type: {
        name: "Composite",
        className: "BackupItemCollection",
        modelProperties: {
            value: {
                required: true,
                serializedName: "",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "BackupItem"
                        }
                    }
                }
            },
            nextLink: {
                readOnly: true,
                serializedName: "nextLink",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var SiteConfigResourceCollection = {
    serializedName: "SiteConfigResourceCollection",
    type: {
        name: "Composite",
        className: "SiteConfigResourceCollection",
        modelProperties: {
            value: {
                required: true,
                serializedName: "",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "SiteConfigResource"
                        }
                    }
                }
            },
            nextLink: {
                readOnly: true,
                serializedName: "nextLink",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var SiteConfigurationSnapshotInfoCollection = {
    serializedName: "SiteConfigurationSnapshotInfoCollection",
    type: {
        name: "Composite",
        className: "SiteConfigurationSnapshotInfoCollection",
        modelProperties: {
            value: {
                required: true,
                serializedName: "",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "SiteConfigurationSnapshotInfo"
                        }
                    }
                }
            },
            nextLink: {
                readOnly: true,
                serializedName: "nextLink",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var ContinuousWebJobCollection = {
    serializedName: "ContinuousWebJobCollection",
    type: {
        name: "Composite",
        className: "ContinuousWebJobCollection",
        modelProperties: {
            value: {
                required: true,
                serializedName: "",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "ContinuousWebJob"
                        }
                    }
                }
            },
            nextLink: {
                readOnly: true,
                serializedName: "nextLink",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var DeploymentCollection = {
    serializedName: "DeploymentCollection",
    type: {
        name: "Composite",
        className: "DeploymentCollection",
        modelProperties: {
            value: {
                required: true,
                serializedName: "",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "Deployment"
                        }
                    }
                }
            },
            nextLink: {
                readOnly: true,
                serializedName: "nextLink",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var FunctionEnvelopeCollection = {
    serializedName: "FunctionEnvelopeCollection",
    type: {
        name: "Composite",
        className: "FunctionEnvelopeCollection",
        modelProperties: {
            value: {
                required: true,
                serializedName: "",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "FunctionEnvelope"
                        }
                    }
                }
            },
            nextLink: {
                readOnly: true,
                serializedName: "nextLink",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var HostNameBindingCollection = {
    serializedName: "HostNameBindingCollection",
    type: {
        name: "Composite",
        className: "HostNameBindingCollection",
        modelProperties: {
            value: {
                required: true,
                serializedName: "",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "HostNameBinding"
                        }
                    }
                }
            },
            nextLink: {
                readOnly: true,
                serializedName: "nextLink",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var WebAppInstanceStatusCollection = {
    serializedName: "WebAppInstanceStatusCollection",
    type: {
        name: "Composite",
        className: "WebAppInstanceStatusCollection",
        modelProperties: {
            value: {
                required: true,
                serializedName: "",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "WebSiteInstanceStatus"
                        }
                    }
                }
            },
            nextLink: {
                readOnly: true,
                serializedName: "nextLink",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var ProcessInfoCollection = {
    serializedName: "ProcessInfoCollection",
    type: {
        name: "Composite",
        className: "ProcessInfoCollection",
        modelProperties: {
            value: {
                required: true,
                serializedName: "",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "ProcessInfo"
                        }
                    }
                }
            },
            nextLink: {
                readOnly: true,
                serializedName: "nextLink",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var ProcessModuleInfoCollection = {
    serializedName: "ProcessModuleInfoCollection",
    type: {
        name: "Composite",
        className: "ProcessModuleInfoCollection",
        modelProperties: {
            value: {
                required: true,
                serializedName: "",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "ProcessModuleInfo"
                        }
                    }
                }
            },
            nextLink: {
                readOnly: true,
                serializedName: "nextLink",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var ProcessThreadInfoCollection = {
    serializedName: "ProcessThreadInfoCollection",
    type: {
        name: "Composite",
        className: "ProcessThreadInfoCollection",
        modelProperties: {
            value: {
                required: true,
                serializedName: "",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "ProcessThreadInfo"
                        }
                    }
                }
            },
            nextLink: {
                readOnly: true,
                serializedName: "nextLink",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var PerfMonCounterCollection = {
    serializedName: "PerfMonCounterCollection",
    type: {
        name: "Composite",
        className: "PerfMonCounterCollection",
        modelProperties: {
            value: {
                required: true,
                serializedName: "",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "PerfMonResponse"
                        }
                    }
                }
            },
            nextLink: {
                readOnly: true,
                serializedName: "nextLink",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var PublicCertificateCollection = {
    serializedName: "PublicCertificateCollection",
    type: {
        name: "Composite",
        className: "PublicCertificateCollection",
        modelProperties: {
            value: {
                required: true,
                serializedName: "",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "PublicCertificate"
                        }
                    }
                }
            },
            nextLink: {
                readOnly: true,
                serializedName: "nextLink",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var SiteExtensionInfoCollection = {
    serializedName: "SiteExtensionInfoCollection",
    type: {
        name: "Composite",
        className: "SiteExtensionInfoCollection",
        modelProperties: {
            value: {
                required: true,
                serializedName: "",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "SiteExtensionInfo"
                        }
                    }
                }
            },
            nextLink: {
                readOnly: true,
                serializedName: "nextLink",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var SlotDifferenceCollection = {
    serializedName: "SlotDifferenceCollection",
    type: {
        name: "Composite",
        className: "SlotDifferenceCollection",
        modelProperties: {
            value: {
                required: true,
                serializedName: "",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "SlotDifference"
                        }
                    }
                }
            },
            nextLink: {
                readOnly: true,
                serializedName: "nextLink",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var SnapshotCollection = {
    serializedName: "SnapshotCollection",
    type: {
        name: "Composite",
        className: "SnapshotCollection",
        modelProperties: {
            value: {
                required: true,
                serializedName: "",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "Snapshot"
                        }
                    }
                }
            },
            nextLink: {
                readOnly: true,
                serializedName: "nextLink",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var TriggeredWebJobCollection = {
    serializedName: "TriggeredWebJobCollection",
    type: {
        name: "Composite",
        className: "TriggeredWebJobCollection",
        modelProperties: {
            value: {
                required: true,
                serializedName: "",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "TriggeredWebJob"
                        }
                    }
                }
            },
            nextLink: {
                readOnly: true,
                serializedName: "nextLink",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var TriggeredJobHistoryCollection = {
    serializedName: "TriggeredJobHistoryCollection",
    type: {
        name: "Composite",
        className: "TriggeredJobHistoryCollection",
        modelProperties: {
            value: {
                required: true,
                serializedName: "",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "TriggeredJobHistory"
                        }
                    }
                }
            },
            nextLink: {
                readOnly: true,
                serializedName: "nextLink",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var CsmUsageQuotaCollection = {
    serializedName: "CsmUsageQuotaCollection",
    type: {
        name: "Composite",
        className: "CsmUsageQuotaCollection",
        modelProperties: {
            value: {
                required: true,
                serializedName: "",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "CsmUsageQuota"
                        }
                    }
                }
            },
            nextLink: {
                readOnly: true,
                serializedName: "nextLink",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var WebJobCollection = {
    serializedName: "WebJobCollection",
    type: {
        name: "Composite",
        className: "WebJobCollection",
        modelProperties: {
            value: {
                required: true,
                serializedName: "",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "WebJob"
                        }
                    }
                }
            },
            nextLink: {
                readOnly: true,
                serializedName: "nextLink",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var StaticSiteCollection = {
    serializedName: "StaticSiteCollection",
    type: {
        name: "Composite",
        className: "StaticSiteCollection",
        modelProperties: {
            value: {
                required: true,
                serializedName: "",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "StaticSiteARMResource"
                        }
                    }
                }
            },
            nextLink: {
                readOnly: true,
                serializedName: "nextLink",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var StaticSiteUserCollection = {
    serializedName: "StaticSiteUserCollection",
    type: {
        name: "Composite",
        className: "StaticSiteUserCollection",
        modelProperties: {
            value: {
                required: true,
                serializedName: "",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "StaticSiteUserARMResource"
                        }
                    }
                }
            },
            nextLink: {
                readOnly: true,
                serializedName: "nextLink",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var StaticSiteBuildCollection = {
    serializedName: "StaticSiteBuildCollection",
    type: {
        name: "Composite",
        className: "StaticSiteBuildCollection",
        modelProperties: {
            value: {
                required: true,
                serializedName: "",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "StaticSiteBuildARMResource"
                        }
                    }
                }
            },
            nextLink: {
                readOnly: true,
                serializedName: "nextLink",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var StaticSiteFunctionOverviewCollection = {
    serializedName: "StaticSiteFunctionOverviewCollection",
    type: {
        name: "Composite",
        className: "StaticSiteFunctionOverviewCollection",
        modelProperties: {
            value: {
                required: true,
                serializedName: "",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "StaticSiteFunctionOverviewARMResource"
                        }
                    }
                }
            },
            nextLink: {
                readOnly: true,
                serializedName: "nextLink",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var StaticSiteCustomDomainOverviewCollection = {
    serializedName: "StaticSiteCustomDomainOverviewCollection",
    type: {
        name: "Composite",
        className: "StaticSiteCustomDomainOverviewCollection",
        modelProperties: {
            value: {
                required: true,
                serializedName: "",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "StaticSiteCustomDomainOverviewARMResource"
                        }
                    }
                }
            },
            nextLink: {
                readOnly: true,
                serializedName: "nextLink",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var AppServiceEnvironmentCollection = {
    serializedName: "AppServiceEnvironmentCollection",
    type: {
        name: "Composite",
        className: "AppServiceEnvironmentCollection",
        modelProperties: {
            value: {
                required: true,
                serializedName: "",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "AppServiceEnvironmentResource"
                        }
                    }
                }
            },
            nextLink: {
                readOnly: true,
                serializedName: "nextLink",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var StampCapacityCollection = {
    serializedName: "StampCapacityCollection",
    type: {
        name: "Composite",
        className: "StampCapacityCollection",
        modelProperties: {
            value: {
                required: true,
                serializedName: "",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "StampCapacity"
                        }
                    }
                }
            },
            nextLink: {
                readOnly: true,
                serializedName: "nextLink",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var InboundEnvironmentEndpointCollection = {
    serializedName: "InboundEnvironmentEndpointCollection",
    type: {
        name: "Composite",
        className: "InboundEnvironmentEndpointCollection",
        modelProperties: {
            value: {
                required: true,
                serializedName: "",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "InboundEnvironmentEndpoint"
                        }
                    }
                }
            },
            nextLink: {
                readOnly: true,
                serializedName: "nextLink",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var WorkerPoolCollection = {
    serializedName: "WorkerPoolCollection",
    type: {
        name: "Composite",
        className: "WorkerPoolCollection",
        modelProperties: {
            value: {
                required: true,
                serializedName: "",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "WorkerPoolResource"
                        }
                    }
                }
            },
            nextLink: {
                readOnly: true,
                serializedName: "nextLink",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var ResourceMetricDefinitionCollection = {
    serializedName: "ResourceMetricDefinitionCollection",
    type: {
        name: "Composite",
        className: "ResourceMetricDefinitionCollection",
        modelProperties: {
            value: {
                required: true,
                serializedName: "",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "ResourceMetricDefinition"
                        }
                    }
                }
            },
            nextLink: {
                readOnly: true,
                serializedName: "nextLink",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var SkuInfoCollection = {
    serializedName: "SkuInfoCollection",
    type: {
        name: "Composite",
        className: "SkuInfoCollection",
        modelProperties: {
            value: {
                required: true,
                serializedName: "",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "SkuInfo"
                        }
                    }
                }
            },
            nextLink: {
                readOnly: true,
                serializedName: "nextLink",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var UsageCollection = {
    serializedName: "UsageCollection",
    type: {
        name: "Composite",
        className: "UsageCollection",
        modelProperties: {
            value: {
                required: true,
                serializedName: "",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "Usage"
                        }
                    }
                }
            },
            nextLink: {
                readOnly: true,
                serializedName: "nextLink",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var OutboundEnvironmentEndpointCollection = {
    serializedName: "OutboundEnvironmentEndpointCollection",
    type: {
        name: "Composite",
        className: "OutboundEnvironmentEndpointCollection",
        modelProperties: {
            value: {
                required: true,
                serializedName: "",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "OutboundEnvironmentEndpoint"
                        }
                    }
                }
            },
            nextLink: {
                readOnly: true,
                serializedName: "nextLink",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var AppServicePlanCollection = {
    serializedName: "AppServicePlanCollection",
    type: {
        name: "Composite",
        className: "AppServicePlanCollection",
        modelProperties: {
            value: {
                required: true,
                serializedName: "",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "AppServicePlan"
                        }
                    }
                }
            },
            nextLink: {
                readOnly: true,
                serializedName: "nextLink",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var ResourceCollection = {
    serializedName: "ResourceCollection",
    type: {
        name: "Composite",
        className: "ResourceCollection",
        modelProperties: {
            value: {
                required: true,
                serializedName: "",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String"
                        }
                    }
                }
            },
            nextLink: {
                readOnly: true,
                serializedName: "nextLink",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var HybridConnectionCollection = {
    serializedName: "HybridConnectionCollection",
    type: {
        name: "Composite",
        className: "HybridConnectionCollection",
        modelProperties: {
            value: {
                required: true,
                serializedName: "",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "HybridConnection"
                        }
                    }
                }
            },
            nextLink: {
                readOnly: true,
                serializedName: "nextLink",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var ResourceHealthMetadataCollection = {
    serializedName: "ResourceHealthMetadataCollection",
    type: {
        name: "Composite",
        className: "ResourceHealthMetadataCollection",
        modelProperties: {
            value: {
                required: true,
                serializedName: "",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "ResourceHealthMetadata"
                        }
                    }
                }
            },
            nextLink: {
                readOnly: true,
                serializedName: "nextLink",
                type: {
                    name: "String"
                }
            }
        }
    }
};
//# sourceMappingURL=mappers.js.map