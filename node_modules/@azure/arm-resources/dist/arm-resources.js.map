{"version":3,"file":"arm-resources.js","sources":["../node_modules/tslib/tslib.es6.js","../src/models/index.ts","../src/models/mappers.ts","../src/models/operationsMappers.ts","../src/models/parameters.ts","../src/operations/operations.ts","../src/models/deploymentsMappers.ts","../src/operations/deployments.ts","../src/models/providersMappers.ts","../src/operations/providers.ts","../src/models/providerResourceTypesMappers.ts","../src/operations/providerResourceTypes.ts","../src/models/resourcesMappers.ts","../src/operations/resources.ts","../src/models/resourceGroupsMappers.ts","../src/operations/resourceGroups.ts","../src/models/tagsOperationsMappers.ts","../src/operations/tagsOperations.ts","../src/models/deploymentOperationsMappers.ts","../src/operations/deploymentOperations.ts","../src/resourceManagementClientContext.ts","../src/resourceManagementClient.ts"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __createBinding(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { BaseResource, CloudError, AzureServiceClientOptions } from \"@azure/ms-rest-azure-js\";\nimport * as msRest from \"@azure/ms-rest-js\";\n\nexport { BaseResource, CloudError };\n\n/**\n * Deployment filter.\n */\nexport interface DeploymentExtendedFilter {\n  /**\n   * The provisioning state.\n   */\n  provisioningState?: string;\n}\n\n/**\n * Resource filter.\n */\nexport interface GenericResourceFilter {\n  /**\n   * The resource type.\n   */\n  resourceType?: string;\n  /**\n   * The tag name.\n   */\n  tagname?: string;\n  /**\n   * The tag value.\n   */\n  tagvalue?: string;\n}\n\n/**\n * Resource group filter.\n */\nexport interface ResourceGroupFilter {\n  /**\n   * The tag name.\n   */\n  tagName?: string;\n  /**\n   * The tag value.\n   */\n  tagValue?: string;\n}\n\n/**\n * Entity representing the reference to the template.\n */\nexport interface TemplateLink {\n  /**\n   * The URI of the template to deploy. Use either the uri or id property, but not both.\n   */\n  uri?: string;\n  /**\n   * The resource id of a Template Spec. Use either the id or uri property, but not both.\n   */\n  id?: string;\n  /**\n   * The relativePath property can be used to deploy a linked template at a location relative to\n   * the parent. If the parent template was linked with a TemplateSpec, this will reference an\n   * artifact in the TemplateSpec.  If the parent was linked with a URI, the child deployment will\n   * be a combination of the parent and relativePath URIs\n   */\n  relativePath?: string;\n  /**\n   * If included, must match the ContentVersion in the template.\n   */\n  contentVersion?: string;\n  /**\n   * The query string (for example, a SAS token) to be used with the templateLink URI.\n   */\n  queryString?: string;\n}\n\n/**\n * Entity representing the reference to the deployment parameters.\n */\nexport interface ParametersLink {\n  /**\n   * The URI of the parameters file.\n   */\n  uri: string;\n  /**\n   * If included, must match the ContentVersion in the template.\n   */\n  contentVersion?: string;\n}\n\n/**\n * The debug setting.\n */\nexport interface DebugSetting {\n  /**\n   * Specifies the type of information to log for debugging. The permitted values are none,\n   * requestContent, responseContent, or both requestContent and responseContent separated by a\n   * comma. The default is none. When setting this value, carefully consider the type of\n   * information you are passing in during deployment. By logging information about the request or\n   * response, you could potentially expose sensitive data that is retrieved through the deployment\n   * operations.\n   */\n  detailLevel?: string;\n}\n\n/**\n * Deployment on error behavior.\n */\nexport interface OnErrorDeployment {\n  /**\n   * The deployment on error behavior type. Possible values are LastSuccessful and\n   * SpecificDeployment. Possible values include: 'LastSuccessful', 'SpecificDeployment'\n   */\n  type?: OnErrorDeploymentType;\n  /**\n   * The deployment to be used on error case.\n   */\n  deploymentName?: string;\n}\n\n/**\n * Specifies whether template expressions are evaluated within the scope of the parent template or\n * nested template.\n */\nexport interface ExpressionEvaluationOptions {\n  /**\n   * The scope to be used for evaluation of parameters, variables and functions in a nested\n   * template. Possible values include: 'NotSpecified', 'Outer', 'Inner'\n   */\n  scope?: ExpressionEvaluationOptionsScopeType;\n}\n\n/**\n * Deployment properties.\n */\nexport interface DeploymentProperties {\n  /**\n   * The template content. You use this element when you want to pass the template syntax directly\n   * in the request rather than link to an existing template. It can be a JObject or well-formed\n   * JSON string. Use either the templateLink property or the template property, but not both.\n   */\n  template?: any;\n  /**\n   * The URI of the template. Use either the templateLink property or the template property, but\n   * not both.\n   */\n  templateLink?: TemplateLink;\n  /**\n   * Name and value pairs that define the deployment parameters for the template. You use this\n   * element when you want to provide the parameter values directly in the request rather than link\n   * to an existing parameter file. Use either the parametersLink property or the parameters\n   * property, but not both. It can be a JObject or a well formed JSON string.\n   */\n  parameters?: any;\n  /**\n   * The URI of parameters file. You use this element to link to an existing parameters file. Use\n   * either the parametersLink property or the parameters property, but not both.\n   */\n  parametersLink?: ParametersLink;\n  /**\n   * The mode that is used to deploy resources. This value can be either Incremental or Complete.\n   * In Incremental mode, resources are deployed without deleting existing resources that are not\n   * included in the template. In Complete mode, resources are deployed and existing resources in\n   * the resource group that are not included in the template are deleted. Be careful when using\n   * Complete mode as you may unintentionally delete resources. Possible values include:\n   * 'Incremental', 'Complete'\n   */\n  mode: DeploymentMode;\n  /**\n   * The debug setting of the deployment.\n   */\n  debugSetting?: DebugSetting;\n  /**\n   * The deployment on error behavior.\n   */\n  onErrorDeployment?: OnErrorDeployment;\n  /**\n   * Specifies whether template expressions are evaluated within the scope of the parent template\n   * or nested template. Only applicable to nested templates. If not specified, default value is\n   * outer.\n   */\n  expressionEvaluationOptions?: ExpressionEvaluationOptions;\n}\n\n/**\n * Deployment operation parameters.\n */\nexport interface Deployment {\n  /**\n   * The location to store the deployment data.\n   */\n  location?: string;\n  /**\n   * The deployment properties.\n   */\n  properties: DeploymentProperties;\n  /**\n   * Deployment tags\n   */\n  tags?: { [propertyName: string]: string };\n}\n\n/**\n * Deployment operation parameters.\n */\nexport interface ScopedDeployment {\n  /**\n   * The location to store the deployment data.\n   */\n  location: string;\n  /**\n   * The deployment properties.\n   */\n  properties: DeploymentProperties;\n  /**\n   * Deployment tags\n   */\n  tags?: { [propertyName: string]: string };\n}\n\n/**\n * The deployment export result.\n */\nexport interface DeploymentExportResult {\n  /**\n   * The template content.\n   */\n  template?: any;\n}\n\n/**\n * Deployment What-If operation settings.\n */\nexport interface DeploymentWhatIfSettings {\n  /**\n   * The format of the What-If results. Possible values include: 'ResourceIdOnly',\n   * 'FullResourcePayloads'\n   */\n  resultFormat?: WhatIfResultFormat;\n}\n\n/**\n * Deployment What-if properties.\n */\nexport interface DeploymentWhatIfProperties extends DeploymentProperties {\n  /**\n   * Optional What-If operation settings.\n   */\n  whatIfSettings?: DeploymentWhatIfSettings;\n}\n\n/**\n * Deployment What-if operation parameters.\n */\nexport interface DeploymentWhatIf {\n  /**\n   * The location to store the deployment data.\n   */\n  location?: string;\n  /**\n   * The deployment properties.\n   */\n  properties: DeploymentWhatIfProperties;\n}\n\n/**\n * Deployment What-if operation parameters.\n */\nexport interface ScopedDeploymentWhatIf {\n  /**\n   * The location to store the deployment data.\n   */\n  location: string;\n  /**\n   * The deployment properties.\n   */\n  properties: DeploymentWhatIfProperties;\n}\n\n/**\n * The resource management error additional info.\n */\nexport interface ErrorAdditionalInfo {\n  /**\n   * The additional info type.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly type?: string;\n  /**\n   * The additional info.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly info?: any;\n}\n\n/**\n * Common error response for all Azure Resource Manager APIs to return error details for failed\n * operations. (This also follows the OData error response format.)\n * @summary Error Response\n */\nexport interface ErrorResponse {\n  /**\n   * The error code.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly code?: string;\n  /**\n   * The error message.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly message?: string;\n  /**\n   * The error target.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly target?: string;\n  /**\n   * The error details.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly details?: ErrorResponse[];\n  /**\n   * The error additional info.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly additionalInfo?: ErrorAdditionalInfo[];\n}\n\n/**\n * An interface representing ApiProfile.\n */\nexport interface ApiProfile {\n  /**\n   * The profile version.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly profileVersion?: string;\n  /**\n   * The API version.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly apiVersion?: string;\n}\n\n/**\n * An interface representing AliasPathMetadata.\n */\nexport interface AliasPathMetadata {\n  /**\n   * The type of the token that the alias path is referring to. Possible values include:\n   * 'NotSpecified', 'Any', 'String', 'Object', 'Array', 'Integer', 'Number', 'Boolean'\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly type?: AliasPathTokenType;\n  /**\n   * The attributes of the token that the alias path is referring to. Possible values include:\n   * 'None', 'Modifiable'\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly attributes?: AliasPathAttributes;\n}\n\n/**\n * The type of the pattern for an alias path.\n */\nexport interface AliasPattern {\n  /**\n   * The alias pattern phrase.\n   */\n  phrase?: string;\n  /**\n   * The alias pattern variable.\n   */\n  variable?: string;\n  /**\n   * The type of alias pattern. Possible values include: 'NotSpecified', 'Extract'\n   */\n  type?: AliasPatternType;\n}\n\n/**\n * The type of the paths for alias.\n */\nexport interface AliasPath {\n  /**\n   * The path of an alias.\n   */\n  path?: string;\n  /**\n   * The API versions.\n   */\n  apiVersions?: string[];\n  /**\n   * The pattern for an alias path.\n   */\n  pattern?: AliasPattern;\n  /**\n   * The metadata of the alias path. If missing, fall back to the default metadata of the alias.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly metadata?: AliasPathMetadata;\n}\n\n/**\n * The alias type.\n */\nexport interface Alias {\n  /**\n   * The alias name.\n   */\n  name?: string;\n  /**\n   * The paths for an alias.\n   */\n  paths?: AliasPath[];\n  /**\n   * The type of the alias. Possible values include: 'NotSpecified', 'PlainText', 'Mask'\n   */\n  type?: AliasType;\n  /**\n   * The default path for an alias.\n   */\n  defaultPath?: string;\n  /**\n   * The default pattern for an alias.\n   */\n  defaultPattern?: AliasPattern;\n  /**\n   * The default alias path metadata. Applies to the default path and to any alias path that\n   * doesn't have metadata\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly defaultMetadata?: AliasPathMetadata;\n}\n\n/**\n * The provider extended location.\n */\nexport interface ProviderExtendedLocation {\n  /**\n   * The azure location.\n   */\n  location?: string;\n  /**\n   * The extended location type.\n   */\n  type?: string;\n  /**\n   * The extended locations for the azure location.\n   */\n  extendedLocations?: string[];\n}\n\n/**\n * Resource type managed by the resource provider.\n */\nexport interface ProviderResourceType {\n  /**\n   * The resource type.\n   */\n  resourceType?: string;\n  /**\n   * The collection of locations where this resource type can be created.\n   */\n  locations?: string[];\n  /**\n   * The location mappings that are supported by this resource type.\n   */\n  locationMappings?: ProviderExtendedLocation[];\n  /**\n   * The aliases that are supported by this resource type.\n   */\n  aliases?: Alias[];\n  /**\n   * The API version.\n   */\n  apiVersions?: string[];\n  /**\n   * The default API version.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly defaultApiVersion?: string;\n  /**\n   * The API profiles for the resource provider.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly apiProfiles?: ApiProfile[];\n  /**\n   * The additional capabilities offered by this resource type.\n   */\n  capabilities?: string;\n  /**\n   * The properties.\n   */\n  properties?: { [propertyName: string]: string };\n}\n\n/**\n * Resource provider information.\n */\nexport interface Provider {\n  /**\n   * The provider ID.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly id?: string;\n  /**\n   * The namespace of the resource provider.\n   */\n  namespace?: string;\n  /**\n   * The registration state of the resource provider.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly registrationState?: string;\n  /**\n   * The registration policy of the resource provider.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly registrationPolicy?: string;\n  /**\n   * The collection of provider resource types.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly resourceTypes?: ProviderResourceType[];\n}\n\n/**\n * Deployment dependency information.\n */\nexport interface BasicDependency {\n  /**\n   * The ID of the dependency.\n   */\n  id?: string;\n  /**\n   * The dependency resource type.\n   */\n  resourceType?: string;\n  /**\n   * The dependency resource name.\n   */\n  resourceName?: string;\n}\n\n/**\n * Deployment dependency information.\n */\nexport interface Dependency {\n  /**\n   * The list of dependencies.\n   */\n  dependsOn?: BasicDependency[];\n  /**\n   * The ID of the dependency.\n   */\n  id?: string;\n  /**\n   * The dependency resource type.\n   */\n  resourceType?: string;\n  /**\n   * The dependency resource name.\n   */\n  resourceName?: string;\n}\n\n/**\n * Deployment on error behavior with additional details.\n */\nexport interface OnErrorDeploymentExtended {\n  /**\n   * The state of the provisioning for the on error deployment.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly provisioningState?: string;\n  /**\n   * The deployment on error behavior type. Possible values are LastSuccessful and\n   * SpecificDeployment. Possible values include: 'LastSuccessful', 'SpecificDeployment'\n   */\n  type?: OnErrorDeploymentType;\n  /**\n   * The deployment to be used on error case.\n   */\n  deploymentName?: string;\n}\n\n/**\n * The resource Id model.\n */\nexport interface ResourceReference {\n  /**\n   * The fully qualified resource Id.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly id?: string;\n}\n\n/**\n * Deployment properties with additional details.\n */\nexport interface DeploymentPropertiesExtended {\n  /**\n   * Denotes the state of provisioning. Possible values include: 'NotSpecified', 'Accepted',\n   * 'Running', 'Ready', 'Creating', 'Created', 'Deleting', 'Deleted', 'Canceled', 'Failed',\n   * 'Succeeded', 'Updating'\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly provisioningState?: ProvisioningState;\n  /**\n   * The correlation ID of the deployment.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly correlationId?: string;\n  /**\n   * The timestamp of the template deployment.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly timestamp?: Date;\n  /**\n   * The duration of the template deployment.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly duration?: string;\n  /**\n   * Key/value pairs that represent deployment output.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly outputs?: any;\n  /**\n   * The list of resource providers needed for the deployment.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly providers?: Provider[];\n  /**\n   * The list of deployment dependencies.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly dependencies?: Dependency[];\n  /**\n   * The URI referencing the template.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly templateLink?: TemplateLink;\n  /**\n   * Deployment parameters.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly parameters?: any;\n  /**\n   * The URI referencing the parameters.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly parametersLink?: ParametersLink;\n  /**\n   * The deployment mode. Possible values are Incremental and Complete. Possible values include:\n   * 'Incremental', 'Complete'\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly mode?: DeploymentMode;\n  /**\n   * The debug setting of the deployment.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly debugSetting?: DebugSetting;\n  /**\n   * The deployment on error behavior.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly onErrorDeployment?: OnErrorDeploymentExtended;\n  /**\n   * The hash produced for the template.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly templateHash?: string;\n  /**\n   * Array of provisioned resources.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly outputResources?: ResourceReference[];\n  /**\n   * Array of validated resources.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly validatedResources?: ResourceReference[];\n  /**\n   * The deployment error.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly error?: ErrorResponse;\n}\n\n/**\n * Information from validate template deployment response.\n */\nexport interface DeploymentValidateResult {\n  /**\n   * The deployment validation error.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly error?: ErrorResponse;\n  /**\n   * The template deployment properties.\n   */\n  properties?: DeploymentPropertiesExtended;\n}\n\n/**\n * Deployment information.\n */\nexport interface DeploymentExtended extends BaseResource {\n  /**\n   * The ID of the deployment.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly id?: string;\n  /**\n   * The name of the deployment.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly name?: string;\n  /**\n   * The type of the deployment.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly type?: string;\n  /**\n   * the location of the deployment.\n   */\n  location?: string;\n  /**\n   * Deployment properties.\n   */\n  properties?: DeploymentPropertiesExtended;\n  /**\n   * Deployment tags\n   */\n  tags?: { [propertyName: string]: string };\n}\n\n/**\n * List of resource types of a resource provider.\n */\nexport interface ProviderResourceTypeListResult {\n  /**\n   * An array of resource types.\n   */\n  value?: ProviderResourceType[];\n  /**\n   * The URL to use for getting the next set of results.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly nextLink?: string;\n}\n\n/**\n * Plan for the resource.\n */\nexport interface Plan {\n  /**\n   * The plan ID.\n   */\n  name?: string;\n  /**\n   * The publisher ID.\n   */\n  publisher?: string;\n  /**\n   * The offer ID.\n   */\n  product?: string;\n  /**\n   * The promotion code.\n   */\n  promotionCode?: string;\n  /**\n   * The plan's version.\n   */\n  version?: string;\n}\n\n/**\n * SKU for the resource.\n */\nexport interface Sku {\n  /**\n   * The SKU name.\n   */\n  name?: string;\n  /**\n   * The SKU tier.\n   */\n  tier?: string;\n  /**\n   * The SKU size.\n   */\n  size?: string;\n  /**\n   * The SKU family.\n   */\n  family?: string;\n  /**\n   * The SKU model.\n   */\n  model?: string;\n  /**\n   * The SKU capacity.\n   */\n  capacity?: number;\n}\n\n/**\n * An interface representing IdentityUserAssignedIdentitiesValue.\n */\nexport interface IdentityUserAssignedIdentitiesValue {\n  /**\n   * The principal id of user assigned identity.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly principalId?: string;\n  /**\n   * The client id of user assigned identity.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly clientId?: string;\n}\n\n/**\n * Identity for the resource.\n */\nexport interface Identity {\n  /**\n   * The principal ID of resource identity.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly principalId?: string;\n  /**\n   * The tenant ID of resource.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly tenantId?: string;\n  /**\n   * The identity type. Possible values include: 'SystemAssigned', 'UserAssigned', 'SystemAssigned,\n   * UserAssigned', 'None'\n   */\n  type?: ResourceIdentityType;\n  /**\n   * The list of user identities associated with the resource. The user identity dictionary key\n   * references will be ARM resource ids in the form:\n   * '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.\n   */\n  userAssignedIdentities?: { [propertyName: string]: IdentityUserAssignedIdentitiesValue };\n}\n\n/**\n * Specified resource.\n */\nexport interface Resource extends BaseResource {\n  /**\n   * Resource ID\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly id?: string;\n  /**\n   * Resource name\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly name?: string;\n  /**\n   * Resource type\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly type?: string;\n  /**\n   * Resource location\n   */\n  location?: string;\n  /**\n   * Resource extended location.\n   */\n  extendedLocation?: ExtendedLocation;\n  /**\n   * Resource tags\n   */\n  tags?: { [propertyName: string]: string };\n}\n\n/**\n * Resource information.\n */\nexport interface GenericResource extends Resource {\n  /**\n   * The plan of the resource.\n   */\n  plan?: Plan;\n  /**\n   * The resource properties.\n   */\n  properties?: any;\n  /**\n   * The kind of the resource.\n   */\n  kind?: string;\n  /**\n   * ID of the resource that manages this resource.\n   */\n  managedBy?: string;\n  /**\n   * The SKU of the resource.\n   */\n  sku?: Sku;\n  /**\n   * The identity of the resource.\n   */\n  identity?: Identity;\n}\n\n/**\n * Resource extended location.\n */\nexport interface ExtendedLocation {\n  /**\n   * The extended location type. Possible values include: 'EdgeZone'\n   */\n  type?: ExtendedLocationType;\n  /**\n   * The extended location name.\n   */\n  name?: string;\n}\n\n/**\n * Resource information.\n */\nexport interface GenericResourceExpanded extends GenericResource {\n  /**\n   * The created time of the resource. This is only present if requested via the $expand query\n   * parameter.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly createdTime?: Date;\n  /**\n   * The changed time of the resource. This is only present if requested via the $expand query\n   * parameter.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly changedTime?: Date;\n  /**\n   * The provisioning state of the resource. This is only present if requested via the $expand\n   * query parameter.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly provisioningState?: string;\n}\n\n/**\n * The resource group properties.\n */\nexport interface ResourceGroupProperties {\n  /**\n   * The provisioning state.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly provisioningState?: string;\n}\n\n/**\n * Resource group information.\n */\nexport interface ResourceGroup extends BaseResource {\n  /**\n   * The ID of the resource group.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly id?: string;\n  /**\n   * The name of the resource group.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly name?: string;\n  /**\n   * The type of the resource group.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly type?: string;\n  /**\n   * The resource group properties.\n   */\n  properties?: ResourceGroupProperties;\n  /**\n   * The location of the resource group. It cannot be changed after the resource group has been\n   * created. It must be one of the supported Azure locations.\n   */\n  location: string;\n  /**\n   * The ID of the resource that manages this resource group.\n   */\n  managedBy?: string;\n  /**\n   * The tags attached to the resource group.\n   */\n  tags?: { [propertyName: string]: string };\n}\n\n/**\n * Resource group information.\n */\nexport interface ResourceGroupPatchable {\n  /**\n   * The name of the resource group.\n   */\n  name?: string;\n  /**\n   * The resource group properties.\n   */\n  properties?: ResourceGroupProperties;\n  /**\n   * The ID of the resource that manages this resource group.\n   */\n  managedBy?: string;\n  /**\n   * The tags attached to the resource group.\n   */\n  tags?: { [propertyName: string]: string };\n}\n\n/**\n * Parameters of move resources.\n */\nexport interface ResourcesMoveInfo {\n  /**\n   * The IDs of the resources.\n   */\n  resources?: string[];\n  /**\n   * The target resource group.\n   */\n  targetResourceGroup?: string;\n}\n\n/**\n * Export resource group template request parameters.\n */\nexport interface ExportTemplateRequest {\n  /**\n   * The IDs of the resources to filter the export by. To export all resources, supply an array\n   * with single entry '*'.\n   */\n  resources?: string[];\n  /**\n   * The export template options. A CSV-formatted list containing zero or more of the following:\n   * 'IncludeParameterDefaultValue', 'IncludeComments', 'SkipResourceNameParameterization',\n   * 'SkipAllParameterization'\n   */\n  options?: string;\n}\n\n/**\n * Tag count.\n */\nexport interface TagCount {\n  /**\n   * Type of count.\n   */\n  type?: string;\n  /**\n   * Value of count.\n   */\n  value?: number;\n}\n\n/**\n * Tag information.\n */\nexport interface TagValue extends BaseResource {\n  /**\n   * The tag value ID.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly id?: string;\n  /**\n   * The tag value.\n   */\n  tagValue?: string;\n  /**\n   * The tag value count.\n   */\n  count?: TagCount;\n}\n\n/**\n * Tag details.\n */\nexport interface TagDetails extends BaseResource {\n  /**\n   * The tag name ID.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly id?: string;\n  /**\n   * The tag name.\n   */\n  tagName?: string;\n  /**\n   * The total number of resources that use the resource tag. When a tag is initially created and\n   * has no associated resources, the value is 0.\n   */\n  count?: TagCount;\n  /**\n   * The list of tag values.\n   */\n  values?: TagValue[];\n}\n\n/**\n * Target resource.\n */\nexport interface TargetResource {\n  /**\n   * The ID of the resource.\n   */\n  id?: string;\n  /**\n   * The name of the resource.\n   */\n  resourceName?: string;\n  /**\n   * The type of the resource.\n   */\n  resourceType?: string;\n}\n\n/**\n * HTTP message.\n */\nexport interface HttpMessage {\n  /**\n   * HTTP message content.\n   */\n  content?: any;\n}\n\n/**\n * Operation status message object.\n */\nexport interface StatusMessage {\n  /**\n   * Status of the deployment operation.\n   */\n  status?: string;\n  /**\n   * The error reported by the operation.\n   */\n  error?: ErrorResponse;\n}\n\n/**\n * Deployment operation properties.\n */\nexport interface DeploymentOperationProperties {\n  /**\n   * The name of the current provisioning operation. Possible values include: 'NotSpecified',\n   * 'Create', 'Delete', 'Waiting', 'AzureAsyncOperationWaiting', 'ResourceCacheWaiting', 'Action',\n   * 'Read', 'EvaluateDeploymentOutput', 'DeploymentCleanup'\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly provisioningOperation?: ProvisioningOperation;\n  /**\n   * The state of the provisioning.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly provisioningState?: string;\n  /**\n   * The date and time of the operation.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly timestamp?: Date;\n  /**\n   * The duration of the operation.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly duration?: string;\n  /**\n   * Deployment operation service request id.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly serviceRequestId?: string;\n  /**\n   * Operation status code from the resource provider. This property may not be set if a response\n   * has not yet been received.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly statusCode?: string;\n  /**\n   * Operation status message from the resource provider. This property is optional.  It will only\n   * be provided if an error was received from the resource provider.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly statusMessage?: StatusMessage;\n  /**\n   * The target resource.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly targetResource?: TargetResource;\n  /**\n   * The HTTP request message.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly request?: HttpMessage;\n  /**\n   * The HTTP response message.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly response?: HttpMessage;\n}\n\n/**\n * Deployment operation information.\n */\nexport interface DeploymentOperation {\n  /**\n   * Full deployment operation ID.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly id?: string;\n  /**\n   * Deployment operation ID.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly operationId?: string;\n  /**\n   * Deployment properties.\n   */\n  properties?: DeploymentOperationProperties;\n}\n\n/**\n * Resource provider operation's display properties.\n */\nexport interface ResourceProviderOperationDisplayProperties {\n  /**\n   * Operation description.\n   */\n  publisher?: string;\n  /**\n   * Operation provider.\n   */\n  provider?: string;\n  /**\n   * Operation resource.\n   */\n  resource?: string;\n  /**\n   * Resource provider operation.\n   */\n  operation?: string;\n  /**\n   * Operation description.\n   */\n  description?: string;\n}\n\n/**\n * Sub-resource.\n */\nexport interface SubResource extends BaseResource {\n  /**\n   * Resource ID\n   */\n  id?: string;\n}\n\n/**\n * Resource group export result.\n */\nexport interface ResourceGroupExportResult {\n  /**\n   * The template content.\n   */\n  template?: any;\n  /**\n   * The template export error.\n   */\n  error?: ErrorResponse;\n}\n\n/**\n * The object that represents the operation.\n */\nexport interface OperationDisplay {\n  /**\n   * Service provider: Microsoft.Resources\n   */\n  provider?: string;\n  /**\n   * Resource on which the operation is performed: Profile, endpoint, etc.\n   */\n  resource?: string;\n  /**\n   * Operation type: Read, write, delete, etc.\n   */\n  operation?: string;\n  /**\n   * Description of the operation.\n   */\n  description?: string;\n}\n\n/**\n * Microsoft.Resources operation\n */\nexport interface Operation {\n  /**\n   * Operation name: {provider}/{resource}/{operation}\n   */\n  name?: string;\n  /**\n   * The object that represents the operation.\n   */\n  display?: OperationDisplay;\n}\n\n/**\n * Result of the request to calculate template hash. It contains a string of minified template and\n * its hash.\n */\nexport interface TemplateHashResult {\n  /**\n   * The minified template string.\n   */\n  minifiedTemplate?: string;\n  /**\n   * The template hash.\n   */\n  templateHash?: string;\n}\n\n/**\n * The predicted change to the resource property.\n */\nexport interface WhatIfPropertyChange {\n  /**\n   * The path of the property.\n   */\n  path: string;\n  /**\n   * The type of property change. Possible values include: 'Create', 'Delete', 'Modify', 'Array',\n   * 'NoEffect'\n   */\n  propertyChangeType: PropertyChangeType;\n  /**\n   * The value of the property before the deployment is executed.\n   */\n  before?: any;\n  /**\n   * The value of the property after the deployment is executed.\n   */\n  after?: any;\n  /**\n   * Nested property changes.\n   */\n  children?: WhatIfPropertyChange[];\n}\n\n/**\n * Information about a single resource change predicted by What-If operation.\n */\nexport interface WhatIfChange {\n  /**\n   * Resource ID\n   */\n  resourceId: string;\n  /**\n   * Type of change that will be made to the resource when the deployment is executed. Possible\n   * values include: 'Create', 'Delete', 'Ignore', 'Deploy', 'NoChange', 'Modify', 'Unsupported'\n   */\n  changeType: ChangeType;\n  /**\n   * The explanation about why the resource is unsupported by What-If.\n   */\n  unsupportedReason?: string;\n  /**\n   * The snapshot of the resource before the deployment is executed.\n   */\n  before?: any;\n  /**\n   * The predicted snapshot of the resource after the deployment is executed.\n   */\n  after?: any;\n  /**\n   * The predicted changes to resource properties.\n   */\n  delta?: WhatIfPropertyChange[];\n}\n\n/**\n * Result of the What-If operation. Contains a list of predicted changes and a URL link to get to\n * the next set of results.\n */\nexport interface WhatIfOperationResult {\n  /**\n   * Status of the What-If operation.\n   */\n  status?: string;\n  /**\n   * List of resource changes predicted by What-If operation.\n   */\n  changes?: WhatIfChange[];\n  /**\n   * Error when What-If operation fails.\n   */\n  error?: ErrorResponse;\n}\n\n/**\n * A dictionary of name and value pairs.\n */\nexport interface Tags {\n  tags?: { [propertyName: string]: string };\n}\n\n/**\n * Wrapper resource for tags patch API request only.\n */\nexport interface TagsPatchResource {\n  /**\n   * The operation type for the patch API. Possible values include: 'Replace', 'Merge', 'Delete'\n   */\n  operation?: TagsPatchOperation;\n  /**\n   * The set of tags.\n   */\n  properties?: Tags;\n}\n\n/**\n * Wrapper resource for tags API requests and responses.\n */\nexport interface TagsResource extends BaseResource {\n  /**\n   * The ID of the tags wrapper resource.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly id?: string;\n  /**\n   * The name of the tags wrapper resource.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly name?: string;\n  /**\n   * The type of the tags wrapper resource.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly type?: string;\n  /**\n   * The set of tags.\n   */\n  properties: Tags;\n}\n\n/**\n * Optional Parameters.\n */\nexport interface DeploymentsListAtScopeOptionalParams extends msRest.RequestOptionsBase {\n  /**\n   * The filter to apply on the operation. For example, you can use $filter=provisioningState eq\n   * '{state}'.\n   */\n  filter?: string;\n  /**\n   * The number of results to get. If null is passed, returns all deployments.\n   */\n  top?: number;\n}\n\n/**\n * Optional Parameters.\n */\nexport interface DeploymentsListAtTenantScopeOptionalParams extends msRest.RequestOptionsBase {\n  /**\n   * The filter to apply on the operation. For example, you can use $filter=provisioningState eq\n   * '{state}'.\n   */\n  filter?: string;\n  /**\n   * The number of results to get. If null is passed, returns all deployments.\n   */\n  top?: number;\n}\n\n/**\n * Optional Parameters.\n */\nexport interface DeploymentsListAtManagementGroupScopeOptionalParams\n  extends msRest.RequestOptionsBase {\n  /**\n   * The filter to apply on the operation. For example, you can use $filter=provisioningState eq\n   * '{state}'.\n   */\n  filter?: string;\n  /**\n   * The number of results to get. If null is passed, returns all deployments.\n   */\n  top?: number;\n}\n\n/**\n * Optional Parameters.\n */\nexport interface DeploymentsListAtSubscriptionScopeOptionalParams\n  extends msRest.RequestOptionsBase {\n  /**\n   * The filter to apply on the operation. For example, you can use $filter=provisioningState eq\n   * '{state}'.\n   */\n  filter?: string;\n  /**\n   * The number of results to get. If null is passed, returns all deployments.\n   */\n  top?: number;\n}\n\n/**\n * Optional Parameters.\n */\nexport interface DeploymentsListByResourceGroupOptionalParams extends msRest.RequestOptionsBase {\n  /**\n   * The filter to apply on the operation. For example, you can use $filter=provisioningState eq\n   * '{state}'.\n   */\n  filter?: string;\n  /**\n   * The number of results to get. If null is passed, returns all deployments.\n   */\n  top?: number;\n}\n\n/**\n * Optional Parameters.\n */\nexport interface DeploymentsListAtScopeNextOptionalParams extends msRest.RequestOptionsBase {\n  /**\n   * The filter to apply on the operation. For example, you can use $filter=provisioningState eq\n   * '{state}'.\n   */\n  filter?: string;\n  /**\n   * The number of results to get. If null is passed, returns all deployments.\n   */\n  top?: number;\n}\n\n/**\n * Optional Parameters.\n */\nexport interface DeploymentsListAtTenantScopeNextOptionalParams extends msRest.RequestOptionsBase {\n  /**\n   * The filter to apply on the operation. For example, you can use $filter=provisioningState eq\n   * '{state}'.\n   */\n  filter?: string;\n  /**\n   * The number of results to get. If null is passed, returns all deployments.\n   */\n  top?: number;\n}\n\n/**\n * Optional Parameters.\n */\nexport interface DeploymentsListAtManagementGroupScopeNextOptionalParams\n  extends msRest.RequestOptionsBase {\n  /**\n   * The filter to apply on the operation. For example, you can use $filter=provisioningState eq\n   * '{state}'.\n   */\n  filter?: string;\n  /**\n   * The number of results to get. If null is passed, returns all deployments.\n   */\n  top?: number;\n}\n\n/**\n * Optional Parameters.\n */\nexport interface DeploymentsListAtSubscriptionScopeNextOptionalParams\n  extends msRest.RequestOptionsBase {\n  /**\n   * The filter to apply on the operation. For example, you can use $filter=provisioningState eq\n   * '{state}'.\n   */\n  filter?: string;\n  /**\n   * The number of results to get. If null is passed, returns all deployments.\n   */\n  top?: number;\n}\n\n/**\n * Optional Parameters.\n */\nexport interface DeploymentsListByResourceGroupNextOptionalParams\n  extends msRest.RequestOptionsBase {\n  /**\n   * The filter to apply on the operation. For example, you can use $filter=provisioningState eq\n   * '{state}'.\n   */\n  filter?: string;\n  /**\n   * The number of results to get. If null is passed, returns all deployments.\n   */\n  top?: number;\n}\n\n/**\n * Optional Parameters.\n */\nexport interface ProvidersListOptionalParams extends msRest.RequestOptionsBase {\n  /**\n   * The number of results to return. If null is passed returns all deployments.\n   */\n  top?: number;\n  /**\n   * The properties to include in the results. For example, use &$expand=metadata in the query\n   * string to retrieve resource provider metadata. To include property aliases in response, use\n   * $expand=resourceTypes/aliases.\n   */\n  expand?: string;\n}\n\n/**\n * Optional Parameters.\n */\nexport interface ProvidersListAtTenantScopeOptionalParams extends msRest.RequestOptionsBase {\n  /**\n   * The number of results to return. If null is passed returns all providers.\n   */\n  top?: number;\n  /**\n   * The properties to include in the results. For example, use &$expand=metadata in the query\n   * string to retrieve resource provider metadata. To include property aliases in response, use\n   * $expand=resourceTypes/aliases.\n   */\n  expand?: string;\n}\n\n/**\n * Optional Parameters.\n */\nexport interface ProvidersGetOptionalParams extends msRest.RequestOptionsBase {\n  /**\n   * The $expand query parameter. For example, to include property aliases in response, use\n   * $expand=resourceTypes/aliases.\n   */\n  expand?: string;\n}\n\n/**\n * Optional Parameters.\n */\nexport interface ProvidersGetAtTenantScopeOptionalParams extends msRest.RequestOptionsBase {\n  /**\n   * The $expand query parameter. For example, to include property aliases in response, use\n   * $expand=resourceTypes/aliases.\n   */\n  expand?: string;\n}\n\n/**\n * Optional Parameters.\n */\nexport interface ProvidersListNextOptionalParams extends msRest.RequestOptionsBase {\n  /**\n   * The number of results to return. If null is passed returns all deployments.\n   */\n  top?: number;\n  /**\n   * The properties to include in the results. For example, use &$expand=metadata in the query\n   * string to retrieve resource provider metadata. To include property aliases in response, use\n   * $expand=resourceTypes/aliases.\n   */\n  expand?: string;\n}\n\n/**\n * Optional Parameters.\n */\nexport interface ProvidersListAtTenantScopeNextOptionalParams extends msRest.RequestOptionsBase {\n  /**\n   * The number of results to return. If null is passed returns all providers.\n   */\n  top?: number;\n  /**\n   * The properties to include in the results. For example, use &$expand=metadata in the query\n   * string to retrieve resource provider metadata. To include property aliases in response, use\n   * $expand=resourceTypes/aliases.\n   */\n  expand?: string;\n}\n\n/**\n * Optional Parameters.\n */\nexport interface ProviderResourceTypesListOptionalParams extends msRest.RequestOptionsBase {\n  /**\n   * The $expand query parameter. For example, to include property aliases in response, use\n   * $expand=resourceTypes/aliases.\n   */\n  expand?: string;\n}\n\n/**\n * Optional Parameters.\n */\nexport interface ResourcesListByResourceGroupOptionalParams extends msRest.RequestOptionsBase {\n  /**\n   * The filter to apply on the operation.<br><br>The properties you can use for eq (equals) or ne\n   * (not equals) are: location, resourceType, name, resourceGroup, identity, identity/principalId,\n   * plan, plan/publisher, plan/product, plan/name, plan/version, and\n   * plan/promotionCode.<br><br>For example, to filter by a resource type, use:\n   * $filter=resourceType eq 'Microsoft.Network/virtualNetworks'<br><br>You can use\n   * substringof(value, property) in the filter. The properties you can use for substring are: name\n   * and resourceGroup.<br><br>For example, to get all resources with 'demo' anywhere in the name,\n   * use: $filter=substringof('demo', name)<br><br>You can link more than one substringof together\n   * by adding and/or operators.<br><br>You can filter by tag names and values. For example, to\n   * filter for a tag name and value, use $filter=tagName eq 'tag1' and tagValue eq 'Value1'. When\n   * you filter by a tag name and value, the tags for each resource are not returned in the\n   * results.<br><br>You can use some properties together when filtering. The combinations you can\n   * use are: substringof and/or resourceType, plan and plan/publisher and plan/name, identity and\n   * identity/principalId.\n   */\n  filter?: string;\n  /**\n   * Comma-separated list of additional properties to be included in the response. Valid values\n   * include `createdTime`, `changedTime` and `provisioningState`. For example,\n   * `$expand=createdTime,changedTime`.\n   */\n  expand?: string;\n  /**\n   * The number of results to return. If null is passed, returns all resources.\n   */\n  top?: number;\n}\n\n/**\n * Optional Parameters.\n */\nexport interface ResourcesListOptionalParams extends msRest.RequestOptionsBase {\n  /**\n   * The filter to apply on the operation.<br><br>The properties you can use for eq (equals) or ne\n   * (not equals) are: location, resourceType, name, resourceGroup, identity, identity/principalId,\n   * plan, plan/publisher, plan/product, plan/name, plan/version, and\n   * plan/promotionCode.<br><br>For example, to filter by a resource type, use:\n   * $filter=resourceType eq 'Microsoft.Network/virtualNetworks'<br><br>You can use\n   * substringof(value, property) in the filter. The properties you can use for substring are: name\n   * and resourceGroup.<br><br>For example, to get all resources with 'demo' anywhere in the name,\n   * use: $filter=substringof('demo', name)<br><br>You can link more than one substringof together\n   * by adding and/or operators.<br><br>You can filter by tag names and values. For example, to\n   * filter for a tag name and value, use $filter=tagName eq 'tag1' and tagValue eq 'Value1'. When\n   * you filter by a tag name and value, the tags for each resource are not returned in the\n   * results.<br><br>You can use some properties together when filtering. The combinations you can\n   * use are: substringof and/or resourceType, plan and plan/publisher and plan/name, identity and\n   * identity/principalId.\n   */\n  filter?: string;\n  /**\n   * Comma-separated list of additional properties to be included in the response. Valid values\n   * include `createdTime`, `changedTime` and `provisioningState`. For example,\n   * `$expand=createdTime,changedTime`.\n   */\n  expand?: string;\n  /**\n   * The number of results to return. If null is passed, returns all resource groups.\n   */\n  top?: number;\n}\n\n/**\n * Optional Parameters.\n */\nexport interface ResourcesListByResourceGroupNextOptionalParams extends msRest.RequestOptionsBase {\n  /**\n   * The filter to apply on the operation.<br><br>The properties you can use for eq (equals) or ne\n   * (not equals) are: location, resourceType, name, resourceGroup, identity, identity/principalId,\n   * plan, plan/publisher, plan/product, plan/name, plan/version, and\n   * plan/promotionCode.<br><br>For example, to filter by a resource type, use:\n   * $filter=resourceType eq 'Microsoft.Network/virtualNetworks'<br><br>You can use\n   * substringof(value, property) in the filter. The properties you can use for substring are: name\n   * and resourceGroup.<br><br>For example, to get all resources with 'demo' anywhere in the name,\n   * use: $filter=substringof('demo', name)<br><br>You can link more than one substringof together\n   * by adding and/or operators.<br><br>You can filter by tag names and values. For example, to\n   * filter for a tag name and value, use $filter=tagName eq 'tag1' and tagValue eq 'Value1'. When\n   * you filter by a tag name and value, the tags for each resource are not returned in the\n   * results.<br><br>You can use some properties together when filtering. The combinations you can\n   * use are: substringof and/or resourceType, plan and plan/publisher and plan/name, identity and\n   * identity/principalId.\n   */\n  filter?: string;\n  /**\n   * Comma-separated list of additional properties to be included in the response. Valid values\n   * include `createdTime`, `changedTime` and `provisioningState`. For example,\n   * `$expand=createdTime,changedTime`.\n   */\n  expand?: string;\n  /**\n   * The number of results to return. If null is passed, returns all resources.\n   */\n  top?: number;\n}\n\n/**\n * Optional Parameters.\n */\nexport interface ResourcesListNextOptionalParams extends msRest.RequestOptionsBase {\n  /**\n   * The filter to apply on the operation.<br><br>The properties you can use for eq (equals) or ne\n   * (not equals) are: location, resourceType, name, resourceGroup, identity, identity/principalId,\n   * plan, plan/publisher, plan/product, plan/name, plan/version, and\n   * plan/promotionCode.<br><br>For example, to filter by a resource type, use:\n   * $filter=resourceType eq 'Microsoft.Network/virtualNetworks'<br><br>You can use\n   * substringof(value, property) in the filter. The properties you can use for substring are: name\n   * and resourceGroup.<br><br>For example, to get all resources with 'demo' anywhere in the name,\n   * use: $filter=substringof('demo', name)<br><br>You can link more than one substringof together\n   * by adding and/or operators.<br><br>You can filter by tag names and values. For example, to\n   * filter for a tag name and value, use $filter=tagName eq 'tag1' and tagValue eq 'Value1'. When\n   * you filter by a tag name and value, the tags for each resource are not returned in the\n   * results.<br><br>You can use some properties together when filtering. The combinations you can\n   * use are: substringof and/or resourceType, plan and plan/publisher and plan/name, identity and\n   * identity/principalId.\n   */\n  filter?: string;\n  /**\n   * Comma-separated list of additional properties to be included in the response. Valid values\n   * include `createdTime`, `changedTime` and `provisioningState`. For example,\n   * `$expand=createdTime,changedTime`.\n   */\n  expand?: string;\n  /**\n   * The number of results to return. If null is passed, returns all resource groups.\n   */\n  top?: number;\n}\n\n/**\n * Optional Parameters.\n */\nexport interface ResourceGroupsListOptionalParams extends msRest.RequestOptionsBase {\n  /**\n   * The filter to apply on the operation.<br><br>You can filter by tag names and values. For\n   * example, to filter for a tag name and value, use $filter=tagName eq 'tag1' and tagValue eq\n   * 'Value1'\n   */\n  filter?: string;\n  /**\n   * The number of results to return. If null is passed, returns all resource groups.\n   */\n  top?: number;\n}\n\n/**\n * Optional Parameters.\n */\nexport interface ResourceGroupsListNextOptionalParams extends msRest.RequestOptionsBase {\n  /**\n   * The filter to apply on the operation.<br><br>You can filter by tag names and values. For\n   * example, to filter for a tag name and value, use $filter=tagName eq 'tag1' and tagValue eq\n   * 'Value1'\n   */\n  filter?: string;\n  /**\n   * The number of results to return. If null is passed, returns all resource groups.\n   */\n  top?: number;\n}\n\n/**\n * Optional Parameters.\n */\nexport interface DeploymentOperationsListAtScopeOptionalParams extends msRest.RequestOptionsBase {\n  /**\n   * The number of results to return.\n   */\n  top?: number;\n}\n\n/**\n * Optional Parameters.\n */\nexport interface DeploymentOperationsListAtTenantScopeOptionalParams\n  extends msRest.RequestOptionsBase {\n  /**\n   * The number of results to return.\n   */\n  top?: number;\n}\n\n/**\n * Optional Parameters.\n */\nexport interface DeploymentOperationsListAtManagementGroupScopeOptionalParams\n  extends msRest.RequestOptionsBase {\n  /**\n   * The number of results to return.\n   */\n  top?: number;\n}\n\n/**\n * Optional Parameters.\n */\nexport interface DeploymentOperationsListAtSubscriptionScopeOptionalParams\n  extends msRest.RequestOptionsBase {\n  /**\n   * The number of results to return.\n   */\n  top?: number;\n}\n\n/**\n * Optional Parameters.\n */\nexport interface DeploymentOperationsListOptionalParams extends msRest.RequestOptionsBase {\n  /**\n   * The number of results to return.\n   */\n  top?: number;\n}\n\n/**\n * Optional Parameters.\n */\nexport interface DeploymentOperationsListAtScopeNextOptionalParams\n  extends msRest.RequestOptionsBase {\n  /**\n   * The number of results to return.\n   */\n  top?: number;\n}\n\n/**\n * Optional Parameters.\n */\nexport interface DeploymentOperationsListAtTenantScopeNextOptionalParams\n  extends msRest.RequestOptionsBase {\n  /**\n   * The number of results to return.\n   */\n  top?: number;\n}\n\n/**\n * Optional Parameters.\n */\nexport interface DeploymentOperationsListAtManagementGroupScopeNextOptionalParams\n  extends msRest.RequestOptionsBase {\n  /**\n   * The number of results to return.\n   */\n  top?: number;\n}\n\n/**\n * Optional Parameters.\n */\nexport interface DeploymentOperationsListAtSubscriptionScopeNextOptionalParams\n  extends msRest.RequestOptionsBase {\n  /**\n   * The number of results to return.\n   */\n  top?: number;\n}\n\n/**\n * Optional Parameters.\n */\nexport interface DeploymentOperationsListNextOptionalParams extends msRest.RequestOptionsBase {\n  /**\n   * The number of results to return.\n   */\n  top?: number;\n}\n\n/**\n * An interface representing ResourceManagementClientOptions.\n */\nexport interface ResourceManagementClientOptions extends AzureServiceClientOptions {\n  baseUri?: string;\n}\n\n/**\n * Defines headers for WhatIfAtTenantScope operation.\n */\nexport interface DeploymentsWhatIfAtTenantScopeHeaders {\n  /**\n   * URL to get status of this long-running operation.\n   */\n  location: string;\n  /**\n   * Number of seconds to wait before polling for status.\n   */\n  retryAfter: string;\n}\n\n/**\n * Defines headers for WhatIfAtManagementGroupScope operation.\n */\nexport interface DeploymentsWhatIfAtManagementGroupScopeHeaders {\n  /**\n   * URL to get status of this long-running operation.\n   */\n  location: string;\n  /**\n   * Number of seconds to wait before polling for status.\n   */\n  retryAfter: string;\n}\n\n/**\n * Defines headers for WhatIfAtSubscriptionScope operation.\n */\nexport interface DeploymentsWhatIfAtSubscriptionScopeHeaders {\n  /**\n   * URL to get status of this long-running operation.\n   */\n  location: string;\n  /**\n   * Number of seconds to wait before polling for status.\n   */\n  retryAfter: string;\n}\n\n/**\n * Defines headers for WhatIf operation.\n */\nexport interface DeploymentsWhatIfHeaders {\n  /**\n   * URL to get status of this long-running operation.\n   */\n  location: string;\n  /**\n   * Number of seconds to wait before polling for status.\n   */\n  retryAfter: string;\n}\n\n/**\n * @interface\n * Result of the request to list Microsoft.Resources operations. It contains a list of operations\n * and a URL link to get the next set of results.\n * @extends Array<Operation>\n */\nexport interface OperationListResult extends Array<Operation> {\n  /**\n   * URL to get the next set of operation list results if there are any.\n   */\n  nextLink?: string;\n}\n\n/**\n * @interface\n * List of deployments.\n * @extends Array<DeploymentExtended>\n */\nexport interface DeploymentListResult extends Array<DeploymentExtended> {\n  /**\n   * The URL to use for getting the next set of results.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly nextLink?: string;\n}\n\n/**\n * @interface\n * List of resource providers.\n * @extends Array<Provider>\n */\nexport interface ProviderListResult extends Array<Provider> {\n  /**\n   * The URL to use for getting the next set of results.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly nextLink?: string;\n}\n\n/**\n * @interface\n * List of resource groups.\n * @extends Array<GenericResourceExpanded>\n */\nexport interface ResourceListResult extends Array<GenericResourceExpanded> {\n  /**\n   * The URL to use for getting the next set of results.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly nextLink?: string;\n}\n\n/**\n * @interface\n * List of resource groups.\n * @extends Array<ResourceGroup>\n */\nexport interface ResourceGroupListResult extends Array<ResourceGroup> {\n  /**\n   * The URL to use for getting the next set of results.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly nextLink?: string;\n}\n\n/**\n * @interface\n * List of subscription tags.\n * @extends Array<TagDetails>\n */\nexport interface TagsListResult extends Array<TagDetails> {\n  /**\n   * The URL to use for getting the next set of results.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly nextLink?: string;\n}\n\n/**\n * @interface\n * List of deployment operations.\n * @extends Array<DeploymentOperation>\n */\nexport interface DeploymentOperationsListResult extends Array<DeploymentOperation> {\n  /**\n   * The URL to use for getting the next set of results.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly nextLink?: string;\n}\n\n/**\n * Defines values for DeploymentMode.\n * Possible values include: 'Incremental', 'Complete'\n * @readonly\n * @enum {string}\n */\nexport type DeploymentMode = \"Incremental\" | \"Complete\";\n\n/**\n * Defines values for OnErrorDeploymentType.\n * Possible values include: 'LastSuccessful', 'SpecificDeployment'\n * @readonly\n * @enum {string}\n */\nexport type OnErrorDeploymentType = \"LastSuccessful\" | \"SpecificDeployment\";\n\n/**\n * Defines values for ExpressionEvaluationOptionsScopeType.\n * Possible values include: 'NotSpecified', 'Outer', 'Inner'\n * @readonly\n * @enum {string}\n */\nexport type ExpressionEvaluationOptionsScopeType = \"NotSpecified\" | \"Outer\" | \"Inner\";\n\n/**\n * Defines values for WhatIfResultFormat.\n * Possible values include: 'ResourceIdOnly', 'FullResourcePayloads'\n * @readonly\n * @enum {string}\n */\nexport type WhatIfResultFormat = \"ResourceIdOnly\" | \"FullResourcePayloads\";\n\n/**\n * Defines values for AliasPathTokenType.\n * Possible values include: 'NotSpecified', 'Any', 'String', 'Object', 'Array', 'Integer',\n * 'Number', 'Boolean'\n * @readonly\n * @enum {string}\n */\nexport type AliasPathTokenType =\n  | \"NotSpecified\"\n  | \"Any\"\n  | \"String\"\n  | \"Object\"\n  | \"Array\"\n  | \"Integer\"\n  | \"Number\"\n  | \"Boolean\";\n\n/**\n * Defines values for AliasPathAttributes.\n * Possible values include: 'None', 'Modifiable'\n * @readonly\n * @enum {string}\n */\nexport type AliasPathAttributes = \"None\" | \"Modifiable\";\n\n/**\n * Defines values for AliasPatternType.\n * Possible values include: 'NotSpecified', 'Extract'\n * @readonly\n * @enum {string}\n */\nexport type AliasPatternType = \"NotSpecified\" | \"Extract\";\n\n/**\n * Defines values for AliasType.\n * Possible values include: 'NotSpecified', 'PlainText', 'Mask'\n * @readonly\n * @enum {string}\n */\nexport type AliasType = \"NotSpecified\" | \"PlainText\" | \"Mask\";\n\n/**\n * Defines values for ProvisioningState.\n * Possible values include: 'NotSpecified', 'Accepted', 'Running', 'Ready', 'Creating', 'Created',\n * 'Deleting', 'Deleted', 'Canceled', 'Failed', 'Succeeded', 'Updating'\n * @readonly\n * @enum {string}\n */\nexport type ProvisioningState =\n  | \"NotSpecified\"\n  | \"Accepted\"\n  | \"Running\"\n  | \"Ready\"\n  | \"Creating\"\n  | \"Created\"\n  | \"Deleting\"\n  | \"Deleted\"\n  | \"Canceled\"\n  | \"Failed\"\n  | \"Succeeded\"\n  | \"Updating\";\n\n/**\n * Defines values for ResourceIdentityType.\n * Possible values include: 'SystemAssigned', 'UserAssigned', 'SystemAssigned, UserAssigned',\n * 'None'\n * @readonly\n * @enum {string}\n */\nexport type ResourceIdentityType =\n  | \"SystemAssigned\"\n  | \"UserAssigned\"\n  | \"SystemAssigned, UserAssigned\"\n  | \"None\";\n\n/**\n * Defines values for ExtendedLocationType.\n * Possible values include: 'EdgeZone'\n * @readonly\n * @enum {string}\n */\nexport type ExtendedLocationType = \"EdgeZone\";\n\n/**\n * Defines values for ProvisioningOperation.\n * Possible values include: 'NotSpecified', 'Create', 'Delete', 'Waiting',\n * 'AzureAsyncOperationWaiting', 'ResourceCacheWaiting', 'Action', 'Read',\n * 'EvaluateDeploymentOutput', 'DeploymentCleanup'\n * @readonly\n * @enum {string}\n */\nexport type ProvisioningOperation =\n  | \"NotSpecified\"\n  | \"Create\"\n  | \"Delete\"\n  | \"Waiting\"\n  | \"AzureAsyncOperationWaiting\"\n  | \"ResourceCacheWaiting\"\n  | \"Action\"\n  | \"Read\"\n  | \"EvaluateDeploymentOutput\"\n  | \"DeploymentCleanup\";\n\n/**\n * Defines values for PropertyChangeType.\n * Possible values include: 'Create', 'Delete', 'Modify', 'Array', 'NoEffect'\n * @readonly\n * @enum {string}\n */\nexport type PropertyChangeType = \"Create\" | \"Delete\" | \"Modify\" | \"Array\" | \"NoEffect\";\n\n/**\n * Defines values for ChangeType.\n * Possible values include: 'Create', 'Delete', 'Ignore', 'Deploy', 'NoChange', 'Modify',\n * 'Unsupported'\n * @readonly\n * @enum {string}\n */\nexport type ChangeType =\n  | \"Create\"\n  | \"Delete\"\n  | \"Ignore\"\n  | \"Deploy\"\n  | \"NoChange\"\n  | \"Modify\"\n  | \"Unsupported\";\n\n/**\n * Defines values for TagsPatchOperation.\n * Possible values include: 'Replace', 'Merge', 'Delete'\n * @readonly\n * @enum {string}\n */\nexport type TagsPatchOperation = \"Replace\" | \"Merge\" | \"Delete\";\n\n/**\n * Contains response data for the list operation.\n */\nexport type OperationsListResponse = OperationListResult & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n    /**\n     * The response body as text (string format)\n     */\n    bodyAsText: string;\n\n    /**\n     * The response body as parsed JSON or XML\n     */\n    parsedBody: OperationListResult;\n  };\n};\n\n/**\n * Contains response data for the listNext operation.\n */\nexport type OperationsListNextResponse = OperationListResult & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n    /**\n     * The response body as text (string format)\n     */\n    bodyAsText: string;\n\n    /**\n     * The response body as parsed JSON or XML\n     */\n    parsedBody: OperationListResult;\n  };\n};\n\n/**\n * Contains response data for the checkExistenceAtScope operation.\n */\nexport type DeploymentsCheckExistenceAtScopeResponse = {\n  /**\n   * The parsed response body.\n   */\n  body: boolean;\n\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n    /**\n     * The response body as text (string format)\n     */\n    bodyAsText: string;\n\n    /**\n     * The response body as parsed JSON or XML\n     */\n    parsedBody: boolean;\n  };\n};\n\n/**\n * Contains response data for the createOrUpdateAtScope operation.\n */\nexport type DeploymentsCreateOrUpdateAtScopeResponse = DeploymentExtended & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n    /**\n     * The response body as text (string format)\n     */\n    bodyAsText: string;\n\n    /**\n     * The response body as parsed JSON or XML\n     */\n    parsedBody: DeploymentExtended;\n  };\n};\n\n/**\n * Contains response data for the getAtScope operation.\n */\nexport type DeploymentsGetAtScopeResponse = DeploymentExtended & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n    /**\n     * The response body as text (string format)\n     */\n    bodyAsText: string;\n\n    /**\n     * The response body as parsed JSON or XML\n     */\n    parsedBody: DeploymentExtended;\n  };\n};\n\n/**\n * Contains response data for the validateAtScope operation.\n */\nexport type DeploymentsValidateAtScopeResponse = DeploymentValidateResult & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n    /**\n     * The response body as text (string format)\n     */\n    bodyAsText: string;\n\n    /**\n     * The response body as parsed JSON or XML\n     */\n    parsedBody: DeploymentValidateResult;\n  };\n};\n\n/**\n * Contains response data for the exportTemplateAtScope operation.\n */\nexport type DeploymentsExportTemplateAtScopeResponse = DeploymentExportResult & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n    /**\n     * The response body as text (string format)\n     */\n    bodyAsText: string;\n\n    /**\n     * The response body as parsed JSON or XML\n     */\n    parsedBody: DeploymentExportResult;\n  };\n};\n\n/**\n * Contains response data for the listAtScope operation.\n */\nexport type DeploymentsListAtScopeResponse = DeploymentListResult & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n    /**\n     * The response body as text (string format)\n     */\n    bodyAsText: string;\n\n    /**\n     * The response body as parsed JSON or XML\n     */\n    parsedBody: DeploymentListResult;\n  };\n};\n\n/**\n * Contains response data for the checkExistenceAtTenantScope operation.\n */\nexport type DeploymentsCheckExistenceAtTenantScopeResponse = {\n  /**\n   * The parsed response body.\n   */\n  body: boolean;\n\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n    /**\n     * The response body as text (string format)\n     */\n    bodyAsText: string;\n\n    /**\n     * The response body as parsed JSON or XML\n     */\n    parsedBody: boolean;\n  };\n};\n\n/**\n * Contains response data for the createOrUpdateAtTenantScope operation.\n */\nexport type DeploymentsCreateOrUpdateAtTenantScopeResponse = DeploymentExtended & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n    /**\n     * The response body as text (string format)\n     */\n    bodyAsText: string;\n\n    /**\n     * The response body as parsed JSON or XML\n     */\n    parsedBody: DeploymentExtended;\n  };\n};\n\n/**\n * Contains response data for the getAtTenantScope operation.\n */\nexport type DeploymentsGetAtTenantScopeResponse = DeploymentExtended & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n    /**\n     * The response body as text (string format)\n     */\n    bodyAsText: string;\n\n    /**\n     * The response body as parsed JSON or XML\n     */\n    parsedBody: DeploymentExtended;\n  };\n};\n\n/**\n * Contains response data for the validateAtTenantScope operation.\n */\nexport type DeploymentsValidateAtTenantScopeResponse = DeploymentValidateResult & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n    /**\n     * The response body as text (string format)\n     */\n    bodyAsText: string;\n\n    /**\n     * The response body as parsed JSON or XML\n     */\n    parsedBody: DeploymentValidateResult;\n  };\n};\n\n/**\n * Contains response data for the whatIfAtTenantScope operation.\n */\nexport type DeploymentsWhatIfAtTenantScopeResponse = WhatIfOperationResult &\n  DeploymentsWhatIfAtTenantScopeHeaders & {\n    /**\n     * The underlying HTTP response.\n     */\n    _response: msRest.HttpResponse & {\n      /**\n       * The parsed HTTP response headers.\n       */\n      parsedHeaders: DeploymentsWhatIfAtTenantScopeHeaders;\n\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: WhatIfOperationResult;\n    };\n  };\n\n/**\n * Contains response data for the exportTemplateAtTenantScope operation.\n */\nexport type DeploymentsExportTemplateAtTenantScopeResponse = DeploymentExportResult & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n    /**\n     * The response body as text (string format)\n     */\n    bodyAsText: string;\n\n    /**\n     * The response body as parsed JSON or XML\n     */\n    parsedBody: DeploymentExportResult;\n  };\n};\n\n/**\n * Contains response data for the listAtTenantScope operation.\n */\nexport type DeploymentsListAtTenantScopeResponse = DeploymentListResult & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n    /**\n     * The response body as text (string format)\n     */\n    bodyAsText: string;\n\n    /**\n     * The response body as parsed JSON or XML\n     */\n    parsedBody: DeploymentListResult;\n  };\n};\n\n/**\n * Contains response data for the checkExistenceAtManagementGroupScope operation.\n */\nexport type DeploymentsCheckExistenceAtManagementGroupScopeResponse = {\n  /**\n   * The parsed response body.\n   */\n  body: boolean;\n\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n    /**\n     * The response body as text (string format)\n     */\n    bodyAsText: string;\n\n    /**\n     * The response body as parsed JSON or XML\n     */\n    parsedBody: boolean;\n  };\n};\n\n/**\n * Contains response data for the createOrUpdateAtManagementGroupScope operation.\n */\nexport type DeploymentsCreateOrUpdateAtManagementGroupScopeResponse = DeploymentExtended & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n    /**\n     * The response body as text (string format)\n     */\n    bodyAsText: string;\n\n    /**\n     * The response body as parsed JSON or XML\n     */\n    parsedBody: DeploymentExtended;\n  };\n};\n\n/**\n * Contains response data for the getAtManagementGroupScope operation.\n */\nexport type DeploymentsGetAtManagementGroupScopeResponse = DeploymentExtended & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n    /**\n     * The response body as text (string format)\n     */\n    bodyAsText: string;\n\n    /**\n     * The response body as parsed JSON or XML\n     */\n    parsedBody: DeploymentExtended;\n  };\n};\n\n/**\n * Contains response data for the validateAtManagementGroupScope operation.\n */\nexport type DeploymentsValidateAtManagementGroupScopeResponse = DeploymentValidateResult & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n    /**\n     * The response body as text (string format)\n     */\n    bodyAsText: string;\n\n    /**\n     * The response body as parsed JSON or XML\n     */\n    parsedBody: DeploymentValidateResult;\n  };\n};\n\n/**\n * Contains response data for the whatIfAtManagementGroupScope operation.\n */\nexport type DeploymentsWhatIfAtManagementGroupScopeResponse = WhatIfOperationResult &\n  DeploymentsWhatIfAtManagementGroupScopeHeaders & {\n    /**\n     * The underlying HTTP response.\n     */\n    _response: msRest.HttpResponse & {\n      /**\n       * The parsed HTTP response headers.\n       */\n      parsedHeaders: DeploymentsWhatIfAtManagementGroupScopeHeaders;\n\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: WhatIfOperationResult;\n    };\n  };\n\n/**\n * Contains response data for the exportTemplateAtManagementGroupScope operation.\n */\nexport type DeploymentsExportTemplateAtManagementGroupScopeResponse = DeploymentExportResult & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n    /**\n     * The response body as text (string format)\n     */\n    bodyAsText: string;\n\n    /**\n     * The response body as parsed JSON or XML\n     */\n    parsedBody: DeploymentExportResult;\n  };\n};\n\n/**\n * Contains response data for the listAtManagementGroupScope operation.\n */\nexport type DeploymentsListAtManagementGroupScopeResponse = DeploymentListResult & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n    /**\n     * The response body as text (string format)\n     */\n    bodyAsText: string;\n\n    /**\n     * The response body as parsed JSON or XML\n     */\n    parsedBody: DeploymentListResult;\n  };\n};\n\n/**\n * Contains response data for the checkExistenceAtSubscriptionScope operation.\n */\nexport type DeploymentsCheckExistenceAtSubscriptionScopeResponse = {\n  /**\n   * The parsed response body.\n   */\n  body: boolean;\n\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n    /**\n     * The response body as text (string format)\n     */\n    bodyAsText: string;\n\n    /**\n     * The response body as parsed JSON or XML\n     */\n    parsedBody: boolean;\n  };\n};\n\n/**\n * Contains response data for the createOrUpdateAtSubscriptionScope operation.\n */\nexport type DeploymentsCreateOrUpdateAtSubscriptionScopeResponse = DeploymentExtended & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n    /**\n     * The response body as text (string format)\n     */\n    bodyAsText: string;\n\n    /**\n     * The response body as parsed JSON or XML\n     */\n    parsedBody: DeploymentExtended;\n  };\n};\n\n/**\n * Contains response data for the getAtSubscriptionScope operation.\n */\nexport type DeploymentsGetAtSubscriptionScopeResponse = DeploymentExtended & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n    /**\n     * The response body as text (string format)\n     */\n    bodyAsText: string;\n\n    /**\n     * The response body as parsed JSON or XML\n     */\n    parsedBody: DeploymentExtended;\n  };\n};\n\n/**\n * Contains response data for the validateAtSubscriptionScope operation.\n */\nexport type DeploymentsValidateAtSubscriptionScopeResponse = DeploymentValidateResult & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n    /**\n     * The response body as text (string format)\n     */\n    bodyAsText: string;\n\n    /**\n     * The response body as parsed JSON or XML\n     */\n    parsedBody: DeploymentValidateResult;\n  };\n};\n\n/**\n * Contains response data for the whatIfAtSubscriptionScope operation.\n */\nexport type DeploymentsWhatIfAtSubscriptionScopeResponse = WhatIfOperationResult &\n  DeploymentsWhatIfAtSubscriptionScopeHeaders & {\n    /**\n     * The underlying HTTP response.\n     */\n    _response: msRest.HttpResponse & {\n      /**\n       * The parsed HTTP response headers.\n       */\n      parsedHeaders: DeploymentsWhatIfAtSubscriptionScopeHeaders;\n\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: WhatIfOperationResult;\n    };\n  };\n\n/**\n * Contains response data for the exportTemplateAtSubscriptionScope operation.\n */\nexport type DeploymentsExportTemplateAtSubscriptionScopeResponse = DeploymentExportResult & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n    /**\n     * The response body as text (string format)\n     */\n    bodyAsText: string;\n\n    /**\n     * The response body as parsed JSON or XML\n     */\n    parsedBody: DeploymentExportResult;\n  };\n};\n\n/**\n * Contains response data for the listAtSubscriptionScope operation.\n */\nexport type DeploymentsListAtSubscriptionScopeResponse = DeploymentListResult & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n    /**\n     * The response body as text (string format)\n     */\n    bodyAsText: string;\n\n    /**\n     * The response body as parsed JSON or XML\n     */\n    parsedBody: DeploymentListResult;\n  };\n};\n\n/**\n * Contains response data for the checkExistence operation.\n */\nexport type DeploymentsCheckExistenceResponse = {\n  /**\n   * The parsed response body.\n   */\n  body: boolean;\n\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n    /**\n     * The response body as text (string format)\n     */\n    bodyAsText: string;\n\n    /**\n     * The response body as parsed JSON or XML\n     */\n    parsedBody: boolean;\n  };\n};\n\n/**\n * Contains response data for the createOrUpdate operation.\n */\nexport type DeploymentsCreateOrUpdateResponse = DeploymentExtended & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n    /**\n     * The response body as text (string format)\n     */\n    bodyAsText: string;\n\n    /**\n     * The response body as parsed JSON or XML\n     */\n    parsedBody: DeploymentExtended;\n  };\n};\n\n/**\n * Contains response data for the get operation.\n */\nexport type DeploymentsGetResponse = DeploymentExtended & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n    /**\n     * The response body as text (string format)\n     */\n    bodyAsText: string;\n\n    /**\n     * The response body as parsed JSON or XML\n     */\n    parsedBody: DeploymentExtended;\n  };\n};\n\n/**\n * Contains response data for the validate operation.\n */\nexport type DeploymentsValidateResponse = DeploymentValidateResult & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n    /**\n     * The response body as text (string format)\n     */\n    bodyAsText: string;\n\n    /**\n     * The response body as parsed JSON or XML\n     */\n    parsedBody: DeploymentValidateResult;\n  };\n};\n\n/**\n * Contains response data for the whatIf operation.\n */\nexport type DeploymentsWhatIfResponse = WhatIfOperationResult &\n  DeploymentsWhatIfHeaders & {\n    /**\n     * The underlying HTTP response.\n     */\n    _response: msRest.HttpResponse & {\n      /**\n       * The parsed HTTP response headers.\n       */\n      parsedHeaders: DeploymentsWhatIfHeaders;\n\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: WhatIfOperationResult;\n    };\n  };\n\n/**\n * Contains response data for the exportTemplate operation.\n */\nexport type DeploymentsExportTemplateResponse = DeploymentExportResult & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n    /**\n     * The response body as text (string format)\n     */\n    bodyAsText: string;\n\n    /**\n     * The response body as parsed JSON or XML\n     */\n    parsedBody: DeploymentExportResult;\n  };\n};\n\n/**\n * Contains response data for the listByResourceGroup operation.\n */\nexport type DeploymentsListByResourceGroupResponse = DeploymentListResult & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n    /**\n     * The response body as text (string format)\n     */\n    bodyAsText: string;\n\n    /**\n     * The response body as parsed JSON or XML\n     */\n    parsedBody: DeploymentListResult;\n  };\n};\n\n/**\n * Contains response data for the calculateTemplateHash operation.\n */\nexport type DeploymentsCalculateTemplateHashResponse = TemplateHashResult & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n    /**\n     * The response body as text (string format)\n     */\n    bodyAsText: string;\n\n    /**\n     * The response body as parsed JSON or XML\n     */\n    parsedBody: TemplateHashResult;\n  };\n};\n\n/**\n * Contains response data for the beginCreateOrUpdateAtScope operation.\n */\nexport type DeploymentsBeginCreateOrUpdateAtScopeResponse = DeploymentExtended & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n    /**\n     * The response body as text (string format)\n     */\n    bodyAsText: string;\n\n    /**\n     * The response body as parsed JSON or XML\n     */\n    parsedBody: DeploymentExtended;\n  };\n};\n\n/**\n * Contains response data for the beginValidateAtScope operation.\n */\nexport type DeploymentsBeginValidateAtScopeResponse = DeploymentValidateResult & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n    /**\n     * The response body as text (string format)\n     */\n    bodyAsText: string;\n\n    /**\n     * The response body as parsed JSON or XML\n     */\n    parsedBody: DeploymentValidateResult;\n  };\n};\n\n/**\n * Contains response data for the beginCreateOrUpdateAtTenantScope operation.\n */\nexport type DeploymentsBeginCreateOrUpdateAtTenantScopeResponse = DeploymentExtended & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n    /**\n     * The response body as text (string format)\n     */\n    bodyAsText: string;\n\n    /**\n     * The response body as parsed JSON or XML\n     */\n    parsedBody: DeploymentExtended;\n  };\n};\n\n/**\n * Contains response data for the beginValidateAtTenantScope operation.\n */\nexport type DeploymentsBeginValidateAtTenantScopeResponse = DeploymentValidateResult & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n    /**\n     * The response body as text (string format)\n     */\n    bodyAsText: string;\n\n    /**\n     * The response body as parsed JSON or XML\n     */\n    parsedBody: DeploymentValidateResult;\n  };\n};\n\n/**\n * Contains response data for the beginCreateOrUpdateAtManagementGroupScope operation.\n */\nexport type DeploymentsBeginCreateOrUpdateAtManagementGroupScopeResponse = DeploymentExtended & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n    /**\n     * The response body as text (string format)\n     */\n    bodyAsText: string;\n\n    /**\n     * The response body as parsed JSON or XML\n     */\n    parsedBody: DeploymentExtended;\n  };\n};\n\n/**\n * Contains response data for the beginValidateAtManagementGroupScope operation.\n */\nexport type DeploymentsBeginValidateAtManagementGroupScopeResponse = DeploymentValidateResult & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n    /**\n     * The response body as text (string format)\n     */\n    bodyAsText: string;\n\n    /**\n     * The response body as parsed JSON or XML\n     */\n    parsedBody: DeploymentValidateResult;\n  };\n};\n\n/**\n * Contains response data for the beginCreateOrUpdateAtSubscriptionScope operation.\n */\nexport type DeploymentsBeginCreateOrUpdateAtSubscriptionScopeResponse = DeploymentExtended & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n    /**\n     * The response body as text (string format)\n     */\n    bodyAsText: string;\n\n    /**\n     * The response body as parsed JSON or XML\n     */\n    parsedBody: DeploymentExtended;\n  };\n};\n\n/**\n * Contains response data for the beginValidateAtSubscriptionScope operation.\n */\nexport type DeploymentsBeginValidateAtSubscriptionScopeResponse = DeploymentValidateResult & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n    /**\n     * The response body as text (string format)\n     */\n    bodyAsText: string;\n\n    /**\n     * The response body as parsed JSON or XML\n     */\n    parsedBody: DeploymentValidateResult;\n  };\n};\n\n/**\n * Contains response data for the beginCreateOrUpdate operation.\n */\nexport type DeploymentsBeginCreateOrUpdateResponse = DeploymentExtended & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n    /**\n     * The response body as text (string format)\n     */\n    bodyAsText: string;\n\n    /**\n     * The response body as parsed JSON or XML\n     */\n    parsedBody: DeploymentExtended;\n  };\n};\n\n/**\n * Contains response data for the beginValidate operation.\n */\nexport type DeploymentsBeginValidateResponse = DeploymentValidateResult & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n    /**\n     * The response body as text (string format)\n     */\n    bodyAsText: string;\n\n    /**\n     * The response body as parsed JSON or XML\n     */\n    parsedBody: DeploymentValidateResult;\n  };\n};\n\n/**\n * Contains response data for the listAtScopeNext operation.\n */\nexport type DeploymentsListAtScopeNextResponse = DeploymentListResult & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n    /**\n     * The response body as text (string format)\n     */\n    bodyAsText: string;\n\n    /**\n     * The response body as parsed JSON or XML\n     */\n    parsedBody: DeploymentListResult;\n  };\n};\n\n/**\n * Contains response data for the listAtTenantScopeNext operation.\n */\nexport type DeploymentsListAtTenantScopeNextResponse = DeploymentListResult & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n    /**\n     * The response body as text (string format)\n     */\n    bodyAsText: string;\n\n    /**\n     * The response body as parsed JSON or XML\n     */\n    parsedBody: DeploymentListResult;\n  };\n};\n\n/**\n * Contains response data for the listAtManagementGroupScopeNext operation.\n */\nexport type DeploymentsListAtManagementGroupScopeNextResponse = DeploymentListResult & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n    /**\n     * The response body as text (string format)\n     */\n    bodyAsText: string;\n\n    /**\n     * The response body as parsed JSON or XML\n     */\n    parsedBody: DeploymentListResult;\n  };\n};\n\n/**\n * Contains response data for the listAtSubscriptionScopeNext operation.\n */\nexport type DeploymentsListAtSubscriptionScopeNextResponse = DeploymentListResult & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n    /**\n     * The response body as text (string format)\n     */\n    bodyAsText: string;\n\n    /**\n     * The response body as parsed JSON or XML\n     */\n    parsedBody: DeploymentListResult;\n  };\n};\n\n/**\n * Contains response data for the listByResourceGroupNext operation.\n */\nexport type DeploymentsListByResourceGroupNextResponse = DeploymentListResult & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n    /**\n     * The response body as text (string format)\n     */\n    bodyAsText: string;\n\n    /**\n     * The response body as parsed JSON or XML\n     */\n    parsedBody: DeploymentListResult;\n  };\n};\n\n/**\n * Contains response data for the unregister operation.\n */\nexport type ProvidersUnregisterResponse = Provider & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n    /**\n     * The response body as text (string format)\n     */\n    bodyAsText: string;\n\n    /**\n     * The response body as parsed JSON or XML\n     */\n    parsedBody: Provider;\n  };\n};\n\n/**\n * Contains response data for the register operation.\n */\nexport type ProvidersRegisterResponse = Provider & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n    /**\n     * The response body as text (string format)\n     */\n    bodyAsText: string;\n\n    /**\n     * The response body as parsed JSON or XML\n     */\n    parsedBody: Provider;\n  };\n};\n\n/**\n * Contains response data for the list operation.\n */\nexport type ProvidersListResponse = ProviderListResult & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n    /**\n     * The response body as text (string format)\n     */\n    bodyAsText: string;\n\n    /**\n     * The response body as parsed JSON or XML\n     */\n    parsedBody: ProviderListResult;\n  };\n};\n\n/**\n * Contains response data for the listAtTenantScope operation.\n */\nexport type ProvidersListAtTenantScopeResponse = ProviderListResult & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n    /**\n     * The response body as text (string format)\n     */\n    bodyAsText: string;\n\n    /**\n     * The response body as parsed JSON or XML\n     */\n    parsedBody: ProviderListResult;\n  };\n};\n\n/**\n * Contains response data for the get operation.\n */\nexport type ProvidersGetResponse = Provider & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n    /**\n     * The response body as text (string format)\n     */\n    bodyAsText: string;\n\n    /**\n     * The response body as parsed JSON or XML\n     */\n    parsedBody: Provider;\n  };\n};\n\n/**\n * Contains response data for the getAtTenantScope operation.\n */\nexport type ProvidersGetAtTenantScopeResponse = Provider & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n    /**\n     * The response body as text (string format)\n     */\n    bodyAsText: string;\n\n    /**\n     * The response body as parsed JSON or XML\n     */\n    parsedBody: Provider;\n  };\n};\n\n/**\n * Contains response data for the listNext operation.\n */\nexport type ProvidersListNextResponse = ProviderListResult & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n    /**\n     * The response body as text (string format)\n     */\n    bodyAsText: string;\n\n    /**\n     * The response body as parsed JSON or XML\n     */\n    parsedBody: ProviderListResult;\n  };\n};\n\n/**\n * Contains response data for the listAtTenantScopeNext operation.\n */\nexport type ProvidersListAtTenantScopeNextResponse = ProviderListResult & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n    /**\n     * The response body as text (string format)\n     */\n    bodyAsText: string;\n\n    /**\n     * The response body as parsed JSON or XML\n     */\n    parsedBody: ProviderListResult;\n  };\n};\n\n/**\n * Contains response data for the list operation.\n */\nexport type ProviderResourceTypesListResponse = ProviderResourceTypeListResult & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n    /**\n     * The response body as text (string format)\n     */\n    bodyAsText: string;\n\n    /**\n     * The response body as parsed JSON or XML\n     */\n    parsedBody: ProviderResourceTypeListResult;\n  };\n};\n\n/**\n * Contains response data for the listByResourceGroup operation.\n */\nexport type ResourcesListByResourceGroupResponse = ResourceListResult & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n    /**\n     * The response body as text (string format)\n     */\n    bodyAsText: string;\n\n    /**\n     * The response body as parsed JSON or XML\n     */\n    parsedBody: ResourceListResult;\n  };\n};\n\n/**\n * Contains response data for the list operation.\n */\nexport type ResourcesListResponse = ResourceListResult & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n    /**\n     * The response body as text (string format)\n     */\n    bodyAsText: string;\n\n    /**\n     * The response body as parsed JSON or XML\n     */\n    parsedBody: ResourceListResult;\n  };\n};\n\n/**\n * Contains response data for the checkExistence operation.\n */\nexport type ResourcesCheckExistenceResponse = {\n  /**\n   * The parsed response body.\n   */\n  body: boolean;\n\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n    /**\n     * The response body as text (string format)\n     */\n    bodyAsText: string;\n\n    /**\n     * The response body as parsed JSON or XML\n     */\n    parsedBody: boolean;\n  };\n};\n\n/**\n * Contains response data for the createOrUpdate operation.\n */\nexport type ResourcesCreateOrUpdateResponse = GenericResource & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n    /**\n     * The response body as text (string format)\n     */\n    bodyAsText: string;\n\n    /**\n     * The response body as parsed JSON or XML\n     */\n    parsedBody: GenericResource;\n  };\n};\n\n/**\n * Contains response data for the update operation.\n */\nexport type ResourcesUpdateResponse = GenericResource & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n    /**\n     * The response body as text (string format)\n     */\n    bodyAsText: string;\n\n    /**\n     * The response body as parsed JSON or XML\n     */\n    parsedBody: GenericResource;\n  };\n};\n\n/**\n * Contains response data for the get operation.\n */\nexport type ResourcesGetResponse = GenericResource & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n    /**\n     * The response body as text (string format)\n     */\n    bodyAsText: string;\n\n    /**\n     * The response body as parsed JSON or XML\n     */\n    parsedBody: GenericResource;\n  };\n};\n\n/**\n * Contains response data for the checkExistenceById operation.\n */\nexport type ResourcesCheckExistenceByIdResponse = {\n  /**\n   * The parsed response body.\n   */\n  body: boolean;\n\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n    /**\n     * The response body as text (string format)\n     */\n    bodyAsText: string;\n\n    /**\n     * The response body as parsed JSON or XML\n     */\n    parsedBody: boolean;\n  };\n};\n\n/**\n * Contains response data for the createOrUpdateById operation.\n */\nexport type ResourcesCreateOrUpdateByIdResponse = GenericResource & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n    /**\n     * The response body as text (string format)\n     */\n    bodyAsText: string;\n\n    /**\n     * The response body as parsed JSON or XML\n     */\n    parsedBody: GenericResource;\n  };\n};\n\n/**\n * Contains response data for the updateById operation.\n */\nexport type ResourcesUpdateByIdResponse = GenericResource & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n    /**\n     * The response body as text (string format)\n     */\n    bodyAsText: string;\n\n    /**\n     * The response body as parsed JSON or XML\n     */\n    parsedBody: GenericResource;\n  };\n};\n\n/**\n * Contains response data for the getById operation.\n */\nexport type ResourcesGetByIdResponse = GenericResource & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n    /**\n     * The response body as text (string format)\n     */\n    bodyAsText: string;\n\n    /**\n     * The response body as parsed JSON or XML\n     */\n    parsedBody: GenericResource;\n  };\n};\n\n/**\n * Contains response data for the beginCreateOrUpdate operation.\n */\nexport type ResourcesBeginCreateOrUpdateResponse = GenericResource & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n    /**\n     * The response body as text (string format)\n     */\n    bodyAsText: string;\n\n    /**\n     * The response body as parsed JSON or XML\n     */\n    parsedBody: GenericResource;\n  };\n};\n\n/**\n * Contains response data for the beginUpdate operation.\n */\nexport type ResourcesBeginUpdateResponse = GenericResource & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n    /**\n     * The response body as text (string format)\n     */\n    bodyAsText: string;\n\n    /**\n     * The response body as parsed JSON or XML\n     */\n    parsedBody: GenericResource;\n  };\n};\n\n/**\n * Contains response data for the beginCreateOrUpdateById operation.\n */\nexport type ResourcesBeginCreateOrUpdateByIdResponse = GenericResource & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n    /**\n     * The response body as text (string format)\n     */\n    bodyAsText: string;\n\n    /**\n     * The response body as parsed JSON or XML\n     */\n    parsedBody: GenericResource;\n  };\n};\n\n/**\n * Contains response data for the beginUpdateById operation.\n */\nexport type ResourcesBeginUpdateByIdResponse = GenericResource & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n    /**\n     * The response body as text (string format)\n     */\n    bodyAsText: string;\n\n    /**\n     * The response body as parsed JSON or XML\n     */\n    parsedBody: GenericResource;\n  };\n};\n\n/**\n * Contains response data for the listByResourceGroupNext operation.\n */\nexport type ResourcesListByResourceGroupNextResponse = ResourceListResult & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n    /**\n     * The response body as text (string format)\n     */\n    bodyAsText: string;\n\n    /**\n     * The response body as parsed JSON or XML\n     */\n    parsedBody: ResourceListResult;\n  };\n};\n\n/**\n * Contains response data for the listNext operation.\n */\nexport type ResourcesListNextResponse = ResourceListResult & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n    /**\n     * The response body as text (string format)\n     */\n    bodyAsText: string;\n\n    /**\n     * The response body as parsed JSON or XML\n     */\n    parsedBody: ResourceListResult;\n  };\n};\n\n/**\n * Contains response data for the checkExistence operation.\n */\nexport type ResourceGroupsCheckExistenceResponse = {\n  /**\n   * The parsed response body.\n   */\n  body: boolean;\n\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n    /**\n     * The response body as text (string format)\n     */\n    bodyAsText: string;\n\n    /**\n     * The response body as parsed JSON or XML\n     */\n    parsedBody: boolean;\n  };\n};\n\n/**\n * Contains response data for the createOrUpdate operation.\n */\nexport type ResourceGroupsCreateOrUpdateResponse = ResourceGroup & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n    /**\n     * The response body as text (string format)\n     */\n    bodyAsText: string;\n\n    /**\n     * The response body as parsed JSON or XML\n     */\n    parsedBody: ResourceGroup;\n  };\n};\n\n/**\n * Contains response data for the get operation.\n */\nexport type ResourceGroupsGetResponse = ResourceGroup & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n    /**\n     * The response body as text (string format)\n     */\n    bodyAsText: string;\n\n    /**\n     * The response body as parsed JSON or XML\n     */\n    parsedBody: ResourceGroup;\n  };\n};\n\n/**\n * Contains response data for the update operation.\n */\nexport type ResourceGroupsUpdateResponse = ResourceGroup & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n    /**\n     * The response body as text (string format)\n     */\n    bodyAsText: string;\n\n    /**\n     * The response body as parsed JSON or XML\n     */\n    parsedBody: ResourceGroup;\n  };\n};\n\n/**\n * Contains response data for the exportTemplate operation.\n */\nexport type ResourceGroupsExportTemplateResponse = ResourceGroupExportResult & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n    /**\n     * The response body as text (string format)\n     */\n    bodyAsText: string;\n\n    /**\n     * The response body as parsed JSON or XML\n     */\n    parsedBody: ResourceGroupExportResult;\n  };\n};\n\n/**\n * Contains response data for the list operation.\n */\nexport type ResourceGroupsListResponse = ResourceGroupListResult & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n    /**\n     * The response body as text (string format)\n     */\n    bodyAsText: string;\n\n    /**\n     * The response body as parsed JSON or XML\n     */\n    parsedBody: ResourceGroupListResult;\n  };\n};\n\n/**\n * Contains response data for the beginExportTemplate operation.\n */\nexport type ResourceGroupsBeginExportTemplateResponse = ResourceGroupExportResult & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n    /**\n     * The response body as text (string format)\n     */\n    bodyAsText: string;\n\n    /**\n     * The response body as parsed JSON or XML\n     */\n    parsedBody: ResourceGroupExportResult;\n  };\n};\n\n/**\n * Contains response data for the listNext operation.\n */\nexport type ResourceGroupsListNextResponse = ResourceGroupListResult & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n    /**\n     * The response body as text (string format)\n     */\n    bodyAsText: string;\n\n    /**\n     * The response body as parsed JSON or XML\n     */\n    parsedBody: ResourceGroupListResult;\n  };\n};\n\n/**\n * Contains response data for the createOrUpdateValue operation.\n */\nexport type TagsCreateOrUpdateValueResponse = TagValue & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n    /**\n     * The response body as text (string format)\n     */\n    bodyAsText: string;\n\n    /**\n     * The response body as parsed JSON or XML\n     */\n    parsedBody: TagValue;\n  };\n};\n\n/**\n * Contains response data for the createOrUpdate operation.\n */\nexport type TagsCreateOrUpdateResponse = TagDetails & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n    /**\n     * The response body as text (string format)\n     */\n    bodyAsText: string;\n\n    /**\n     * The response body as parsed JSON or XML\n     */\n    parsedBody: TagDetails;\n  };\n};\n\n/**\n * Contains response data for the list operation.\n */\nexport type TagsListResponse = TagsListResult & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n    /**\n     * The response body as text (string format)\n     */\n    bodyAsText: string;\n\n    /**\n     * The response body as parsed JSON or XML\n     */\n    parsedBody: TagsListResult;\n  };\n};\n\n/**\n * Contains response data for the createOrUpdateAtScope operation.\n */\nexport type TagsCreateOrUpdateAtScopeResponse = TagsResource & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n    /**\n     * The response body as text (string format)\n     */\n    bodyAsText: string;\n\n    /**\n     * The response body as parsed JSON or XML\n     */\n    parsedBody: TagsResource;\n  };\n};\n\n/**\n * Contains response data for the updateAtScope operation.\n */\nexport type TagsUpdateAtScopeResponse = TagsResource & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n    /**\n     * The response body as text (string format)\n     */\n    bodyAsText: string;\n\n    /**\n     * The response body as parsed JSON or XML\n     */\n    parsedBody: TagsResource;\n  };\n};\n\n/**\n * Contains response data for the getAtScope operation.\n */\nexport type TagsGetAtScopeResponse = TagsResource & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n    /**\n     * The response body as text (string format)\n     */\n    bodyAsText: string;\n\n    /**\n     * The response body as parsed JSON or XML\n     */\n    parsedBody: TagsResource;\n  };\n};\n\n/**\n * Contains response data for the listNext operation.\n */\nexport type TagsListNextResponse = TagsListResult & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n    /**\n     * The response body as text (string format)\n     */\n    bodyAsText: string;\n\n    /**\n     * The response body as parsed JSON or XML\n     */\n    parsedBody: TagsListResult;\n  };\n};\n\n/**\n * Contains response data for the getAtScope operation.\n */\nexport type DeploymentOperationsGetAtScopeResponse = DeploymentOperation & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n    /**\n     * The response body as text (string format)\n     */\n    bodyAsText: string;\n\n    /**\n     * The response body as parsed JSON or XML\n     */\n    parsedBody: DeploymentOperation;\n  };\n};\n\n/**\n * Contains response data for the listAtScope operation.\n */\nexport type DeploymentOperationsListAtScopeResponse = DeploymentOperationsListResult & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n    /**\n     * The response body as text (string format)\n     */\n    bodyAsText: string;\n\n    /**\n     * The response body as parsed JSON or XML\n     */\n    parsedBody: DeploymentOperationsListResult;\n  };\n};\n\n/**\n * Contains response data for the getAtTenantScope operation.\n */\nexport type DeploymentOperationsGetAtTenantScopeResponse = DeploymentOperation & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n    /**\n     * The response body as text (string format)\n     */\n    bodyAsText: string;\n\n    /**\n     * The response body as parsed JSON or XML\n     */\n    parsedBody: DeploymentOperation;\n  };\n};\n\n/**\n * Contains response data for the listAtTenantScope operation.\n */\nexport type DeploymentOperationsListAtTenantScopeResponse = DeploymentOperationsListResult & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n    /**\n     * The response body as text (string format)\n     */\n    bodyAsText: string;\n\n    /**\n     * The response body as parsed JSON or XML\n     */\n    parsedBody: DeploymentOperationsListResult;\n  };\n};\n\n/**\n * Contains response data for the getAtManagementGroupScope operation.\n */\nexport type DeploymentOperationsGetAtManagementGroupScopeResponse = DeploymentOperation & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n    /**\n     * The response body as text (string format)\n     */\n    bodyAsText: string;\n\n    /**\n     * The response body as parsed JSON or XML\n     */\n    parsedBody: DeploymentOperation;\n  };\n};\n\n/**\n * Contains response data for the listAtManagementGroupScope operation.\n */\nexport type DeploymentOperationsListAtManagementGroupScopeResponse = DeploymentOperationsListResult & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n    /**\n     * The response body as text (string format)\n     */\n    bodyAsText: string;\n\n    /**\n     * The response body as parsed JSON or XML\n     */\n    parsedBody: DeploymentOperationsListResult;\n  };\n};\n\n/**\n * Contains response data for the getAtSubscriptionScope operation.\n */\nexport type DeploymentOperationsGetAtSubscriptionScopeResponse = DeploymentOperation & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n    /**\n     * The response body as text (string format)\n     */\n    bodyAsText: string;\n\n    /**\n     * The response body as parsed JSON or XML\n     */\n    parsedBody: DeploymentOperation;\n  };\n};\n\n/**\n * Contains response data for the listAtSubscriptionScope operation.\n */\nexport type DeploymentOperationsListAtSubscriptionScopeResponse = DeploymentOperationsListResult & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n    /**\n     * The response body as text (string format)\n     */\n    bodyAsText: string;\n\n    /**\n     * The response body as parsed JSON or XML\n     */\n    parsedBody: DeploymentOperationsListResult;\n  };\n};\n\n/**\n * Contains response data for the get operation.\n */\nexport type DeploymentOperationsGetResponse = DeploymentOperation & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n    /**\n     * The response body as text (string format)\n     */\n    bodyAsText: string;\n\n    /**\n     * The response body as parsed JSON or XML\n     */\n    parsedBody: DeploymentOperation;\n  };\n};\n\n/**\n * Contains response data for the list operation.\n */\nexport type DeploymentOperationsListResponse = DeploymentOperationsListResult & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n    /**\n     * The response body as text (string format)\n     */\n    bodyAsText: string;\n\n    /**\n     * The response body as parsed JSON or XML\n     */\n    parsedBody: DeploymentOperationsListResult;\n  };\n};\n\n/**\n * Contains response data for the listAtScopeNext operation.\n */\nexport type DeploymentOperationsListAtScopeNextResponse = DeploymentOperationsListResult & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n    /**\n     * The response body as text (string format)\n     */\n    bodyAsText: string;\n\n    /**\n     * The response body as parsed JSON or XML\n     */\n    parsedBody: DeploymentOperationsListResult;\n  };\n};\n\n/**\n * Contains response data for the listAtTenantScopeNext operation.\n */\nexport type DeploymentOperationsListAtTenantScopeNextResponse = DeploymentOperationsListResult & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n    /**\n     * The response body as text (string format)\n     */\n    bodyAsText: string;\n\n    /**\n     * The response body as parsed JSON or XML\n     */\n    parsedBody: DeploymentOperationsListResult;\n  };\n};\n\n/**\n * Contains response data for the listAtManagementGroupScopeNext operation.\n */\nexport type DeploymentOperationsListAtManagementGroupScopeNextResponse = DeploymentOperationsListResult & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n    /**\n     * The response body as text (string format)\n     */\n    bodyAsText: string;\n\n    /**\n     * The response body as parsed JSON or XML\n     */\n    parsedBody: DeploymentOperationsListResult;\n  };\n};\n\n/**\n * Contains response data for the listAtSubscriptionScopeNext operation.\n */\nexport type DeploymentOperationsListAtSubscriptionScopeNextResponse = DeploymentOperationsListResult & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n    /**\n     * The response body as text (string format)\n     */\n    bodyAsText: string;\n\n    /**\n     * The response body as parsed JSON or XML\n     */\n    parsedBody: DeploymentOperationsListResult;\n  };\n};\n\n/**\n * Contains response data for the listNext operation.\n */\nexport type DeploymentOperationsListNextResponse = DeploymentOperationsListResult & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n    /**\n     * The response body as text (string format)\n     */\n    bodyAsText: string;\n\n    /**\n     * The response body as parsed JSON or XML\n     */\n    parsedBody: DeploymentOperationsListResult;\n  };\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { CloudErrorMapper, BaseResourceMapper } from \"@azure/ms-rest-azure-js\";\nimport * as msRest from \"@azure/ms-rest-js\";\n\nexport const CloudError = CloudErrorMapper;\nexport const BaseResource = BaseResourceMapper;\n\nexport const DeploymentExtendedFilter: msRest.CompositeMapper = {\n  serializedName: \"DeploymentExtendedFilter\",\n  type: {\n    name: \"Composite\",\n    className: \"DeploymentExtendedFilter\",\n    modelProperties: {\n      provisioningState: {\n        serializedName: \"provisioningState\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const GenericResourceFilter: msRest.CompositeMapper = {\n  serializedName: \"GenericResourceFilter\",\n  type: {\n    name: \"Composite\",\n    className: \"GenericResourceFilter\",\n    modelProperties: {\n      resourceType: {\n        serializedName: \"resourceType\",\n        type: {\n          name: \"String\"\n        }\n      },\n      tagname: {\n        serializedName: \"tagname\",\n        type: {\n          name: \"String\"\n        }\n      },\n      tagvalue: {\n        serializedName: \"tagvalue\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ResourceGroupFilter: msRest.CompositeMapper = {\n  serializedName: \"ResourceGroupFilter\",\n  type: {\n    name: \"Composite\",\n    className: \"ResourceGroupFilter\",\n    modelProperties: {\n      tagName: {\n        serializedName: \"tagName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      tagValue: {\n        serializedName: \"tagValue\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const TemplateLink: msRest.CompositeMapper = {\n  serializedName: \"TemplateLink\",\n  type: {\n    name: \"Composite\",\n    className: \"TemplateLink\",\n    modelProperties: {\n      uri: {\n        serializedName: \"uri\",\n        type: {\n          name: \"String\"\n        }\n      },\n      id: {\n        serializedName: \"id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      relativePath: {\n        serializedName: \"relativePath\",\n        type: {\n          name: \"String\"\n        }\n      },\n      contentVersion: {\n        serializedName: \"contentVersion\",\n        type: {\n          name: \"String\"\n        }\n      },\n      queryString: {\n        serializedName: \"queryString\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ParametersLink: msRest.CompositeMapper = {\n  serializedName: \"ParametersLink\",\n  type: {\n    name: \"Composite\",\n    className: \"ParametersLink\",\n    modelProperties: {\n      uri: {\n        required: true,\n        serializedName: \"uri\",\n        type: {\n          name: \"String\"\n        }\n      },\n      contentVersion: {\n        serializedName: \"contentVersion\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const DebugSetting: msRest.CompositeMapper = {\n  serializedName: \"DebugSetting\",\n  type: {\n    name: \"Composite\",\n    className: \"DebugSetting\",\n    modelProperties: {\n      detailLevel: {\n        serializedName: \"detailLevel\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const OnErrorDeployment: msRest.CompositeMapper = {\n  serializedName: \"OnErrorDeployment\",\n  type: {\n    name: \"Composite\",\n    className: \"OnErrorDeployment\",\n    modelProperties: {\n      type: {\n        serializedName: \"type\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"LastSuccessful\", \"SpecificDeployment\"]\n        }\n      },\n      deploymentName: {\n        serializedName: \"deploymentName\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ExpressionEvaluationOptions: msRest.CompositeMapper = {\n  serializedName: \"ExpressionEvaluationOptions\",\n  type: {\n    name: \"Composite\",\n    className: \"ExpressionEvaluationOptions\",\n    modelProperties: {\n      scope: {\n        serializedName: \"scope\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const DeploymentProperties: msRest.CompositeMapper = {\n  serializedName: \"DeploymentProperties\",\n  type: {\n    name: \"Composite\",\n    className: \"DeploymentProperties\",\n    modelProperties: {\n      template: {\n        serializedName: \"template\",\n        type: {\n          name: \"Object\"\n        }\n      },\n      templateLink: {\n        serializedName: \"templateLink\",\n        type: {\n          name: \"Composite\",\n          className: \"TemplateLink\"\n        }\n      },\n      parameters: {\n        serializedName: \"parameters\",\n        type: {\n          name: \"Object\"\n        }\n      },\n      parametersLink: {\n        serializedName: \"parametersLink\",\n        type: {\n          name: \"Composite\",\n          className: \"ParametersLink\"\n        }\n      },\n      mode: {\n        required: true,\n        serializedName: \"mode\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"Incremental\", \"Complete\"]\n        }\n      },\n      debugSetting: {\n        serializedName: \"debugSetting\",\n        type: {\n          name: \"Composite\",\n          className: \"DebugSetting\"\n        }\n      },\n      onErrorDeployment: {\n        serializedName: \"onErrorDeployment\",\n        type: {\n          name: \"Composite\",\n          className: \"OnErrorDeployment\"\n        }\n      },\n      expressionEvaluationOptions: {\n        serializedName: \"expressionEvaluationOptions\",\n        type: {\n          name: \"Composite\",\n          className: \"ExpressionEvaluationOptions\"\n        }\n      }\n    }\n  }\n};\n\nexport const Deployment: msRest.CompositeMapper = {\n  serializedName: \"Deployment\",\n  type: {\n    name: \"Composite\",\n    className: \"Deployment\",\n    modelProperties: {\n      location: {\n        serializedName: \"location\",\n        type: {\n          name: \"String\"\n        }\n      },\n      properties: {\n        required: true,\n        serializedName: \"properties\",\n        type: {\n          name: \"Composite\",\n          className: \"DeploymentProperties\"\n        }\n      },\n      tags: {\n        serializedName: \"tags\",\n        type: {\n          name: \"Dictionary\",\n          value: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const ScopedDeployment: msRest.CompositeMapper = {\n  serializedName: \"ScopedDeployment\",\n  type: {\n    name: \"Composite\",\n    className: \"ScopedDeployment\",\n    modelProperties: {\n      location: {\n        required: true,\n        serializedName: \"location\",\n        type: {\n          name: \"String\"\n        }\n      },\n      properties: {\n        required: true,\n        serializedName: \"properties\",\n        type: {\n          name: \"Composite\",\n          className: \"DeploymentProperties\"\n        }\n      },\n      tags: {\n        serializedName: \"tags\",\n        type: {\n          name: \"Dictionary\",\n          value: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const DeploymentExportResult: msRest.CompositeMapper = {\n  serializedName: \"DeploymentExportResult\",\n  type: {\n    name: \"Composite\",\n    className: \"DeploymentExportResult\",\n    modelProperties: {\n      template: {\n        serializedName: \"template\",\n        type: {\n          name: \"Object\"\n        }\n      }\n    }\n  }\n};\n\nexport const DeploymentWhatIfSettings: msRest.CompositeMapper = {\n  serializedName: \"DeploymentWhatIfSettings\",\n  type: {\n    name: \"Composite\",\n    className: \"DeploymentWhatIfSettings\",\n    modelProperties: {\n      resultFormat: {\n        serializedName: \"resultFormat\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"ResourceIdOnly\", \"FullResourcePayloads\"]\n        }\n      }\n    }\n  }\n};\n\nexport const DeploymentWhatIfProperties: msRest.CompositeMapper = {\n  serializedName: \"DeploymentWhatIfProperties\",\n  type: {\n    name: \"Composite\",\n    className: \"DeploymentWhatIfProperties\",\n    modelProperties: {\n      ...DeploymentProperties.type.modelProperties,\n      whatIfSettings: {\n        serializedName: \"whatIfSettings\",\n        type: {\n          name: \"Composite\",\n          className: \"DeploymentWhatIfSettings\"\n        }\n      }\n    }\n  }\n};\n\nexport const DeploymentWhatIf: msRest.CompositeMapper = {\n  serializedName: \"DeploymentWhatIf\",\n  type: {\n    name: \"Composite\",\n    className: \"DeploymentWhatIf\",\n    modelProperties: {\n      location: {\n        serializedName: \"location\",\n        type: {\n          name: \"String\"\n        }\n      },\n      properties: {\n        required: true,\n        serializedName: \"properties\",\n        type: {\n          name: \"Composite\",\n          className: \"DeploymentWhatIfProperties\"\n        }\n      }\n    }\n  }\n};\n\nexport const ScopedDeploymentWhatIf: msRest.CompositeMapper = {\n  serializedName: \"ScopedDeploymentWhatIf\",\n  type: {\n    name: \"Composite\",\n    className: \"ScopedDeploymentWhatIf\",\n    modelProperties: {\n      location: {\n        required: true,\n        serializedName: \"location\",\n        type: {\n          name: \"String\"\n        }\n      },\n      properties: {\n        required: true,\n        serializedName: \"properties\",\n        type: {\n          name: \"Composite\",\n          className: \"DeploymentWhatIfProperties\"\n        }\n      }\n    }\n  }\n};\n\nexport const ErrorAdditionalInfo: msRest.CompositeMapper = {\n  serializedName: \"ErrorAdditionalInfo\",\n  type: {\n    name: \"Composite\",\n    className: \"ErrorAdditionalInfo\",\n    modelProperties: {\n      type: {\n        readOnly: true,\n        serializedName: \"type\",\n        type: {\n          name: \"String\"\n        }\n      },\n      info: {\n        readOnly: true,\n        serializedName: \"info\",\n        type: {\n          name: \"Object\"\n        }\n      }\n    }\n  }\n};\n\nexport const ErrorResponse: msRest.CompositeMapper = {\n  serializedName: \"ErrorResponse\",\n  type: {\n    name: \"Composite\",\n    className: \"ErrorResponse\",\n    modelProperties: {\n      code: {\n        readOnly: true,\n        serializedName: \"code\",\n        type: {\n          name: \"String\"\n        }\n      },\n      message: {\n        readOnly: true,\n        serializedName: \"message\",\n        type: {\n          name: \"String\"\n        }\n      },\n      target: {\n        readOnly: true,\n        serializedName: \"target\",\n        type: {\n          name: \"String\"\n        }\n      },\n      details: {\n        readOnly: true,\n        serializedName: \"details\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ErrorResponse\"\n            }\n          }\n        }\n      },\n      additionalInfo: {\n        readOnly: true,\n        serializedName: \"additionalInfo\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ErrorAdditionalInfo\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const ApiProfile: msRest.CompositeMapper = {\n  serializedName: \"ApiProfile\",\n  type: {\n    name: \"Composite\",\n    className: \"ApiProfile\",\n    modelProperties: {\n      profileVersion: {\n        readOnly: true,\n        serializedName: \"profileVersion\",\n        type: {\n          name: \"String\"\n        }\n      },\n      apiVersion: {\n        readOnly: true,\n        serializedName: \"apiVersion\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const AliasPathMetadata: msRest.CompositeMapper = {\n  serializedName: \"AliasPathMetadata\",\n  type: {\n    name: \"Composite\",\n    className: \"AliasPathMetadata\",\n    modelProperties: {\n      type: {\n        readOnly: true,\n        serializedName: \"type\",\n        type: {\n          name: \"String\"\n        }\n      },\n      attributes: {\n        readOnly: true,\n        serializedName: \"attributes\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const AliasPattern: msRest.CompositeMapper = {\n  serializedName: \"AliasPattern\",\n  type: {\n    name: \"Composite\",\n    className: \"AliasPattern\",\n    modelProperties: {\n      phrase: {\n        serializedName: \"phrase\",\n        type: {\n          name: \"String\"\n        }\n      },\n      variable: {\n        serializedName: \"variable\",\n        type: {\n          name: \"String\"\n        }\n      },\n      type: {\n        serializedName: \"type\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"NotSpecified\", \"Extract\"]\n        }\n      }\n    }\n  }\n};\n\nexport const AliasPath: msRest.CompositeMapper = {\n  serializedName: \"AliasPath\",\n  type: {\n    name: \"Composite\",\n    className: \"AliasPath\",\n    modelProperties: {\n      path: {\n        serializedName: \"path\",\n        type: {\n          name: \"String\"\n        }\n      },\n      apiVersions: {\n        serializedName: \"apiVersions\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      pattern: {\n        serializedName: \"pattern\",\n        type: {\n          name: \"Composite\",\n          className: \"AliasPattern\"\n        }\n      },\n      metadata: {\n        readOnly: true,\n        serializedName: \"metadata\",\n        type: {\n          name: \"Composite\",\n          className: \"AliasPathMetadata\"\n        }\n      }\n    }\n  }\n};\n\nexport const Alias: msRest.CompositeMapper = {\n  serializedName: \"Alias\",\n  type: {\n    name: \"Composite\",\n    className: \"Alias\",\n    modelProperties: {\n      name: {\n        serializedName: \"name\",\n        type: {\n          name: \"String\"\n        }\n      },\n      paths: {\n        serializedName: \"paths\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"AliasPath\"\n            }\n          }\n        }\n      },\n      type: {\n        serializedName: \"type\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"NotSpecified\", \"PlainText\", \"Mask\"]\n        }\n      },\n      defaultPath: {\n        serializedName: \"defaultPath\",\n        type: {\n          name: \"String\"\n        }\n      },\n      defaultPattern: {\n        serializedName: \"defaultPattern\",\n        type: {\n          name: \"Composite\",\n          className: \"AliasPattern\"\n        }\n      },\n      defaultMetadata: {\n        readOnly: true,\n        serializedName: \"defaultMetadata\",\n        type: {\n          name: \"Composite\",\n          className: \"AliasPathMetadata\"\n        }\n      }\n    }\n  }\n};\n\nexport const ProviderExtendedLocation: msRest.CompositeMapper = {\n  serializedName: \"ProviderExtendedLocation\",\n  type: {\n    name: \"Composite\",\n    className: \"ProviderExtendedLocation\",\n    modelProperties: {\n      location: {\n        serializedName: \"location\",\n        type: {\n          name: \"String\"\n        }\n      },\n      type: {\n        serializedName: \"type\",\n        type: {\n          name: \"String\"\n        }\n      },\n      extendedLocations: {\n        serializedName: \"extendedLocations\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const ProviderResourceType: msRest.CompositeMapper = {\n  serializedName: \"ProviderResourceType\",\n  type: {\n    name: \"Composite\",\n    className: \"ProviderResourceType\",\n    modelProperties: {\n      resourceType: {\n        serializedName: \"resourceType\",\n        type: {\n          name: \"String\"\n        }\n      },\n      locations: {\n        serializedName: \"locations\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      locationMappings: {\n        serializedName: \"locationMappings\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ProviderExtendedLocation\"\n            }\n          }\n        }\n      },\n      aliases: {\n        serializedName: \"aliases\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"Alias\"\n            }\n          }\n        }\n      },\n      apiVersions: {\n        serializedName: \"apiVersions\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      defaultApiVersion: {\n        readOnly: true,\n        serializedName: \"defaultApiVersion\",\n        type: {\n          name: \"String\"\n        }\n      },\n      apiProfiles: {\n        readOnly: true,\n        serializedName: \"apiProfiles\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ApiProfile\"\n            }\n          }\n        }\n      },\n      capabilities: {\n        serializedName: \"capabilities\",\n        type: {\n          name: \"String\"\n        }\n      },\n      properties: {\n        serializedName: \"properties\",\n        type: {\n          name: \"Dictionary\",\n          value: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const Provider: msRest.CompositeMapper = {\n  serializedName: \"Provider\",\n  type: {\n    name: \"Composite\",\n    className: \"Provider\",\n    modelProperties: {\n      id: {\n        readOnly: true,\n        serializedName: \"id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      namespace: {\n        serializedName: \"namespace\",\n        type: {\n          name: \"String\"\n        }\n      },\n      registrationState: {\n        readOnly: true,\n        serializedName: \"registrationState\",\n        type: {\n          name: \"String\"\n        }\n      },\n      registrationPolicy: {\n        readOnly: true,\n        serializedName: \"registrationPolicy\",\n        type: {\n          name: \"String\"\n        }\n      },\n      resourceTypes: {\n        readOnly: true,\n        serializedName: \"resourceTypes\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ProviderResourceType\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const BasicDependency: msRest.CompositeMapper = {\n  serializedName: \"BasicDependency\",\n  type: {\n    name: \"Composite\",\n    className: \"BasicDependency\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      resourceType: {\n        serializedName: \"resourceType\",\n        type: {\n          name: \"String\"\n        }\n      },\n      resourceName: {\n        serializedName: \"resourceName\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const Dependency: msRest.CompositeMapper = {\n  serializedName: \"Dependency\",\n  type: {\n    name: \"Composite\",\n    className: \"Dependency\",\n    modelProperties: {\n      dependsOn: {\n        serializedName: \"dependsOn\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"BasicDependency\"\n            }\n          }\n        }\n      },\n      id: {\n        serializedName: \"id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      resourceType: {\n        serializedName: \"resourceType\",\n        type: {\n          name: \"String\"\n        }\n      },\n      resourceName: {\n        serializedName: \"resourceName\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const OnErrorDeploymentExtended: msRest.CompositeMapper = {\n  serializedName: \"OnErrorDeploymentExtended\",\n  type: {\n    name: \"Composite\",\n    className: \"OnErrorDeploymentExtended\",\n    modelProperties: {\n      provisioningState: {\n        readOnly: true,\n        serializedName: \"provisioningState\",\n        type: {\n          name: \"String\"\n        }\n      },\n      type: {\n        serializedName: \"type\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"LastSuccessful\", \"SpecificDeployment\"]\n        }\n      },\n      deploymentName: {\n        serializedName: \"deploymentName\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ResourceReference: msRest.CompositeMapper = {\n  serializedName: \"ResourceReference\",\n  type: {\n    name: \"Composite\",\n    className: \"ResourceReference\",\n    modelProperties: {\n      id: {\n        readOnly: true,\n        serializedName: \"id\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const DeploymentPropertiesExtended: msRest.CompositeMapper = {\n  serializedName: \"DeploymentPropertiesExtended\",\n  type: {\n    name: \"Composite\",\n    className: \"DeploymentPropertiesExtended\",\n    modelProperties: {\n      provisioningState: {\n        readOnly: true,\n        serializedName: \"provisioningState\",\n        type: {\n          name: \"String\"\n        }\n      },\n      correlationId: {\n        readOnly: true,\n        serializedName: \"correlationId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      timestamp: {\n        readOnly: true,\n        serializedName: \"timestamp\",\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      duration: {\n        readOnly: true,\n        serializedName: \"duration\",\n        type: {\n          name: \"String\"\n        }\n      },\n      outputs: {\n        readOnly: true,\n        serializedName: \"outputs\",\n        type: {\n          name: \"Object\"\n        }\n      },\n      providers: {\n        readOnly: true,\n        serializedName: \"providers\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"Provider\"\n            }\n          }\n        }\n      },\n      dependencies: {\n        readOnly: true,\n        serializedName: \"dependencies\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"Dependency\"\n            }\n          }\n        }\n      },\n      templateLink: {\n        readOnly: true,\n        serializedName: \"templateLink\",\n        type: {\n          name: \"Composite\",\n          className: \"TemplateLink\"\n        }\n      },\n      parameters: {\n        readOnly: true,\n        serializedName: \"parameters\",\n        type: {\n          name: \"Object\"\n        }\n      },\n      parametersLink: {\n        readOnly: true,\n        serializedName: \"parametersLink\",\n        type: {\n          name: \"Composite\",\n          className: \"ParametersLink\"\n        }\n      },\n      mode: {\n        readOnly: true,\n        serializedName: \"mode\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"Incremental\", \"Complete\"]\n        }\n      },\n      debugSetting: {\n        readOnly: true,\n        serializedName: \"debugSetting\",\n        type: {\n          name: \"Composite\",\n          className: \"DebugSetting\"\n        }\n      },\n      onErrorDeployment: {\n        readOnly: true,\n        serializedName: \"onErrorDeployment\",\n        type: {\n          name: \"Composite\",\n          className: \"OnErrorDeploymentExtended\"\n        }\n      },\n      templateHash: {\n        readOnly: true,\n        serializedName: \"templateHash\",\n        type: {\n          name: \"String\"\n        }\n      },\n      outputResources: {\n        readOnly: true,\n        serializedName: \"outputResources\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ResourceReference\"\n            }\n          }\n        }\n      },\n      validatedResources: {\n        readOnly: true,\n        serializedName: \"validatedResources\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ResourceReference\"\n            }\n          }\n        }\n      },\n      error: {\n        readOnly: true,\n        serializedName: \"error\",\n        type: {\n          name: \"Composite\",\n          className: \"ErrorResponse\"\n        }\n      }\n    }\n  }\n};\n\nexport const DeploymentValidateResult: msRest.CompositeMapper = {\n  serializedName: \"DeploymentValidateResult\",\n  type: {\n    name: \"Composite\",\n    className: \"DeploymentValidateResult\",\n    modelProperties: {\n      error: {\n        readOnly: true,\n        serializedName: \"error\",\n        type: {\n          name: \"Composite\",\n          className: \"ErrorResponse\"\n        }\n      },\n      properties: {\n        serializedName: \"properties\",\n        type: {\n          name: \"Composite\",\n          className: \"DeploymentPropertiesExtended\"\n        }\n      }\n    }\n  }\n};\n\nexport const DeploymentExtended: msRest.CompositeMapper = {\n  serializedName: \"DeploymentExtended\",\n  type: {\n    name: \"Composite\",\n    className: \"DeploymentExtended\",\n    modelProperties: {\n      id: {\n        readOnly: true,\n        serializedName: \"id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      name: {\n        readOnly: true,\n        serializedName: \"name\",\n        type: {\n          name: \"String\"\n        }\n      },\n      type: {\n        readOnly: true,\n        serializedName: \"type\",\n        type: {\n          name: \"String\"\n        }\n      },\n      location: {\n        serializedName: \"location\",\n        type: {\n          name: \"String\"\n        }\n      },\n      properties: {\n        serializedName: \"properties\",\n        type: {\n          name: \"Composite\",\n          className: \"DeploymentPropertiesExtended\"\n        }\n      },\n      tags: {\n        serializedName: \"tags\",\n        type: {\n          name: \"Dictionary\",\n          value: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const ProviderResourceTypeListResult: msRest.CompositeMapper = {\n  serializedName: \"ProviderResourceTypeListResult\",\n  type: {\n    name: \"Composite\",\n    className: \"ProviderResourceTypeListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ProviderResourceType\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        readOnly: true,\n        serializedName: \"nextLink\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const Plan: msRest.CompositeMapper = {\n  serializedName: \"Plan\",\n  type: {\n    name: \"Composite\",\n    className: \"Plan\",\n    modelProperties: {\n      name: {\n        serializedName: \"name\",\n        type: {\n          name: \"String\"\n        }\n      },\n      publisher: {\n        serializedName: \"publisher\",\n        type: {\n          name: \"String\"\n        }\n      },\n      product: {\n        serializedName: \"product\",\n        type: {\n          name: \"String\"\n        }\n      },\n      promotionCode: {\n        serializedName: \"promotionCode\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"version\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const Sku: msRest.CompositeMapper = {\n  serializedName: \"Sku\",\n  type: {\n    name: \"Composite\",\n    className: \"Sku\",\n    modelProperties: {\n      name: {\n        serializedName: \"name\",\n        type: {\n          name: \"String\"\n        }\n      },\n      tier: {\n        serializedName: \"tier\",\n        type: {\n          name: \"String\"\n        }\n      },\n      size: {\n        serializedName: \"size\",\n        type: {\n          name: \"String\"\n        }\n      },\n      family: {\n        serializedName: \"family\",\n        type: {\n          name: \"String\"\n        }\n      },\n      model: {\n        serializedName: \"model\",\n        type: {\n          name: \"String\"\n        }\n      },\n      capacity: {\n        serializedName: \"capacity\",\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const IdentityUserAssignedIdentitiesValue: msRest.CompositeMapper = {\n  serializedName: \"Identity_userAssignedIdentitiesValue\",\n  type: {\n    name: \"Composite\",\n    className: \"IdentityUserAssignedIdentitiesValue\",\n    modelProperties: {\n      principalId: {\n        readOnly: true,\n        serializedName: \"principalId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      clientId: {\n        readOnly: true,\n        serializedName: \"clientId\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const Identity: msRest.CompositeMapper = {\n  serializedName: \"Identity\",\n  type: {\n    name: \"Composite\",\n    className: \"Identity\",\n    modelProperties: {\n      principalId: {\n        readOnly: true,\n        serializedName: \"principalId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      tenantId: {\n        readOnly: true,\n        serializedName: \"tenantId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      type: {\n        serializedName: \"type\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"SystemAssigned\", \"UserAssigned\", \"SystemAssigned, UserAssigned\", \"None\"]\n        }\n      },\n      userAssignedIdentities: {\n        serializedName: \"userAssignedIdentities\",\n        type: {\n          name: \"Dictionary\",\n          value: {\n            type: {\n              name: \"Composite\",\n              className: \"IdentityUserAssignedIdentitiesValue\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const Resource: msRest.CompositeMapper = {\n  serializedName: \"Resource\",\n  type: {\n    name: \"Composite\",\n    className: \"Resource\",\n    modelProperties: {\n      id: {\n        readOnly: true,\n        serializedName: \"id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      name: {\n        readOnly: true,\n        serializedName: \"name\",\n        type: {\n          name: \"String\"\n        }\n      },\n      type: {\n        readOnly: true,\n        serializedName: \"type\",\n        type: {\n          name: \"String\"\n        }\n      },\n      location: {\n        serializedName: \"location\",\n        type: {\n          name: \"String\"\n        }\n      },\n      extendedLocation: {\n        serializedName: \"extendedLocation\",\n        type: {\n          name: \"Composite\",\n          className: \"ExtendedLocation\"\n        }\n      },\n      tags: {\n        serializedName: \"tags\",\n        type: {\n          name: \"Dictionary\",\n          value: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const GenericResource: msRest.CompositeMapper = {\n  serializedName: \"GenericResource\",\n  type: {\n    name: \"Composite\",\n    className: \"GenericResource\",\n    modelProperties: {\n      ...Resource.type.modelProperties,\n      plan: {\n        serializedName: \"plan\",\n        type: {\n          name: \"Composite\",\n          className: \"Plan\"\n        }\n      },\n      properties: {\n        serializedName: \"properties\",\n        type: {\n          name: \"Object\"\n        }\n      },\n      kind: {\n        serializedName: \"kind\",\n        constraints: {\n          Pattern: /^[-\\w\\._,\\(\\)]+$/\n        },\n        type: {\n          name: \"String\"\n        }\n      },\n      managedBy: {\n        serializedName: \"managedBy\",\n        type: {\n          name: \"String\"\n        }\n      },\n      sku: {\n        serializedName: \"sku\",\n        type: {\n          name: \"Composite\",\n          className: \"Sku\"\n        }\n      },\n      identity: {\n        serializedName: \"identity\",\n        type: {\n          name: \"Composite\",\n          className: \"Identity\"\n        }\n      }\n    }\n  }\n};\n\nexport const ExtendedLocation: msRest.CompositeMapper = {\n  serializedName: \"ExtendedLocation\",\n  type: {\n    name: \"Composite\",\n    className: \"ExtendedLocation\",\n    modelProperties: {\n      type: {\n        serializedName: \"type\",\n        type: {\n          name: \"String\"\n        }\n      },\n      name: {\n        serializedName: \"name\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const GenericResourceExpanded: msRest.CompositeMapper = {\n  serializedName: \"GenericResourceExpanded\",\n  type: {\n    name: \"Composite\",\n    className: \"GenericResourceExpanded\",\n    modelProperties: {\n      ...GenericResource.type.modelProperties,\n      createdTime: {\n        readOnly: true,\n        serializedName: \"createdTime\",\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      changedTime: {\n        readOnly: true,\n        serializedName: \"changedTime\",\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      provisioningState: {\n        readOnly: true,\n        serializedName: \"provisioningState\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ResourceGroupProperties: msRest.CompositeMapper = {\n  serializedName: \"ResourceGroupProperties\",\n  type: {\n    name: \"Composite\",\n    className: \"ResourceGroupProperties\",\n    modelProperties: {\n      provisioningState: {\n        readOnly: true,\n        serializedName: \"provisioningState\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ResourceGroup: msRest.CompositeMapper = {\n  serializedName: \"ResourceGroup\",\n  type: {\n    name: \"Composite\",\n    className: \"ResourceGroup\",\n    modelProperties: {\n      id: {\n        readOnly: true,\n        serializedName: \"id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      name: {\n        readOnly: true,\n        serializedName: \"name\",\n        type: {\n          name: \"String\"\n        }\n      },\n      type: {\n        readOnly: true,\n        serializedName: \"type\",\n        type: {\n          name: \"String\"\n        }\n      },\n      properties: {\n        serializedName: \"properties\",\n        type: {\n          name: \"Composite\",\n          className: \"ResourceGroupProperties\"\n        }\n      },\n      location: {\n        required: true,\n        serializedName: \"location\",\n        type: {\n          name: \"String\"\n        }\n      },\n      managedBy: {\n        serializedName: \"managedBy\",\n        type: {\n          name: \"String\"\n        }\n      },\n      tags: {\n        serializedName: \"tags\",\n        type: {\n          name: \"Dictionary\",\n          value: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const ResourceGroupPatchable: msRest.CompositeMapper = {\n  serializedName: \"ResourceGroupPatchable\",\n  type: {\n    name: \"Composite\",\n    className: \"ResourceGroupPatchable\",\n    modelProperties: {\n      name: {\n        serializedName: \"name\",\n        type: {\n          name: \"String\"\n        }\n      },\n      properties: {\n        serializedName: \"properties\",\n        type: {\n          name: \"Composite\",\n          className: \"ResourceGroupProperties\"\n        }\n      },\n      managedBy: {\n        serializedName: \"managedBy\",\n        type: {\n          name: \"String\"\n        }\n      },\n      tags: {\n        serializedName: \"tags\",\n        type: {\n          name: \"Dictionary\",\n          value: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const ResourcesMoveInfo: msRest.CompositeMapper = {\n  serializedName: \"ResourcesMoveInfo\",\n  type: {\n    name: \"Composite\",\n    className: \"ResourcesMoveInfo\",\n    modelProperties: {\n      resources: {\n        serializedName: \"resources\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      targetResourceGroup: {\n        serializedName: \"targetResourceGroup\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ExportTemplateRequest: msRest.CompositeMapper = {\n  serializedName: \"ExportTemplateRequest\",\n  type: {\n    name: \"Composite\",\n    className: \"ExportTemplateRequest\",\n    modelProperties: {\n      resources: {\n        serializedName: \"resources\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      options: {\n        serializedName: \"options\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const TagCount: msRest.CompositeMapper = {\n  serializedName: \"TagCount\",\n  type: {\n    name: \"Composite\",\n    className: \"TagCount\",\n    modelProperties: {\n      type: {\n        serializedName: \"type\",\n        type: {\n          name: \"String\"\n        }\n      },\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const TagValue: msRest.CompositeMapper = {\n  serializedName: \"TagValue\",\n  type: {\n    name: \"Composite\",\n    className: \"TagValue\",\n    modelProperties: {\n      id: {\n        readOnly: true,\n        serializedName: \"id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      tagValue: {\n        serializedName: \"tagValue\",\n        type: {\n          name: \"String\"\n        }\n      },\n      count: {\n        serializedName: \"count\",\n        type: {\n          name: \"Composite\",\n          className: \"TagCount\"\n        }\n      }\n    }\n  }\n};\n\nexport const TagDetails: msRest.CompositeMapper = {\n  serializedName: \"TagDetails\",\n  type: {\n    name: \"Composite\",\n    className: \"TagDetails\",\n    modelProperties: {\n      id: {\n        readOnly: true,\n        serializedName: \"id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      tagName: {\n        serializedName: \"tagName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      count: {\n        serializedName: \"count\",\n        type: {\n          name: \"Composite\",\n          className: \"TagCount\"\n        }\n      },\n      values: {\n        serializedName: \"values\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"TagValue\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const TargetResource: msRest.CompositeMapper = {\n  serializedName: \"TargetResource\",\n  type: {\n    name: \"Composite\",\n    className: \"TargetResource\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      resourceName: {\n        serializedName: \"resourceName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      resourceType: {\n        serializedName: \"resourceType\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const HttpMessage: msRest.CompositeMapper = {\n  serializedName: \"HttpMessage\",\n  type: {\n    name: \"Composite\",\n    className: \"HttpMessage\",\n    modelProperties: {\n      content: {\n        serializedName: \"content\",\n        type: {\n          name: \"Object\"\n        }\n      }\n    }\n  }\n};\n\nexport const StatusMessage: msRest.CompositeMapper = {\n  serializedName: \"StatusMessage\",\n  type: {\n    name: \"Composite\",\n    className: \"StatusMessage\",\n    modelProperties: {\n      status: {\n        serializedName: \"status\",\n        type: {\n          name: \"String\"\n        }\n      },\n      error: {\n        serializedName: \"error\",\n        type: {\n          name: \"Composite\",\n          className: \"ErrorResponse\"\n        }\n      }\n    }\n  }\n};\n\nexport const DeploymentOperationProperties: msRest.CompositeMapper = {\n  serializedName: \"DeploymentOperationProperties\",\n  type: {\n    name: \"Composite\",\n    className: \"DeploymentOperationProperties\",\n    modelProperties: {\n      provisioningOperation: {\n        readOnly: true,\n        serializedName: \"provisioningOperation\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\n            \"NotSpecified\",\n            \"Create\",\n            \"Delete\",\n            \"Waiting\",\n            \"AzureAsyncOperationWaiting\",\n            \"ResourceCacheWaiting\",\n            \"Action\",\n            \"Read\",\n            \"EvaluateDeploymentOutput\",\n            \"DeploymentCleanup\"\n          ]\n        }\n      },\n      provisioningState: {\n        readOnly: true,\n        serializedName: \"provisioningState\",\n        type: {\n          name: \"String\"\n        }\n      },\n      timestamp: {\n        readOnly: true,\n        serializedName: \"timestamp\",\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      duration: {\n        readOnly: true,\n        serializedName: \"duration\",\n        type: {\n          name: \"String\"\n        }\n      },\n      serviceRequestId: {\n        readOnly: true,\n        serializedName: \"serviceRequestId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      statusCode: {\n        readOnly: true,\n        serializedName: \"statusCode\",\n        type: {\n          name: \"String\"\n        }\n      },\n      statusMessage: {\n        readOnly: true,\n        serializedName: \"statusMessage\",\n        type: {\n          name: \"Composite\",\n          className: \"StatusMessage\"\n        }\n      },\n      targetResource: {\n        readOnly: true,\n        serializedName: \"targetResource\",\n        type: {\n          name: \"Composite\",\n          className: \"TargetResource\"\n        }\n      },\n      request: {\n        readOnly: true,\n        serializedName: \"request\",\n        type: {\n          name: \"Composite\",\n          className: \"HttpMessage\"\n        }\n      },\n      response: {\n        readOnly: true,\n        serializedName: \"response\",\n        type: {\n          name: \"Composite\",\n          className: \"HttpMessage\"\n        }\n      }\n    }\n  }\n};\n\nexport const DeploymentOperation: msRest.CompositeMapper = {\n  serializedName: \"DeploymentOperation\",\n  type: {\n    name: \"Composite\",\n    className: \"DeploymentOperation\",\n    modelProperties: {\n      id: {\n        readOnly: true,\n        serializedName: \"id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      operationId: {\n        readOnly: true,\n        serializedName: \"operationId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      properties: {\n        serializedName: \"properties\",\n        type: {\n          name: \"Composite\",\n          className: \"DeploymentOperationProperties\"\n        }\n      }\n    }\n  }\n};\n\nexport const ResourceProviderOperationDisplayProperties: msRest.CompositeMapper = {\n  serializedName: \"ResourceProviderOperationDisplayProperties\",\n  type: {\n    name: \"Composite\",\n    className: \"ResourceProviderOperationDisplayProperties\",\n    modelProperties: {\n      publisher: {\n        serializedName: \"publisher\",\n        type: {\n          name: \"String\"\n        }\n      },\n      provider: {\n        serializedName: \"provider\",\n        type: {\n          name: \"String\"\n        }\n      },\n      resource: {\n        serializedName: \"resource\",\n        type: {\n          name: \"String\"\n        }\n      },\n      operation: {\n        serializedName: \"operation\",\n        type: {\n          name: \"String\"\n        }\n      },\n      description: {\n        serializedName: \"description\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const SubResource: msRest.CompositeMapper = {\n  serializedName: \"SubResource\",\n  type: {\n    name: \"Composite\",\n    className: \"SubResource\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ResourceGroupExportResult: msRest.CompositeMapper = {\n  serializedName: \"ResourceGroupExportResult\",\n  type: {\n    name: \"Composite\",\n    className: \"ResourceGroupExportResult\",\n    modelProperties: {\n      template: {\n        serializedName: \"template\",\n        type: {\n          name: \"Object\"\n        }\n      },\n      error: {\n        serializedName: \"error\",\n        type: {\n          name: \"Composite\",\n          className: \"ErrorResponse\"\n        }\n      }\n    }\n  }\n};\n\nexport const OperationDisplay: msRest.CompositeMapper = {\n  serializedName: \"Operation_display\",\n  type: {\n    name: \"Composite\",\n    className: \"OperationDisplay\",\n    modelProperties: {\n      provider: {\n        serializedName: \"provider\",\n        type: {\n          name: \"String\"\n        }\n      },\n      resource: {\n        serializedName: \"resource\",\n        type: {\n          name: \"String\"\n        }\n      },\n      operation: {\n        serializedName: \"operation\",\n        type: {\n          name: \"String\"\n        }\n      },\n      description: {\n        serializedName: \"description\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const Operation: msRest.CompositeMapper = {\n  serializedName: \"Operation\",\n  type: {\n    name: \"Composite\",\n    className: \"Operation\",\n    modelProperties: {\n      name: {\n        serializedName: \"name\",\n        type: {\n          name: \"String\"\n        }\n      },\n      display: {\n        serializedName: \"display\",\n        type: {\n          name: \"Composite\",\n          className: \"OperationDisplay\"\n        }\n      }\n    }\n  }\n};\n\nexport const TemplateHashResult: msRest.CompositeMapper = {\n  serializedName: \"TemplateHashResult\",\n  type: {\n    name: \"Composite\",\n    className: \"TemplateHashResult\",\n    modelProperties: {\n      minifiedTemplate: {\n        serializedName: \"minifiedTemplate\",\n        type: {\n          name: \"String\"\n        }\n      },\n      templateHash: {\n        serializedName: \"templateHash\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const WhatIfPropertyChange: msRest.CompositeMapper = {\n  serializedName: \"WhatIfPropertyChange\",\n  type: {\n    name: \"Composite\",\n    className: \"WhatIfPropertyChange\",\n    modelProperties: {\n      path: {\n        required: true,\n        serializedName: \"path\",\n        type: {\n          name: \"String\"\n        }\n      },\n      propertyChangeType: {\n        required: true,\n        serializedName: \"propertyChangeType\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"Create\", \"Delete\", \"Modify\", \"Array\", \"NoEffect\"]\n        }\n      },\n      before: {\n        serializedName: \"before\",\n        type: {\n          name: \"Object\"\n        }\n      },\n      after: {\n        serializedName: \"after\",\n        type: {\n          name: \"Object\"\n        }\n      },\n      children: {\n        serializedName: \"children\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"WhatIfPropertyChange\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const WhatIfChange: msRest.CompositeMapper = {\n  serializedName: \"WhatIfChange\",\n  type: {\n    name: \"Composite\",\n    className: \"WhatIfChange\",\n    modelProperties: {\n      resourceId: {\n        required: true,\n        serializedName: \"resourceId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      changeType: {\n        required: true,\n        serializedName: \"changeType\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\n            \"Create\",\n            \"Delete\",\n            \"Ignore\",\n            \"Deploy\",\n            \"NoChange\",\n            \"Modify\",\n            \"Unsupported\"\n          ]\n        }\n      },\n      unsupportedReason: {\n        serializedName: \"unsupportedReason\",\n        type: {\n          name: \"String\"\n        }\n      },\n      before: {\n        serializedName: \"before\",\n        type: {\n          name: \"Object\"\n        }\n      },\n      after: {\n        serializedName: \"after\",\n        type: {\n          name: \"Object\"\n        }\n      },\n      delta: {\n        serializedName: \"delta\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"WhatIfPropertyChange\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const WhatIfOperationResult: msRest.CompositeMapper = {\n  serializedName: \"WhatIfOperationResult\",\n  type: {\n    name: \"Composite\",\n    className: \"WhatIfOperationResult\",\n    modelProperties: {\n      status: {\n        serializedName: \"status\",\n        type: {\n          name: \"String\"\n        }\n      },\n      changes: {\n        serializedName: \"properties.changes\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"WhatIfChange\"\n            }\n          }\n        }\n      },\n      error: {\n        serializedName: \"error\",\n        type: {\n          name: \"Composite\",\n          className: \"ErrorResponse\"\n        }\n      }\n    }\n  }\n};\n\nexport const Tags: msRest.CompositeMapper = {\n  serializedName: \"Tags\",\n  type: {\n    name: \"Composite\",\n    className: \"Tags\",\n    modelProperties: {\n      tags: {\n        serializedName: \"tags\",\n        type: {\n          name: \"Dictionary\",\n          value: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const TagsPatchResource: msRest.CompositeMapper = {\n  serializedName: \"TagsPatchResource\",\n  type: {\n    name: \"Composite\",\n    className: \"TagsPatchResource\",\n    modelProperties: {\n      operation: {\n        serializedName: \"operation\",\n        type: {\n          name: \"String\"\n        }\n      },\n      properties: {\n        serializedName: \"properties\",\n        type: {\n          name: \"Composite\",\n          className: \"Tags\"\n        }\n      }\n    }\n  }\n};\n\nexport const TagsResource: msRest.CompositeMapper = {\n  serializedName: \"TagsResource\",\n  type: {\n    name: \"Composite\",\n    className: \"TagsResource\",\n    modelProperties: {\n      id: {\n        readOnly: true,\n        serializedName: \"id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      name: {\n        readOnly: true,\n        serializedName: \"name\",\n        type: {\n          name: \"String\"\n        }\n      },\n      type: {\n        readOnly: true,\n        serializedName: \"type\",\n        type: {\n          name: \"String\"\n        }\n      },\n      properties: {\n        required: true,\n        serializedName: \"properties\",\n        type: {\n          name: \"Composite\",\n          className: \"Tags\"\n        }\n      }\n    }\n  }\n};\n\nexport const DeploymentsWhatIfAtTenantScopeHeaders: msRest.CompositeMapper = {\n  serializedName: \"deployments-whatifattenantscope-headers\",\n  type: {\n    name: \"Composite\",\n    className: \"DeploymentsWhatIfAtTenantScopeHeaders\",\n    modelProperties: {\n      location: {\n        serializedName: \"location\",\n        type: {\n          name: \"String\"\n        }\n      },\n      retryAfter: {\n        serializedName: \"retry-after\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const DeploymentsWhatIfAtManagementGroupScopeHeaders: msRest.CompositeMapper = {\n  serializedName: \"deployments-whatifatmanagementgroupscope-headers\",\n  type: {\n    name: \"Composite\",\n    className: \"DeploymentsWhatIfAtManagementGroupScopeHeaders\",\n    modelProperties: {\n      location: {\n        serializedName: \"location\",\n        type: {\n          name: \"String\"\n        }\n      },\n      retryAfter: {\n        serializedName: \"retry-after\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const DeploymentsWhatIfAtSubscriptionScopeHeaders: msRest.CompositeMapper = {\n  serializedName: \"deployments-whatifatsubscriptionscope-headers\",\n  type: {\n    name: \"Composite\",\n    className: \"DeploymentsWhatIfAtSubscriptionScopeHeaders\",\n    modelProperties: {\n      location: {\n        serializedName: \"location\",\n        type: {\n          name: \"String\"\n        }\n      },\n      retryAfter: {\n        serializedName: \"retry-after\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const DeploymentsWhatIfHeaders: msRest.CompositeMapper = {\n  serializedName: \"deployments-whatif-headers\",\n  type: {\n    name: \"Composite\",\n    className: \"DeploymentsWhatIfHeaders\",\n    modelProperties: {\n      location: {\n        serializedName: \"location\",\n        type: {\n          name: \"String\"\n        }\n      },\n      retryAfter: {\n        serializedName: \"retry-after\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const OperationListResult: msRest.CompositeMapper = {\n  serializedName: \"OperationListResult\",\n  type: {\n    name: \"Composite\",\n    className: \"OperationListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"Operation\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const DeploymentListResult: msRest.CompositeMapper = {\n  serializedName: \"DeploymentListResult\",\n  type: {\n    name: \"Composite\",\n    className: \"DeploymentListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"DeploymentExtended\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        readOnly: true,\n        serializedName: \"nextLink\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ProviderListResult: msRest.CompositeMapper = {\n  serializedName: \"ProviderListResult\",\n  type: {\n    name: \"Composite\",\n    className: \"ProviderListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"Provider\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        readOnly: true,\n        serializedName: \"nextLink\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ResourceListResult: msRest.CompositeMapper = {\n  serializedName: \"ResourceListResult\",\n  type: {\n    name: \"Composite\",\n    className: \"ResourceListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"GenericResourceExpanded\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        readOnly: true,\n        serializedName: \"nextLink\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ResourceGroupListResult: msRest.CompositeMapper = {\n  serializedName: \"ResourceGroupListResult\",\n  type: {\n    name: \"Composite\",\n    className: \"ResourceGroupListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ResourceGroup\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        readOnly: true,\n        serializedName: \"nextLink\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const TagsListResult: msRest.CompositeMapper = {\n  serializedName: \"TagsListResult\",\n  type: {\n    name: \"Composite\",\n    className: \"TagsListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"TagDetails\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        readOnly: true,\n        serializedName: \"nextLink\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const DeploymentOperationsListResult: msRest.CompositeMapper = {\n  serializedName: \"DeploymentOperationsListResult\",\n  type: {\n    name: \"Composite\",\n    className: \"DeploymentOperationsListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"DeploymentOperation\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        readOnly: true,\n        serializedName: \"nextLink\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nexport {\n  CloudError,\n  ErrorAdditionalInfo,\n  ErrorResponse,\n  Operation,\n  OperationDisplay,\n  OperationListResult\n} from \"../models/mappers\";\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is\n * regenerated.\n */\n\nimport * as msRest from \"@azure/ms-rest-js\";\n\nexport const acceptLanguage: msRest.OperationParameter = {\n  parameterPath: \"acceptLanguage\",\n  mapper: {\n    serializedName: \"accept-language\",\n    defaultValue: \"en-US\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const apiVersion: msRest.OperationQueryParameter = {\n  parameterPath: \"apiVersion\",\n  mapper: {\n    required: true,\n    serializedName: \"api-version\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const deploymentName: msRest.OperationURLParameter = {\n  parameterPath: \"deploymentName\",\n  mapper: {\n    required: true,\n    serializedName: \"deploymentName\",\n    constraints: {\n      MaxLength: 64,\n      MinLength: 1,\n      Pattern: /^[-\\w\\._\\(\\)]+$/\n    },\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const expand: msRest.OperationQueryParameter = {\n  parameterPath: [\"options\", \"expand\"],\n  mapper: {\n    serializedName: \"$expand\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const filter: msRest.OperationQueryParameter = {\n  parameterPath: [\"options\", \"filter\"],\n  mapper: {\n    serializedName: \"$filter\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const groupId: msRest.OperationURLParameter = {\n  parameterPath: \"groupId\",\n  mapper: {\n    required: true,\n    serializedName: \"groupId\",\n    constraints: {\n      MaxLength: 90,\n      MinLength: 1\n    },\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const nextPageLink: msRest.OperationURLParameter = {\n  parameterPath: \"nextPageLink\",\n  mapper: {\n    required: true,\n    serializedName: \"nextLink\",\n    type: {\n      name: \"String\"\n    }\n  },\n  skipEncoding: true\n};\nexport const operationId: msRest.OperationURLParameter = {\n  parameterPath: \"operationId\",\n  mapper: {\n    required: true,\n    serializedName: \"operationId\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const parentResourcePath: msRest.OperationURLParameter = {\n  parameterPath: \"parentResourcePath\",\n  mapper: {\n    required: true,\n    serializedName: \"parentResourcePath\",\n    type: {\n      name: \"String\"\n    }\n  },\n  skipEncoding: true\n};\nexport const resourceGroupName: msRest.OperationURLParameter = {\n  parameterPath: \"resourceGroupName\",\n  mapper: {\n    required: true,\n    serializedName: \"resourceGroupName\",\n    constraints: {\n      MaxLength: 90,\n      MinLength: 1,\n      Pattern: /^[-\\w\\._\\(\\)]+$/\n    },\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const resourceId: msRest.OperationURLParameter = {\n  parameterPath: \"resourceId\",\n  mapper: {\n    required: true,\n    serializedName: \"resourceId\",\n    type: {\n      name: \"String\"\n    }\n  },\n  skipEncoding: true\n};\nexport const resourceName: msRest.OperationURLParameter = {\n  parameterPath: \"resourceName\",\n  mapper: {\n    required: true,\n    serializedName: \"resourceName\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const resourceProviderNamespace: msRest.OperationURLParameter = {\n  parameterPath: \"resourceProviderNamespace\",\n  mapper: {\n    required: true,\n    serializedName: \"resourceProviderNamespace\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const resourceType: msRest.OperationURLParameter = {\n  parameterPath: \"resourceType\",\n  mapper: {\n    required: true,\n    serializedName: \"resourceType\",\n    type: {\n      name: \"String\"\n    }\n  },\n  skipEncoding: true\n};\nexport const scope: msRest.OperationURLParameter = {\n  parameterPath: \"scope\",\n  mapper: {\n    required: true,\n    serializedName: \"scope\",\n    type: {\n      name: \"String\"\n    }\n  },\n  skipEncoding: true\n};\nexport const sourceResourceGroupName: msRest.OperationURLParameter = {\n  parameterPath: \"sourceResourceGroupName\",\n  mapper: {\n    required: true,\n    serializedName: \"sourceResourceGroupName\",\n    constraints: {\n      MaxLength: 90,\n      MinLength: 1,\n      Pattern: /^[-\\w\\._\\(\\)]+$/\n    },\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const subscriptionId: msRest.OperationURLParameter = {\n  parameterPath: \"subscriptionId\",\n  mapper: {\n    required: true,\n    serializedName: \"subscriptionId\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const tagName: msRest.OperationURLParameter = {\n  parameterPath: \"tagName\",\n  mapper: {\n    required: true,\n    serializedName: \"tagName\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const tagValue: msRest.OperationURLParameter = {\n  parameterPath: \"tagValue\",\n  mapper: {\n    required: true,\n    serializedName: \"tagValue\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const top: msRest.OperationQueryParameter = {\n  parameterPath: [\"options\", \"top\"],\n  mapper: {\n    serializedName: \"$top\",\n    type: {\n      name: \"Number\"\n    }\n  }\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is\n * regenerated.\n */\n\nimport * as msRest from \"@azure/ms-rest-js\";\nimport * as Models from \"../models\";\nimport * as Mappers from \"../models/operationsMappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { ResourceManagementClientContext } from \"../resourceManagementClientContext\";\n\n/** Class representing a Operations. */\nexport class Operations {\n  private readonly client: ResourceManagementClientContext;\n\n  /**\n   * Create a Operations.\n   * @param {ResourceManagementClientContext} client Reference to the service client.\n   */\n  constructor(client: ResourceManagementClientContext) {\n    this.client = client;\n  }\n\n  /**\n   * Lists all of the available Microsoft.Resources REST API operations.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.OperationsListResponse>\n   */\n  list(options?: msRest.RequestOptionsBase): Promise<Models.OperationsListResponse>;\n  /**\n   * @param callback The callback\n   */\n  list(callback: msRest.ServiceCallback<Models.OperationListResult>): void;\n  /**\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  list(\n    options: msRest.RequestOptionsBase,\n    callback: msRest.ServiceCallback<Models.OperationListResult>\n  ): void;\n  list(\n    options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.OperationListResult>,\n    callback?: msRest.ServiceCallback<Models.OperationListResult>\n  ): Promise<Models.OperationsListResponse> {\n    return this.client.sendOperationRequest(\n      {\n        options\n      },\n      listOperationSpec,\n      callback\n    ) as Promise<Models.OperationsListResponse>;\n  }\n\n  /**\n   * Lists all of the available Microsoft.Resources REST API operations.\n   * @param nextPageLink The NextLink from the previous successful call to List operation.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.OperationsListNextResponse>\n   */\n  listNext(\n    nextPageLink: string,\n    options?: msRest.RequestOptionsBase\n  ): Promise<Models.OperationsListNextResponse>;\n  /**\n   * @param nextPageLink The NextLink from the previous successful call to List operation.\n   * @param callback The callback\n   */\n  listNext(\n    nextPageLink: string,\n    callback: msRest.ServiceCallback<Models.OperationListResult>\n  ): void;\n  /**\n   * @param nextPageLink The NextLink from the previous successful call to List operation.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  listNext(\n    nextPageLink: string,\n    options: msRest.RequestOptionsBase,\n    callback: msRest.ServiceCallback<Models.OperationListResult>\n  ): void;\n  listNext(\n    nextPageLink: string,\n    options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.OperationListResult>,\n    callback?: msRest.ServiceCallback<Models.OperationListResult>\n  ): Promise<Models.OperationsListNextResponse> {\n    return this.client.sendOperationRequest(\n      {\n        nextPageLink,\n        options\n      },\n      listNextOperationSpec,\n      callback\n    ) as Promise<Models.OperationsListNextResponse>;\n  }\n}\n\n// Operation Specifications\nconst serializer = new msRest.Serializer(Mappers);\nconst listOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"GET\",\n  path: \"providers/Microsoft.Resources/operations\",\n  queryParameters: [Parameters.apiVersion],\n  headerParameters: [Parameters.acceptLanguage],\n  responses: {\n    200: {\n      bodyMapper: Mappers.OperationListResult\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  serializer\n};\n\nconst listNextOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"GET\",\n  baseUrl: \"https://management.azure.com\",\n  path: \"{nextLink}\",\n  urlParameters: [Parameters.nextPageLink],\n  queryParameters: [Parameters.apiVersion],\n  headerParameters: [Parameters.acceptLanguage],\n  responses: {\n    200: {\n      bodyMapper: Mappers.OperationListResult\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nexport {\n  Alias,\n  AliasPath,\n  AliasPathMetadata,\n  AliasPattern,\n  ApiProfile,\n  BaseResource,\n  BasicDependency,\n  CloudError,\n  DebugSetting,\n  Dependency,\n  Deployment,\n  DeploymentExportResult,\n  DeploymentExtended,\n  DeploymentListResult,\n  DeploymentProperties,\n  DeploymentPropertiesExtended,\n  DeploymentsWhatIfAtManagementGroupScopeHeaders,\n  DeploymentsWhatIfAtSubscriptionScopeHeaders,\n  DeploymentsWhatIfAtTenantScopeHeaders,\n  DeploymentsWhatIfHeaders,\n  DeploymentValidateResult,\n  DeploymentWhatIf,\n  DeploymentWhatIfProperties,\n  DeploymentWhatIfSettings,\n  ErrorAdditionalInfo,\n  ErrorResponse,\n  ExpressionEvaluationOptions,\n  ExtendedLocation,\n  GenericResource,\n  GenericResourceExpanded,\n  Identity,\n  IdentityUserAssignedIdentitiesValue,\n  OnErrorDeployment,\n  OnErrorDeploymentExtended,\n  ParametersLink,\n  Plan,\n  Provider,\n  ProviderExtendedLocation,\n  ProviderResourceType,\n  Resource,\n  ResourceGroup,\n  ResourceGroupProperties,\n  ResourceReference,\n  ScopedDeployment,\n  ScopedDeploymentWhatIf,\n  Sku,\n  SubResource,\n  TagCount,\n  TagDetails,\n  Tags,\n  TagsResource,\n  TagValue,\n  TemplateHashResult,\n  TemplateLink,\n  WhatIfChange,\n  WhatIfOperationResult,\n  WhatIfPropertyChange\n} from \"../models/mappers\";\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is\n * regenerated.\n */\n\nimport * as msRest from \"@azure/ms-rest-js\";\nimport * as msRestAzure from \"@azure/ms-rest-azure-js\";\nimport * as Models from \"../models\";\nimport * as Mappers from \"../models/deploymentsMappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { ResourceManagementClientContext } from \"../resourceManagementClientContext\";\n\n/** Class representing a Deployments. */\nexport class Deployments {\n  private readonly client: ResourceManagementClientContext;\n\n  /**\n   * Create a Deployments.\n   * @param {ResourceManagementClientContext} client Reference to the service client.\n   */\n  constructor(client: ResourceManagementClientContext) {\n    this.client = client;\n  }\n\n  /**\n   * A template deployment that is currently running cannot be deleted. Deleting a template\n   * deployment removes the associated deployment operations. This is an asynchronous operation that\n   * returns a status of 202 until the template deployment is successfully deleted. The Location\n   * response header contains the URI that is used to obtain the status of the process. While the\n   * process is running, a call to the URI in the Location header returns a status of 202. When the\n   * process finishes, the URI in the Location header returns a status of 204 on success. If the\n   * asynchronous request failed, the URI in the Location header returns an error-level status code.\n   * @summary Deletes a deployment from the deployment history.\n   * @param scope The resource scope.\n   * @param deploymentName The name of the deployment.\n   * @param [options] The optional parameters\n   * @returns Promise<msRest.RestResponse>\n   */\n  deleteAtScope(\n    scope: string,\n    deploymentName: string,\n    options?: msRest.RequestOptionsBase\n  ): Promise<msRest.RestResponse> {\n    return this.beginDeleteAtScope(scope, deploymentName, options).then((lroPoller) =>\n      lroPoller.pollUntilFinished()\n    );\n  }\n\n  /**\n   * Checks whether the deployment exists.\n   * @param scope The resource scope.\n   * @param deploymentName The name of the deployment.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.DeploymentsCheckExistenceAtScopeResponse>\n   */\n  checkExistenceAtScope(\n    scope: string,\n    deploymentName: string,\n    options?: msRest.RequestOptionsBase\n  ): Promise<Models.DeploymentsCheckExistenceAtScopeResponse>;\n  /**\n   * @param scope The resource scope.\n   * @param deploymentName The name of the deployment.\n   * @param callback The callback\n   */\n  checkExistenceAtScope(\n    scope: string,\n    deploymentName: string,\n    callback: msRest.ServiceCallback<boolean>\n  ): void;\n  /**\n   * @param scope The resource scope.\n   * @param deploymentName The name of the deployment.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  checkExistenceAtScope(\n    scope: string,\n    deploymentName: string,\n    options: msRest.RequestOptionsBase,\n    callback: msRest.ServiceCallback<boolean>\n  ): void;\n  checkExistenceAtScope(\n    scope: string,\n    deploymentName: string,\n    options?: msRest.RequestOptionsBase | msRest.ServiceCallback<boolean>,\n    callback?: msRest.ServiceCallback<boolean>\n  ): Promise<Models.DeploymentsCheckExistenceAtScopeResponse> {\n    return this.client.sendOperationRequest(\n      {\n        scope,\n        deploymentName,\n        options\n      },\n      checkExistenceAtScopeOperationSpec,\n      callback\n    ) as Promise<Models.DeploymentsCheckExistenceAtScopeResponse>;\n  }\n\n  /**\n   * You can provide the template and parameters directly in the request or link to JSON files.\n   * @summary Deploys resources at a given scope.\n   * @param scope The resource scope.\n   * @param deploymentName The name of the deployment.\n   * @param parameters Additional parameters supplied to the operation.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.DeploymentsCreateOrUpdateAtScopeResponse>\n   */\n  createOrUpdateAtScope(\n    scope: string,\n    deploymentName: string,\n    parameters: Models.Deployment,\n    options?: msRest.RequestOptionsBase\n  ): Promise<Models.DeploymentsCreateOrUpdateAtScopeResponse> {\n    return this.beginCreateOrUpdateAtScope(\n      scope,\n      deploymentName,\n      parameters,\n      options\n    ).then((lroPoller) => lroPoller.pollUntilFinished()) as Promise<\n      Models.DeploymentsCreateOrUpdateAtScopeResponse\n    >;\n  }\n\n  /**\n   * Gets a deployment.\n   * @param scope The resource scope.\n   * @param deploymentName The name of the deployment.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.DeploymentsGetAtScopeResponse>\n   */\n  getAtScope(\n    scope: string,\n    deploymentName: string,\n    options?: msRest.RequestOptionsBase\n  ): Promise<Models.DeploymentsGetAtScopeResponse>;\n  /**\n   * @param scope The resource scope.\n   * @param deploymentName The name of the deployment.\n   * @param callback The callback\n   */\n  getAtScope(\n    scope: string,\n    deploymentName: string,\n    callback: msRest.ServiceCallback<Models.DeploymentExtended>\n  ): void;\n  /**\n   * @param scope The resource scope.\n   * @param deploymentName The name of the deployment.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  getAtScope(\n    scope: string,\n    deploymentName: string,\n    options: msRest.RequestOptionsBase,\n    callback: msRest.ServiceCallback<Models.DeploymentExtended>\n  ): void;\n  getAtScope(\n    scope: string,\n    deploymentName: string,\n    options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.DeploymentExtended>,\n    callback?: msRest.ServiceCallback<Models.DeploymentExtended>\n  ): Promise<Models.DeploymentsGetAtScopeResponse> {\n    return this.client.sendOperationRequest(\n      {\n        scope,\n        deploymentName,\n        options\n      },\n      getAtScopeOperationSpec,\n      callback\n    ) as Promise<Models.DeploymentsGetAtScopeResponse>;\n  }\n\n  /**\n   * You can cancel a deployment only if the provisioningState is Accepted or Running. After the\n   * deployment is canceled, the provisioningState is set to Canceled. Canceling a template\n   * deployment stops the currently running template deployment and leaves the resources partially\n   * deployed.\n   * @summary Cancels a currently running template deployment.\n   * @param scope The resource scope.\n   * @param deploymentName The name of the deployment.\n   * @param [options] The optional parameters\n   * @returns Promise<msRest.RestResponse>\n   */\n  cancelAtScope(\n    scope: string,\n    deploymentName: string,\n    options?: msRest.RequestOptionsBase\n  ): Promise<msRest.RestResponse>;\n  /**\n   * @param scope The resource scope.\n   * @param deploymentName The name of the deployment.\n   * @param callback The callback\n   */\n  cancelAtScope(\n    scope: string,\n    deploymentName: string,\n    callback: msRest.ServiceCallback<void>\n  ): void;\n  /**\n   * @param scope The resource scope.\n   * @param deploymentName The name of the deployment.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  cancelAtScope(\n    scope: string,\n    deploymentName: string,\n    options: msRest.RequestOptionsBase,\n    callback: msRest.ServiceCallback<void>\n  ): void;\n  cancelAtScope(\n    scope: string,\n    deploymentName: string,\n    options?: msRest.RequestOptionsBase | msRest.ServiceCallback<void>,\n    callback?: msRest.ServiceCallback<void>\n  ): Promise<msRest.RestResponse> {\n    return this.client.sendOperationRequest(\n      {\n        scope,\n        deploymentName,\n        options\n      },\n      cancelAtScopeOperationSpec,\n      callback\n    );\n  }\n\n  /**\n   * Validates whether the specified template is syntactically correct and will be accepted by Azure\n   * Resource Manager..\n   * @param scope The resource scope.\n   * @param deploymentName The name of the deployment.\n   * @param parameters Parameters to validate.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.DeploymentsValidateAtScopeResponse>\n   */\n  validateAtScope(\n    scope: string,\n    deploymentName: string,\n    parameters: Models.Deployment,\n    options?: msRest.RequestOptionsBase\n  ): Promise<Models.DeploymentsValidateAtScopeResponse> {\n    return this.beginValidateAtScope(scope, deploymentName, parameters, options).then((lroPoller) =>\n      lroPoller.pollUntilFinished()\n    ) as Promise<Models.DeploymentsValidateAtScopeResponse>;\n  }\n\n  /**\n   * Exports the template used for specified deployment.\n   * @param scope The resource scope.\n   * @param deploymentName The name of the deployment.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.DeploymentsExportTemplateAtScopeResponse>\n   */\n  exportTemplateAtScope(\n    scope: string,\n    deploymentName: string,\n    options?: msRest.RequestOptionsBase\n  ): Promise<Models.DeploymentsExportTemplateAtScopeResponse>;\n  /**\n   * @param scope The resource scope.\n   * @param deploymentName The name of the deployment.\n   * @param callback The callback\n   */\n  exportTemplateAtScope(\n    scope: string,\n    deploymentName: string,\n    callback: msRest.ServiceCallback<Models.DeploymentExportResult>\n  ): void;\n  /**\n   * @param scope The resource scope.\n   * @param deploymentName The name of the deployment.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  exportTemplateAtScope(\n    scope: string,\n    deploymentName: string,\n    options: msRest.RequestOptionsBase,\n    callback: msRest.ServiceCallback<Models.DeploymentExportResult>\n  ): void;\n  exportTemplateAtScope(\n    scope: string,\n    deploymentName: string,\n    options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.DeploymentExportResult>,\n    callback?: msRest.ServiceCallback<Models.DeploymentExportResult>\n  ): Promise<Models.DeploymentsExportTemplateAtScopeResponse> {\n    return this.client.sendOperationRequest(\n      {\n        scope,\n        deploymentName,\n        options\n      },\n      exportTemplateAtScopeOperationSpec,\n      callback\n    ) as Promise<Models.DeploymentsExportTemplateAtScopeResponse>;\n  }\n\n  /**\n   * Get all the deployments at the given scope.\n   * @param scope The resource scope.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.DeploymentsListAtScopeResponse>\n   */\n  listAtScope(\n    scope: string,\n    options?: Models.DeploymentsListAtScopeOptionalParams\n  ): Promise<Models.DeploymentsListAtScopeResponse>;\n  /**\n   * @param scope The resource scope.\n   * @param callback The callback\n   */\n  listAtScope(scope: string, callback: msRest.ServiceCallback<Models.DeploymentListResult>): void;\n  /**\n   * @param scope The resource scope.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  listAtScope(\n    scope: string,\n    options: Models.DeploymentsListAtScopeOptionalParams,\n    callback: msRest.ServiceCallback<Models.DeploymentListResult>\n  ): void;\n  listAtScope(\n    scope: string,\n    options?:\n      | Models.DeploymentsListAtScopeOptionalParams\n      | msRest.ServiceCallback<Models.DeploymentListResult>,\n    callback?: msRest.ServiceCallback<Models.DeploymentListResult>\n  ): Promise<Models.DeploymentsListAtScopeResponse> {\n    return this.client.sendOperationRequest(\n      {\n        scope,\n        options\n      },\n      listAtScopeOperationSpec,\n      callback\n    ) as Promise<Models.DeploymentsListAtScopeResponse>;\n  }\n\n  /**\n   * A template deployment that is currently running cannot be deleted. Deleting a template\n   * deployment removes the associated deployment operations. This is an asynchronous operation that\n   * returns a status of 202 until the template deployment is successfully deleted. The Location\n   * response header contains the URI that is used to obtain the status of the process. While the\n   * process is running, a call to the URI in the Location header returns a status of 202. When the\n   * process finishes, the URI in the Location header returns a status of 204 on success. If the\n   * asynchronous request failed, the URI in the Location header returns an error-level status code.\n   * @summary Deletes a deployment from the deployment history.\n   * @param deploymentName The name of the deployment.\n   * @param [options] The optional parameters\n   * @returns Promise<msRest.RestResponse>\n   */\n  deleteAtTenantScope(\n    deploymentName: string,\n    options?: msRest.RequestOptionsBase\n  ): Promise<msRest.RestResponse> {\n    return this.beginDeleteAtTenantScope(deploymentName, options).then((lroPoller) =>\n      lroPoller.pollUntilFinished()\n    );\n  }\n\n  /**\n   * Checks whether the deployment exists.\n   * @param deploymentName The name of the deployment.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.DeploymentsCheckExistenceAtTenantScopeResponse>\n   */\n  checkExistenceAtTenantScope(\n    deploymentName: string,\n    options?: msRest.RequestOptionsBase\n  ): Promise<Models.DeploymentsCheckExistenceAtTenantScopeResponse>;\n  /**\n   * @param deploymentName The name of the deployment.\n   * @param callback The callback\n   */\n  checkExistenceAtTenantScope(\n    deploymentName: string,\n    callback: msRest.ServiceCallback<boolean>\n  ): void;\n  /**\n   * @param deploymentName The name of the deployment.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  checkExistenceAtTenantScope(\n    deploymentName: string,\n    options: msRest.RequestOptionsBase,\n    callback: msRest.ServiceCallback<boolean>\n  ): void;\n  checkExistenceAtTenantScope(\n    deploymentName: string,\n    options?: msRest.RequestOptionsBase | msRest.ServiceCallback<boolean>,\n    callback?: msRest.ServiceCallback<boolean>\n  ): Promise<Models.DeploymentsCheckExistenceAtTenantScopeResponse> {\n    return this.client.sendOperationRequest(\n      {\n        deploymentName,\n        options\n      },\n      checkExistenceAtTenantScopeOperationSpec,\n      callback\n    ) as Promise<Models.DeploymentsCheckExistenceAtTenantScopeResponse>;\n  }\n\n  /**\n   * You can provide the template and parameters directly in the request or link to JSON files.\n   * @summary Deploys resources at tenant scope.\n   * @param deploymentName The name of the deployment.\n   * @param parameters Additional parameters supplied to the operation.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.DeploymentsCreateOrUpdateAtTenantScopeResponse>\n   */\n  createOrUpdateAtTenantScope(\n    deploymentName: string,\n    parameters: Models.ScopedDeployment,\n    options?: msRest.RequestOptionsBase\n  ): Promise<Models.DeploymentsCreateOrUpdateAtTenantScopeResponse> {\n    return this.beginCreateOrUpdateAtTenantScope(\n      deploymentName,\n      parameters,\n      options\n    ).then((lroPoller) => lroPoller.pollUntilFinished()) as Promise<\n      Models.DeploymentsCreateOrUpdateAtTenantScopeResponse\n    >;\n  }\n\n  /**\n   * Gets a deployment.\n   * @param deploymentName The name of the deployment.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.DeploymentsGetAtTenantScopeResponse>\n   */\n  getAtTenantScope(\n    deploymentName: string,\n    options?: msRest.RequestOptionsBase\n  ): Promise<Models.DeploymentsGetAtTenantScopeResponse>;\n  /**\n   * @param deploymentName The name of the deployment.\n   * @param callback The callback\n   */\n  getAtTenantScope(\n    deploymentName: string,\n    callback: msRest.ServiceCallback<Models.DeploymentExtended>\n  ): void;\n  /**\n   * @param deploymentName The name of the deployment.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  getAtTenantScope(\n    deploymentName: string,\n    options: msRest.RequestOptionsBase,\n    callback: msRest.ServiceCallback<Models.DeploymentExtended>\n  ): void;\n  getAtTenantScope(\n    deploymentName: string,\n    options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.DeploymentExtended>,\n    callback?: msRest.ServiceCallback<Models.DeploymentExtended>\n  ): Promise<Models.DeploymentsGetAtTenantScopeResponse> {\n    return this.client.sendOperationRequest(\n      {\n        deploymentName,\n        options\n      },\n      getAtTenantScopeOperationSpec,\n      callback\n    ) as Promise<Models.DeploymentsGetAtTenantScopeResponse>;\n  }\n\n  /**\n   * You can cancel a deployment only if the provisioningState is Accepted or Running. After the\n   * deployment is canceled, the provisioningState is set to Canceled. Canceling a template\n   * deployment stops the currently running template deployment and leaves the resources partially\n   * deployed.\n   * @summary Cancels a currently running template deployment.\n   * @param deploymentName The name of the deployment.\n   * @param [options] The optional parameters\n   * @returns Promise<msRest.RestResponse>\n   */\n  cancelAtTenantScope(\n    deploymentName: string,\n    options?: msRest.RequestOptionsBase\n  ): Promise<msRest.RestResponse>;\n  /**\n   * @param deploymentName The name of the deployment.\n   * @param callback The callback\n   */\n  cancelAtTenantScope(deploymentName: string, callback: msRest.ServiceCallback<void>): void;\n  /**\n   * @param deploymentName The name of the deployment.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  cancelAtTenantScope(\n    deploymentName: string,\n    options: msRest.RequestOptionsBase,\n    callback: msRest.ServiceCallback<void>\n  ): void;\n  cancelAtTenantScope(\n    deploymentName: string,\n    options?: msRest.RequestOptionsBase | msRest.ServiceCallback<void>,\n    callback?: msRest.ServiceCallback<void>\n  ): Promise<msRest.RestResponse> {\n    return this.client.sendOperationRequest(\n      {\n        deploymentName,\n        options\n      },\n      cancelAtTenantScopeOperationSpec,\n      callback\n    );\n  }\n\n  /**\n   * Validates whether the specified template is syntactically correct and will be accepted by Azure\n   * Resource Manager..\n   * @param deploymentName The name of the deployment.\n   * @param parameters Parameters to validate.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.DeploymentsValidateAtTenantScopeResponse>\n   */\n  validateAtTenantScope(\n    deploymentName: string,\n    parameters: Models.ScopedDeployment,\n    options?: msRest.RequestOptionsBase\n  ): Promise<Models.DeploymentsValidateAtTenantScopeResponse> {\n    return this.beginValidateAtTenantScope(deploymentName, parameters, options).then((lroPoller) =>\n      lroPoller.pollUntilFinished()\n    ) as Promise<Models.DeploymentsValidateAtTenantScopeResponse>;\n  }\n\n  /**\n   * Returns changes that will be made by the deployment if executed at the scope of the tenant\n   * group.\n   * @param deploymentName The name of the deployment.\n   * @param parameters Parameters to validate.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.DeploymentsWhatIfAtTenantScopeResponse>\n   */\n  whatIfAtTenantScope(\n    deploymentName: string,\n    parameters: Models.ScopedDeploymentWhatIf,\n    options?: msRest.RequestOptionsBase\n  ): Promise<Models.DeploymentsWhatIfAtTenantScopeResponse> {\n    return this.beginWhatIfAtTenantScope(deploymentName, parameters, options).then((lroPoller) =>\n      lroPoller.pollUntilFinished()\n    ) as Promise<Models.DeploymentsWhatIfAtTenantScopeResponse>;\n  }\n\n  /**\n   * Exports the template used for specified deployment.\n   * @param deploymentName The name of the deployment.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.DeploymentsExportTemplateAtTenantScopeResponse>\n   */\n  exportTemplateAtTenantScope(\n    deploymentName: string,\n    options?: msRest.RequestOptionsBase\n  ): Promise<Models.DeploymentsExportTemplateAtTenantScopeResponse>;\n  /**\n   * @param deploymentName The name of the deployment.\n   * @param callback The callback\n   */\n  exportTemplateAtTenantScope(\n    deploymentName: string,\n    callback: msRest.ServiceCallback<Models.DeploymentExportResult>\n  ): void;\n  /**\n   * @param deploymentName The name of the deployment.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  exportTemplateAtTenantScope(\n    deploymentName: string,\n    options: msRest.RequestOptionsBase,\n    callback: msRest.ServiceCallback<Models.DeploymentExportResult>\n  ): void;\n  exportTemplateAtTenantScope(\n    deploymentName: string,\n    options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.DeploymentExportResult>,\n    callback?: msRest.ServiceCallback<Models.DeploymentExportResult>\n  ): Promise<Models.DeploymentsExportTemplateAtTenantScopeResponse> {\n    return this.client.sendOperationRequest(\n      {\n        deploymentName,\n        options\n      },\n      exportTemplateAtTenantScopeOperationSpec,\n      callback\n    ) as Promise<Models.DeploymentsExportTemplateAtTenantScopeResponse>;\n  }\n\n  /**\n   * Get all the deployments at the tenant scope.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.DeploymentsListAtTenantScopeResponse>\n   */\n  listAtTenantScope(\n    options?: Models.DeploymentsListAtTenantScopeOptionalParams\n  ): Promise<Models.DeploymentsListAtTenantScopeResponse>;\n  /**\n   * @param callback The callback\n   */\n  listAtTenantScope(callback: msRest.ServiceCallback<Models.DeploymentListResult>): void;\n  /**\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  listAtTenantScope(\n    options: Models.DeploymentsListAtTenantScopeOptionalParams,\n    callback: msRest.ServiceCallback<Models.DeploymentListResult>\n  ): void;\n  listAtTenantScope(\n    options?:\n      | Models.DeploymentsListAtTenantScopeOptionalParams\n      | msRest.ServiceCallback<Models.DeploymentListResult>,\n    callback?: msRest.ServiceCallback<Models.DeploymentListResult>\n  ): Promise<Models.DeploymentsListAtTenantScopeResponse> {\n    return this.client.sendOperationRequest(\n      {\n        options\n      },\n      listAtTenantScopeOperationSpec,\n      callback\n    ) as Promise<Models.DeploymentsListAtTenantScopeResponse>;\n  }\n\n  /**\n   * A template deployment that is currently running cannot be deleted. Deleting a template\n   * deployment removes the associated deployment operations. This is an asynchronous operation that\n   * returns a status of 202 until the template deployment is successfully deleted. The Location\n   * response header contains the URI that is used to obtain the status of the process. While the\n   * process is running, a call to the URI in the Location header returns a status of 202. When the\n   * process finishes, the URI in the Location header returns a status of 204 on success. If the\n   * asynchronous request failed, the URI in the Location header returns an error-level status code.\n   * @summary Deletes a deployment from the deployment history.\n   * @param groupId The management group ID.\n   * @param deploymentName The name of the deployment.\n   * @param [options] The optional parameters\n   * @returns Promise<msRest.RestResponse>\n   */\n  deleteAtManagementGroupScope(\n    groupId: string,\n    deploymentName: string,\n    options?: msRest.RequestOptionsBase\n  ): Promise<msRest.RestResponse> {\n    return this.beginDeleteAtManagementGroupScope(\n      groupId,\n      deploymentName,\n      options\n    ).then((lroPoller) => lroPoller.pollUntilFinished());\n  }\n\n  /**\n   * Checks whether the deployment exists.\n   * @param groupId The management group ID.\n   * @param deploymentName The name of the deployment.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.DeploymentsCheckExistenceAtManagementGroupScopeResponse>\n   */\n  checkExistenceAtManagementGroupScope(\n    groupId: string,\n    deploymentName: string,\n    options?: msRest.RequestOptionsBase\n  ): Promise<Models.DeploymentsCheckExistenceAtManagementGroupScopeResponse>;\n  /**\n   * @param groupId The management group ID.\n   * @param deploymentName The name of the deployment.\n   * @param callback The callback\n   */\n  checkExistenceAtManagementGroupScope(\n    groupId: string,\n    deploymentName: string,\n    callback: msRest.ServiceCallback<boolean>\n  ): void;\n  /**\n   * @param groupId The management group ID.\n   * @param deploymentName The name of the deployment.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  checkExistenceAtManagementGroupScope(\n    groupId: string,\n    deploymentName: string,\n    options: msRest.RequestOptionsBase,\n    callback: msRest.ServiceCallback<boolean>\n  ): void;\n  checkExistenceAtManagementGroupScope(\n    groupId: string,\n    deploymentName: string,\n    options?: msRest.RequestOptionsBase | msRest.ServiceCallback<boolean>,\n    callback?: msRest.ServiceCallback<boolean>\n  ): Promise<Models.DeploymentsCheckExistenceAtManagementGroupScopeResponse> {\n    return this.client.sendOperationRequest(\n      {\n        groupId,\n        deploymentName,\n        options\n      },\n      checkExistenceAtManagementGroupScopeOperationSpec,\n      callback\n    ) as Promise<Models.DeploymentsCheckExistenceAtManagementGroupScopeResponse>;\n  }\n\n  /**\n   * You can provide the template and parameters directly in the request or link to JSON files.\n   * @summary Deploys resources at management group scope.\n   * @param groupId The management group ID.\n   * @param deploymentName The name of the deployment.\n   * @param parameters Additional parameters supplied to the operation.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.DeploymentsCreateOrUpdateAtManagementGroupScopeResponse>\n   */\n  createOrUpdateAtManagementGroupScope(\n    groupId: string,\n    deploymentName: string,\n    parameters: Models.ScopedDeployment,\n    options?: msRest.RequestOptionsBase\n  ): Promise<Models.DeploymentsCreateOrUpdateAtManagementGroupScopeResponse> {\n    return this.beginCreateOrUpdateAtManagementGroupScope(\n      groupId,\n      deploymentName,\n      parameters,\n      options\n    ).then((lroPoller) => lroPoller.pollUntilFinished()) as Promise<\n      Models.DeploymentsCreateOrUpdateAtManagementGroupScopeResponse\n    >;\n  }\n\n  /**\n   * Gets a deployment.\n   * @param groupId The management group ID.\n   * @param deploymentName The name of the deployment.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.DeploymentsGetAtManagementGroupScopeResponse>\n   */\n  getAtManagementGroupScope(\n    groupId: string,\n    deploymentName: string,\n    options?: msRest.RequestOptionsBase\n  ): Promise<Models.DeploymentsGetAtManagementGroupScopeResponse>;\n  /**\n   * @param groupId The management group ID.\n   * @param deploymentName The name of the deployment.\n   * @param callback The callback\n   */\n  getAtManagementGroupScope(\n    groupId: string,\n    deploymentName: string,\n    callback: msRest.ServiceCallback<Models.DeploymentExtended>\n  ): void;\n  /**\n   * @param groupId The management group ID.\n   * @param deploymentName The name of the deployment.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  getAtManagementGroupScope(\n    groupId: string,\n    deploymentName: string,\n    options: msRest.RequestOptionsBase,\n    callback: msRest.ServiceCallback<Models.DeploymentExtended>\n  ): void;\n  getAtManagementGroupScope(\n    groupId: string,\n    deploymentName: string,\n    options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.DeploymentExtended>,\n    callback?: msRest.ServiceCallback<Models.DeploymentExtended>\n  ): Promise<Models.DeploymentsGetAtManagementGroupScopeResponse> {\n    return this.client.sendOperationRequest(\n      {\n        groupId,\n        deploymentName,\n        options\n      },\n      getAtManagementGroupScopeOperationSpec,\n      callback\n    ) as Promise<Models.DeploymentsGetAtManagementGroupScopeResponse>;\n  }\n\n  /**\n   * You can cancel a deployment only if the provisioningState is Accepted or Running. After the\n   * deployment is canceled, the provisioningState is set to Canceled. Canceling a template\n   * deployment stops the currently running template deployment and leaves the resources partially\n   * deployed.\n   * @summary Cancels a currently running template deployment.\n   * @param groupId The management group ID.\n   * @param deploymentName The name of the deployment.\n   * @param [options] The optional parameters\n   * @returns Promise<msRest.RestResponse>\n   */\n  cancelAtManagementGroupScope(\n    groupId: string,\n    deploymentName: string,\n    options?: msRest.RequestOptionsBase\n  ): Promise<msRest.RestResponse>;\n  /**\n   * @param groupId The management group ID.\n   * @param deploymentName The name of the deployment.\n   * @param callback The callback\n   */\n  cancelAtManagementGroupScope(\n    groupId: string,\n    deploymentName: string,\n    callback: msRest.ServiceCallback<void>\n  ): void;\n  /**\n   * @param groupId The management group ID.\n   * @param deploymentName The name of the deployment.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  cancelAtManagementGroupScope(\n    groupId: string,\n    deploymentName: string,\n    options: msRest.RequestOptionsBase,\n    callback: msRest.ServiceCallback<void>\n  ): void;\n  cancelAtManagementGroupScope(\n    groupId: string,\n    deploymentName: string,\n    options?: msRest.RequestOptionsBase | msRest.ServiceCallback<void>,\n    callback?: msRest.ServiceCallback<void>\n  ): Promise<msRest.RestResponse> {\n    return this.client.sendOperationRequest(\n      {\n        groupId,\n        deploymentName,\n        options\n      },\n      cancelAtManagementGroupScopeOperationSpec,\n      callback\n    );\n  }\n\n  /**\n   * Validates whether the specified template is syntactically correct and will be accepted by Azure\n   * Resource Manager..\n   * @param groupId The management group ID.\n   * @param deploymentName The name of the deployment.\n   * @param parameters Parameters to validate.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.DeploymentsValidateAtManagementGroupScopeResponse>\n   */\n  validateAtManagementGroupScope(\n    groupId: string,\n    deploymentName: string,\n    parameters: Models.ScopedDeployment,\n    options?: msRest.RequestOptionsBase\n  ): Promise<Models.DeploymentsValidateAtManagementGroupScopeResponse> {\n    return this.beginValidateAtManagementGroupScope(\n      groupId,\n      deploymentName,\n      parameters,\n      options\n    ).then((lroPoller) => lroPoller.pollUntilFinished()) as Promise<\n      Models.DeploymentsValidateAtManagementGroupScopeResponse\n    >;\n  }\n\n  /**\n   * Returns changes that will be made by the deployment if executed at the scope of the management\n   * group.\n   * @param groupId The management group ID.\n   * @param deploymentName The name of the deployment.\n   * @param parameters Parameters to validate.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.DeploymentsWhatIfAtManagementGroupScopeResponse>\n   */\n  whatIfAtManagementGroupScope(\n    groupId: string,\n    deploymentName: string,\n    parameters: Models.ScopedDeploymentWhatIf,\n    options?: msRest.RequestOptionsBase\n  ): Promise<Models.DeploymentsWhatIfAtManagementGroupScopeResponse> {\n    return this.beginWhatIfAtManagementGroupScope(\n      groupId,\n      deploymentName,\n      parameters,\n      options\n    ).then((lroPoller) => lroPoller.pollUntilFinished()) as Promise<\n      Models.DeploymentsWhatIfAtManagementGroupScopeResponse\n    >;\n  }\n\n  /**\n   * Exports the template used for specified deployment.\n   * @param groupId The management group ID.\n   * @param deploymentName The name of the deployment.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.DeploymentsExportTemplateAtManagementGroupScopeResponse>\n   */\n  exportTemplateAtManagementGroupScope(\n    groupId: string,\n    deploymentName: string,\n    options?: msRest.RequestOptionsBase\n  ): Promise<Models.DeploymentsExportTemplateAtManagementGroupScopeResponse>;\n  /**\n   * @param groupId The management group ID.\n   * @param deploymentName The name of the deployment.\n   * @param callback The callback\n   */\n  exportTemplateAtManagementGroupScope(\n    groupId: string,\n    deploymentName: string,\n    callback: msRest.ServiceCallback<Models.DeploymentExportResult>\n  ): void;\n  /**\n   * @param groupId The management group ID.\n   * @param deploymentName The name of the deployment.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  exportTemplateAtManagementGroupScope(\n    groupId: string,\n    deploymentName: string,\n    options: msRest.RequestOptionsBase,\n    callback: msRest.ServiceCallback<Models.DeploymentExportResult>\n  ): void;\n  exportTemplateAtManagementGroupScope(\n    groupId: string,\n    deploymentName: string,\n    options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.DeploymentExportResult>,\n    callback?: msRest.ServiceCallback<Models.DeploymentExportResult>\n  ): Promise<Models.DeploymentsExportTemplateAtManagementGroupScopeResponse> {\n    return this.client.sendOperationRequest(\n      {\n        groupId,\n        deploymentName,\n        options\n      },\n      exportTemplateAtManagementGroupScopeOperationSpec,\n      callback\n    ) as Promise<Models.DeploymentsExportTemplateAtManagementGroupScopeResponse>;\n  }\n\n  /**\n   * Get all the deployments for a management group.\n   * @param groupId The management group ID.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.DeploymentsListAtManagementGroupScopeResponse>\n   */\n  listAtManagementGroupScope(\n    groupId: string,\n    options?: Models.DeploymentsListAtManagementGroupScopeOptionalParams\n  ): Promise<Models.DeploymentsListAtManagementGroupScopeResponse>;\n  /**\n   * @param groupId The management group ID.\n   * @param callback The callback\n   */\n  listAtManagementGroupScope(\n    groupId: string,\n    callback: msRest.ServiceCallback<Models.DeploymentListResult>\n  ): void;\n  /**\n   * @param groupId The management group ID.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  listAtManagementGroupScope(\n    groupId: string,\n    options: Models.DeploymentsListAtManagementGroupScopeOptionalParams,\n    callback: msRest.ServiceCallback<Models.DeploymentListResult>\n  ): void;\n  listAtManagementGroupScope(\n    groupId: string,\n    options?:\n      | Models.DeploymentsListAtManagementGroupScopeOptionalParams\n      | msRest.ServiceCallback<Models.DeploymentListResult>,\n    callback?: msRest.ServiceCallback<Models.DeploymentListResult>\n  ): Promise<Models.DeploymentsListAtManagementGroupScopeResponse> {\n    return this.client.sendOperationRequest(\n      {\n        groupId,\n        options\n      },\n      listAtManagementGroupScopeOperationSpec,\n      callback\n    ) as Promise<Models.DeploymentsListAtManagementGroupScopeResponse>;\n  }\n\n  /**\n   * A template deployment that is currently running cannot be deleted. Deleting a template\n   * deployment removes the associated deployment operations. This is an asynchronous operation that\n   * returns a status of 202 until the template deployment is successfully deleted. The Location\n   * response header contains the URI that is used to obtain the status of the process. While the\n   * process is running, a call to the URI in the Location header returns a status of 202. When the\n   * process finishes, the URI in the Location header returns a status of 204 on success. If the\n   * asynchronous request failed, the URI in the Location header returns an error-level status code.\n   * @summary Deletes a deployment from the deployment history.\n   * @param deploymentName The name of the deployment.\n   * @param [options] The optional parameters\n   * @returns Promise<msRest.RestResponse>\n   */\n  deleteAtSubscriptionScope(\n    deploymentName: string,\n    options?: msRest.RequestOptionsBase\n  ): Promise<msRest.RestResponse> {\n    return this.beginDeleteAtSubscriptionScope(deploymentName, options).then((lroPoller) =>\n      lroPoller.pollUntilFinished()\n    );\n  }\n\n  /**\n   * Checks whether the deployment exists.\n   * @param deploymentName The name of the deployment.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.DeploymentsCheckExistenceAtSubscriptionScopeResponse>\n   */\n  checkExistenceAtSubscriptionScope(\n    deploymentName: string,\n    options?: msRest.RequestOptionsBase\n  ): Promise<Models.DeploymentsCheckExistenceAtSubscriptionScopeResponse>;\n  /**\n   * @param deploymentName The name of the deployment.\n   * @param callback The callback\n   */\n  checkExistenceAtSubscriptionScope(\n    deploymentName: string,\n    callback: msRest.ServiceCallback<boolean>\n  ): void;\n  /**\n   * @param deploymentName The name of the deployment.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  checkExistenceAtSubscriptionScope(\n    deploymentName: string,\n    options: msRest.RequestOptionsBase,\n    callback: msRest.ServiceCallback<boolean>\n  ): void;\n  checkExistenceAtSubscriptionScope(\n    deploymentName: string,\n    options?: msRest.RequestOptionsBase | msRest.ServiceCallback<boolean>,\n    callback?: msRest.ServiceCallback<boolean>\n  ): Promise<Models.DeploymentsCheckExistenceAtSubscriptionScopeResponse> {\n    return this.client.sendOperationRequest(\n      {\n        deploymentName,\n        options\n      },\n      checkExistenceAtSubscriptionScopeOperationSpec,\n      callback\n    ) as Promise<Models.DeploymentsCheckExistenceAtSubscriptionScopeResponse>;\n  }\n\n  /**\n   * You can provide the template and parameters directly in the request or link to JSON files.\n   * @summary Deploys resources at subscription scope.\n   * @param deploymentName The name of the deployment.\n   * @param parameters Additional parameters supplied to the operation.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.DeploymentsCreateOrUpdateAtSubscriptionScopeResponse>\n   */\n  createOrUpdateAtSubscriptionScope(\n    deploymentName: string,\n    parameters: Models.Deployment,\n    options?: msRest.RequestOptionsBase\n  ): Promise<Models.DeploymentsCreateOrUpdateAtSubscriptionScopeResponse> {\n    return this.beginCreateOrUpdateAtSubscriptionScope(\n      deploymentName,\n      parameters,\n      options\n    ).then((lroPoller) => lroPoller.pollUntilFinished()) as Promise<\n      Models.DeploymentsCreateOrUpdateAtSubscriptionScopeResponse\n    >;\n  }\n\n  /**\n   * Gets a deployment.\n   * @param deploymentName The name of the deployment.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.DeploymentsGetAtSubscriptionScopeResponse>\n   */\n  getAtSubscriptionScope(\n    deploymentName: string,\n    options?: msRest.RequestOptionsBase\n  ): Promise<Models.DeploymentsGetAtSubscriptionScopeResponse>;\n  /**\n   * @param deploymentName The name of the deployment.\n   * @param callback The callback\n   */\n  getAtSubscriptionScope(\n    deploymentName: string,\n    callback: msRest.ServiceCallback<Models.DeploymentExtended>\n  ): void;\n  /**\n   * @param deploymentName The name of the deployment.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  getAtSubscriptionScope(\n    deploymentName: string,\n    options: msRest.RequestOptionsBase,\n    callback: msRest.ServiceCallback<Models.DeploymentExtended>\n  ): void;\n  getAtSubscriptionScope(\n    deploymentName: string,\n    options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.DeploymentExtended>,\n    callback?: msRest.ServiceCallback<Models.DeploymentExtended>\n  ): Promise<Models.DeploymentsGetAtSubscriptionScopeResponse> {\n    return this.client.sendOperationRequest(\n      {\n        deploymentName,\n        options\n      },\n      getAtSubscriptionScopeOperationSpec,\n      callback\n    ) as Promise<Models.DeploymentsGetAtSubscriptionScopeResponse>;\n  }\n\n  /**\n   * You can cancel a deployment only if the provisioningState is Accepted or Running. After the\n   * deployment is canceled, the provisioningState is set to Canceled. Canceling a template\n   * deployment stops the currently running template deployment and leaves the resources partially\n   * deployed.\n   * @summary Cancels a currently running template deployment.\n   * @param deploymentName The name of the deployment.\n   * @param [options] The optional parameters\n   * @returns Promise<msRest.RestResponse>\n   */\n  cancelAtSubscriptionScope(\n    deploymentName: string,\n    options?: msRest.RequestOptionsBase\n  ): Promise<msRest.RestResponse>;\n  /**\n   * @param deploymentName The name of the deployment.\n   * @param callback The callback\n   */\n  cancelAtSubscriptionScope(deploymentName: string, callback: msRest.ServiceCallback<void>): void;\n  /**\n   * @param deploymentName The name of the deployment.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  cancelAtSubscriptionScope(\n    deploymentName: string,\n    options: msRest.RequestOptionsBase,\n    callback: msRest.ServiceCallback<void>\n  ): void;\n  cancelAtSubscriptionScope(\n    deploymentName: string,\n    options?: msRest.RequestOptionsBase | msRest.ServiceCallback<void>,\n    callback?: msRest.ServiceCallback<void>\n  ): Promise<msRest.RestResponse> {\n    return this.client.sendOperationRequest(\n      {\n        deploymentName,\n        options\n      },\n      cancelAtSubscriptionScopeOperationSpec,\n      callback\n    );\n  }\n\n  /**\n   * Validates whether the specified template is syntactically correct and will be accepted by Azure\n   * Resource Manager..\n   * @param deploymentName The name of the deployment.\n   * @param parameters Parameters to validate.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.DeploymentsValidateAtSubscriptionScopeResponse>\n   */\n  validateAtSubscriptionScope(\n    deploymentName: string,\n    parameters: Models.Deployment,\n    options?: msRest.RequestOptionsBase\n  ): Promise<Models.DeploymentsValidateAtSubscriptionScopeResponse> {\n    return this.beginValidateAtSubscriptionScope(\n      deploymentName,\n      parameters,\n      options\n    ).then((lroPoller) => lroPoller.pollUntilFinished()) as Promise<\n      Models.DeploymentsValidateAtSubscriptionScopeResponse\n    >;\n  }\n\n  /**\n   * Returns changes that will be made by the deployment if executed at the scope of the\n   * subscription.\n   * @param deploymentName The name of the deployment.\n   * @param parameters Parameters to What If.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.DeploymentsWhatIfAtSubscriptionScopeResponse>\n   */\n  whatIfAtSubscriptionScope(\n    deploymentName: string,\n    parameters: Models.DeploymentWhatIf,\n    options?: msRest.RequestOptionsBase\n  ): Promise<Models.DeploymentsWhatIfAtSubscriptionScopeResponse> {\n    return this.beginWhatIfAtSubscriptionScope(\n      deploymentName,\n      parameters,\n      options\n    ).then((lroPoller) => lroPoller.pollUntilFinished()) as Promise<\n      Models.DeploymentsWhatIfAtSubscriptionScopeResponse\n    >;\n  }\n\n  /**\n   * Exports the template used for specified deployment.\n   * @param deploymentName The name of the deployment.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.DeploymentsExportTemplateAtSubscriptionScopeResponse>\n   */\n  exportTemplateAtSubscriptionScope(\n    deploymentName: string,\n    options?: msRest.RequestOptionsBase\n  ): Promise<Models.DeploymentsExportTemplateAtSubscriptionScopeResponse>;\n  /**\n   * @param deploymentName The name of the deployment.\n   * @param callback The callback\n   */\n  exportTemplateAtSubscriptionScope(\n    deploymentName: string,\n    callback: msRest.ServiceCallback<Models.DeploymentExportResult>\n  ): void;\n  /**\n   * @param deploymentName The name of the deployment.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  exportTemplateAtSubscriptionScope(\n    deploymentName: string,\n    options: msRest.RequestOptionsBase,\n    callback: msRest.ServiceCallback<Models.DeploymentExportResult>\n  ): void;\n  exportTemplateAtSubscriptionScope(\n    deploymentName: string,\n    options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.DeploymentExportResult>,\n    callback?: msRest.ServiceCallback<Models.DeploymentExportResult>\n  ): Promise<Models.DeploymentsExportTemplateAtSubscriptionScopeResponse> {\n    return this.client.sendOperationRequest(\n      {\n        deploymentName,\n        options\n      },\n      exportTemplateAtSubscriptionScopeOperationSpec,\n      callback\n    ) as Promise<Models.DeploymentsExportTemplateAtSubscriptionScopeResponse>;\n  }\n\n  /**\n   * Get all the deployments for a subscription.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.DeploymentsListAtSubscriptionScopeResponse>\n   */\n  listAtSubscriptionScope(\n    options?: Models.DeploymentsListAtSubscriptionScopeOptionalParams\n  ): Promise<Models.DeploymentsListAtSubscriptionScopeResponse>;\n  /**\n   * @param callback The callback\n   */\n  listAtSubscriptionScope(callback: msRest.ServiceCallback<Models.DeploymentListResult>): void;\n  /**\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  listAtSubscriptionScope(\n    options: Models.DeploymentsListAtSubscriptionScopeOptionalParams,\n    callback: msRest.ServiceCallback<Models.DeploymentListResult>\n  ): void;\n  listAtSubscriptionScope(\n    options?:\n      | Models.DeploymentsListAtSubscriptionScopeOptionalParams\n      | msRest.ServiceCallback<Models.DeploymentListResult>,\n    callback?: msRest.ServiceCallback<Models.DeploymentListResult>\n  ): Promise<Models.DeploymentsListAtSubscriptionScopeResponse> {\n    return this.client.sendOperationRequest(\n      {\n        options\n      },\n      listAtSubscriptionScopeOperationSpec,\n      callback\n    ) as Promise<Models.DeploymentsListAtSubscriptionScopeResponse>;\n  }\n\n  /**\n   * A template deployment that is currently running cannot be deleted. Deleting a template\n   * deployment removes the associated deployment operations. Deleting a template deployment does not\n   * affect the state of the resource group. This is an asynchronous operation that returns a status\n   * of 202 until the template deployment is successfully deleted. The Location response header\n   * contains the URI that is used to obtain the status of the process. While the process is running,\n   * a call to the URI in the Location header returns a status of 202. When the process finishes, the\n   * URI in the Location header returns a status of 204 on success. If the asynchronous request\n   * failed, the URI in the Location header returns an error-level status code.\n   * @summary Deletes a deployment from the deployment history.\n   * @param resourceGroupName The name of the resource group with the deployment to delete. The name\n   * is case insensitive.\n   * @param deploymentName The name of the deployment.\n   * @param [options] The optional parameters\n   * @returns Promise<msRest.RestResponse>\n   */\n  deleteMethod(\n    resourceGroupName: string,\n    deploymentName: string,\n    options?: msRest.RequestOptionsBase\n  ): Promise<msRest.RestResponse> {\n    return this.beginDeleteMethod(resourceGroupName, deploymentName, options).then((lroPoller) =>\n      lroPoller.pollUntilFinished()\n    );\n  }\n\n  /**\n   * Checks whether the deployment exists.\n   * @param resourceGroupName The name of the resource group with the deployment to check. The name\n   * is case insensitive.\n   * @param deploymentName The name of the deployment.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.DeploymentsCheckExistenceResponse>\n   */\n  checkExistence(\n    resourceGroupName: string,\n    deploymentName: string,\n    options?: msRest.RequestOptionsBase\n  ): Promise<Models.DeploymentsCheckExistenceResponse>;\n  /**\n   * @param resourceGroupName The name of the resource group with the deployment to check. The name\n   * is case insensitive.\n   * @param deploymentName The name of the deployment.\n   * @param callback The callback\n   */\n  checkExistence(\n    resourceGroupName: string,\n    deploymentName: string,\n    callback: msRest.ServiceCallback<boolean>\n  ): void;\n  /**\n   * @param resourceGroupName The name of the resource group with the deployment to check. The name\n   * is case insensitive.\n   * @param deploymentName The name of the deployment.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  checkExistence(\n    resourceGroupName: string,\n    deploymentName: string,\n    options: msRest.RequestOptionsBase,\n    callback: msRest.ServiceCallback<boolean>\n  ): void;\n  checkExistence(\n    resourceGroupName: string,\n    deploymentName: string,\n    options?: msRest.RequestOptionsBase | msRest.ServiceCallback<boolean>,\n    callback?: msRest.ServiceCallback<boolean>\n  ): Promise<Models.DeploymentsCheckExistenceResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        deploymentName,\n        options\n      },\n      checkExistenceOperationSpec,\n      callback\n    ) as Promise<Models.DeploymentsCheckExistenceResponse>;\n  }\n\n  /**\n   * You can provide the template and parameters directly in the request or link to JSON files.\n   * @summary Deploys resources to a resource group.\n   * @param resourceGroupName The name of the resource group to deploy the resources to. The name is\n   * case insensitive. The resource group must already exist.\n   * @param deploymentName The name of the deployment.\n   * @param parameters Additional parameters supplied to the operation.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.DeploymentsCreateOrUpdateResponse>\n   */\n  createOrUpdate(\n    resourceGroupName: string,\n    deploymentName: string,\n    parameters: Models.Deployment,\n    options?: msRest.RequestOptionsBase\n  ): Promise<Models.DeploymentsCreateOrUpdateResponse> {\n    return this.beginCreateOrUpdate(\n      resourceGroupName,\n      deploymentName,\n      parameters,\n      options\n    ).then((lroPoller) => lroPoller.pollUntilFinished()) as Promise<\n      Models.DeploymentsCreateOrUpdateResponse\n    >;\n  }\n\n  /**\n   * Gets a deployment.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param deploymentName The name of the deployment.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.DeploymentsGetResponse>\n   */\n  get(\n    resourceGroupName: string,\n    deploymentName: string,\n    options?: msRest.RequestOptionsBase\n  ): Promise<Models.DeploymentsGetResponse>;\n  /**\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param deploymentName The name of the deployment.\n   * @param callback The callback\n   */\n  get(\n    resourceGroupName: string,\n    deploymentName: string,\n    callback: msRest.ServiceCallback<Models.DeploymentExtended>\n  ): void;\n  /**\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param deploymentName The name of the deployment.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  get(\n    resourceGroupName: string,\n    deploymentName: string,\n    options: msRest.RequestOptionsBase,\n    callback: msRest.ServiceCallback<Models.DeploymentExtended>\n  ): void;\n  get(\n    resourceGroupName: string,\n    deploymentName: string,\n    options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.DeploymentExtended>,\n    callback?: msRest.ServiceCallback<Models.DeploymentExtended>\n  ): Promise<Models.DeploymentsGetResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        deploymentName,\n        options\n      },\n      getOperationSpec,\n      callback\n    ) as Promise<Models.DeploymentsGetResponse>;\n  }\n\n  /**\n   * You can cancel a deployment only if the provisioningState is Accepted or Running. After the\n   * deployment is canceled, the provisioningState is set to Canceled. Canceling a template\n   * deployment stops the currently running template deployment and leaves the resource group\n   * partially deployed.\n   * @summary Cancels a currently running template deployment.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param deploymentName The name of the deployment.\n   * @param [options] The optional parameters\n   * @returns Promise<msRest.RestResponse>\n   */\n  cancel(\n    resourceGroupName: string,\n    deploymentName: string,\n    options?: msRest.RequestOptionsBase\n  ): Promise<msRest.RestResponse>;\n  /**\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param deploymentName The name of the deployment.\n   * @param callback The callback\n   */\n  cancel(\n    resourceGroupName: string,\n    deploymentName: string,\n    callback: msRest.ServiceCallback<void>\n  ): void;\n  /**\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param deploymentName The name of the deployment.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  cancel(\n    resourceGroupName: string,\n    deploymentName: string,\n    options: msRest.RequestOptionsBase,\n    callback: msRest.ServiceCallback<void>\n  ): void;\n  cancel(\n    resourceGroupName: string,\n    deploymentName: string,\n    options?: msRest.RequestOptionsBase | msRest.ServiceCallback<void>,\n    callback?: msRest.ServiceCallback<void>\n  ): Promise<msRest.RestResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        deploymentName,\n        options\n      },\n      cancelOperationSpec,\n      callback\n    );\n  }\n\n  /**\n   * Validates whether the specified template is syntactically correct and will be accepted by Azure\n   * Resource Manager..\n   * @param resourceGroupName The name of the resource group the template will be deployed to. The\n   * name is case insensitive.\n   * @param deploymentName The name of the deployment.\n   * @param parameters Parameters to validate.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.DeploymentsValidateResponse>\n   */\n  validate(\n    resourceGroupName: string,\n    deploymentName: string,\n    parameters: Models.Deployment,\n    options?: msRest.RequestOptionsBase\n  ): Promise<Models.DeploymentsValidateResponse> {\n    return this.beginValidate(\n      resourceGroupName,\n      deploymentName,\n      parameters,\n      options\n    ).then((lroPoller) => lroPoller.pollUntilFinished()) as Promise<\n      Models.DeploymentsValidateResponse\n    >;\n  }\n\n  /**\n   * Returns changes that will be made by the deployment if executed at the scope of the resource\n   * group.\n   * @param resourceGroupName The name of the resource group the template will be deployed to. The\n   * name is case insensitive.\n   * @param deploymentName The name of the deployment.\n   * @param parameters Parameters to validate.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.DeploymentsWhatIfResponse>\n   */\n  whatIf(\n    resourceGroupName: string,\n    deploymentName: string,\n    parameters: Models.DeploymentWhatIf,\n    options?: msRest.RequestOptionsBase\n  ): Promise<Models.DeploymentsWhatIfResponse> {\n    return this.beginWhatIf(\n      resourceGroupName,\n      deploymentName,\n      parameters,\n      options\n    ).then((lroPoller) => lroPoller.pollUntilFinished()) as Promise<\n      Models.DeploymentsWhatIfResponse\n    >;\n  }\n\n  /**\n   * Exports the template used for specified deployment.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param deploymentName The name of the deployment.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.DeploymentsExportTemplateResponse>\n   */\n  exportTemplate(\n    resourceGroupName: string,\n    deploymentName: string,\n    options?: msRest.RequestOptionsBase\n  ): Promise<Models.DeploymentsExportTemplateResponse>;\n  /**\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param deploymentName The name of the deployment.\n   * @param callback The callback\n   */\n  exportTemplate(\n    resourceGroupName: string,\n    deploymentName: string,\n    callback: msRest.ServiceCallback<Models.DeploymentExportResult>\n  ): void;\n  /**\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param deploymentName The name of the deployment.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  exportTemplate(\n    resourceGroupName: string,\n    deploymentName: string,\n    options: msRest.RequestOptionsBase,\n    callback: msRest.ServiceCallback<Models.DeploymentExportResult>\n  ): void;\n  exportTemplate(\n    resourceGroupName: string,\n    deploymentName: string,\n    options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.DeploymentExportResult>,\n    callback?: msRest.ServiceCallback<Models.DeploymentExportResult>\n  ): Promise<Models.DeploymentsExportTemplateResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        deploymentName,\n        options\n      },\n      exportTemplateOperationSpec,\n      callback\n    ) as Promise<Models.DeploymentsExportTemplateResponse>;\n  }\n\n  /**\n   * Get all the deployments for a resource group.\n   * @param resourceGroupName The name of the resource group with the deployments to get. The name is\n   * case insensitive.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.DeploymentsListByResourceGroupResponse>\n   */\n  listByResourceGroup(\n    resourceGroupName: string,\n    options?: Models.DeploymentsListByResourceGroupOptionalParams\n  ): Promise<Models.DeploymentsListByResourceGroupResponse>;\n  /**\n   * @param resourceGroupName The name of the resource group with the deployments to get. The name is\n   * case insensitive.\n   * @param callback The callback\n   */\n  listByResourceGroup(\n    resourceGroupName: string,\n    callback: msRest.ServiceCallback<Models.DeploymentListResult>\n  ): void;\n  /**\n   * @param resourceGroupName The name of the resource group with the deployments to get. The name is\n   * case insensitive.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  listByResourceGroup(\n    resourceGroupName: string,\n    options: Models.DeploymentsListByResourceGroupOptionalParams,\n    callback: msRest.ServiceCallback<Models.DeploymentListResult>\n  ): void;\n  listByResourceGroup(\n    resourceGroupName: string,\n    options?:\n      | Models.DeploymentsListByResourceGroupOptionalParams\n      | msRest.ServiceCallback<Models.DeploymentListResult>,\n    callback?: msRest.ServiceCallback<Models.DeploymentListResult>\n  ): Promise<Models.DeploymentsListByResourceGroupResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        options\n      },\n      listByResourceGroupOperationSpec,\n      callback\n    ) as Promise<Models.DeploymentsListByResourceGroupResponse>;\n  }\n\n  /**\n   * Calculate the hash of the given template.\n   * @param template The template provided to calculate hash.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.DeploymentsCalculateTemplateHashResponse>\n   */\n  calculateTemplateHash(\n    template: any,\n    options?: msRest.RequestOptionsBase\n  ): Promise<Models.DeploymentsCalculateTemplateHashResponse>;\n  /**\n   * @param template The template provided to calculate hash.\n   * @param callback The callback\n   */\n  calculateTemplateHash(\n    template: any,\n    callback: msRest.ServiceCallback<Models.TemplateHashResult>\n  ): void;\n  /**\n   * @param template The template provided to calculate hash.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  calculateTemplateHash(\n    template: any,\n    options: msRest.RequestOptionsBase,\n    callback: msRest.ServiceCallback<Models.TemplateHashResult>\n  ): void;\n  calculateTemplateHash(\n    template: any,\n    options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.TemplateHashResult>,\n    callback?: msRest.ServiceCallback<Models.TemplateHashResult>\n  ): Promise<Models.DeploymentsCalculateTemplateHashResponse> {\n    return this.client.sendOperationRequest(\n      {\n        template,\n        options\n      },\n      calculateTemplateHashOperationSpec,\n      callback\n    ) as Promise<Models.DeploymentsCalculateTemplateHashResponse>;\n  }\n\n  /**\n   * A template deployment that is currently running cannot be deleted. Deleting a template\n   * deployment removes the associated deployment operations. This is an asynchronous operation that\n   * returns a status of 202 until the template deployment is successfully deleted. The Location\n   * response header contains the URI that is used to obtain the status of the process. While the\n   * process is running, a call to the URI in the Location header returns a status of 202. When the\n   * process finishes, the URI in the Location header returns a status of 204 on success. If the\n   * asynchronous request failed, the URI in the Location header returns an error-level status code.\n   * @summary Deletes a deployment from the deployment history.\n   * @param scope The resource scope.\n   * @param deploymentName The name of the deployment.\n   * @param [options] The optional parameters\n   * @returns Promise<msRestAzure.LROPoller>\n   */\n  beginDeleteAtScope(\n    scope: string,\n    deploymentName: string,\n    options?: msRest.RequestOptionsBase\n  ): Promise<msRestAzure.LROPoller> {\n    return this.client.sendLRORequest(\n      {\n        scope,\n        deploymentName,\n        options\n      },\n      beginDeleteAtScopeOperationSpec,\n      options\n    );\n  }\n\n  /**\n   * You can provide the template and parameters directly in the request or link to JSON files.\n   * @summary Deploys resources at a given scope.\n   * @param scope The resource scope.\n   * @param deploymentName The name of the deployment.\n   * @param parameters Additional parameters supplied to the operation.\n   * @param [options] The optional parameters\n   * @returns Promise<msRestAzure.LROPoller>\n   */\n  beginCreateOrUpdateAtScope(\n    scope: string,\n    deploymentName: string,\n    parameters: Models.Deployment,\n    options?: msRest.RequestOptionsBase\n  ): Promise<msRestAzure.LROPoller> {\n    return this.client.sendLRORequest(\n      {\n        scope,\n        deploymentName,\n        parameters,\n        options\n      },\n      beginCreateOrUpdateAtScopeOperationSpec,\n      options\n    );\n  }\n\n  /**\n   * Validates whether the specified template is syntactically correct and will be accepted by Azure\n   * Resource Manager..\n   * @param scope The resource scope.\n   * @param deploymentName The name of the deployment.\n   * @param parameters Parameters to validate.\n   * @param [options] The optional parameters\n   * @returns Promise<msRestAzure.LROPoller>\n   */\n  beginValidateAtScope(\n    scope: string,\n    deploymentName: string,\n    parameters: Models.Deployment,\n    options?: msRest.RequestOptionsBase\n  ): Promise<msRestAzure.LROPoller> {\n    return this.client.sendLRORequest(\n      {\n        scope,\n        deploymentName,\n        parameters,\n        options\n      },\n      beginValidateAtScopeOperationSpec,\n      options\n    );\n  }\n\n  /**\n   * A template deployment that is currently running cannot be deleted. Deleting a template\n   * deployment removes the associated deployment operations. This is an asynchronous operation that\n   * returns a status of 202 until the template deployment is successfully deleted. The Location\n   * response header contains the URI that is used to obtain the status of the process. While the\n   * process is running, a call to the URI in the Location header returns a status of 202. When the\n   * process finishes, the URI in the Location header returns a status of 204 on success. If the\n   * asynchronous request failed, the URI in the Location header returns an error-level status code.\n   * @summary Deletes a deployment from the deployment history.\n   * @param deploymentName The name of the deployment.\n   * @param [options] The optional parameters\n   * @returns Promise<msRestAzure.LROPoller>\n   */\n  beginDeleteAtTenantScope(\n    deploymentName: string,\n    options?: msRest.RequestOptionsBase\n  ): Promise<msRestAzure.LROPoller> {\n    return this.client.sendLRORequest(\n      {\n        deploymentName,\n        options\n      },\n      beginDeleteAtTenantScopeOperationSpec,\n      options\n    );\n  }\n\n  /**\n   * You can provide the template and parameters directly in the request or link to JSON files.\n   * @summary Deploys resources at tenant scope.\n   * @param deploymentName The name of the deployment.\n   * @param parameters Additional parameters supplied to the operation.\n   * @param [options] The optional parameters\n   * @returns Promise<msRestAzure.LROPoller>\n   */\n  beginCreateOrUpdateAtTenantScope(\n    deploymentName: string,\n    parameters: Models.ScopedDeployment,\n    options?: msRest.RequestOptionsBase\n  ): Promise<msRestAzure.LROPoller> {\n    return this.client.sendLRORequest(\n      {\n        deploymentName,\n        parameters,\n        options\n      },\n      beginCreateOrUpdateAtTenantScopeOperationSpec,\n      options\n    );\n  }\n\n  /**\n   * Validates whether the specified template is syntactically correct and will be accepted by Azure\n   * Resource Manager..\n   * @param deploymentName The name of the deployment.\n   * @param parameters Parameters to validate.\n   * @param [options] The optional parameters\n   * @returns Promise<msRestAzure.LROPoller>\n   */\n  beginValidateAtTenantScope(\n    deploymentName: string,\n    parameters: Models.ScopedDeployment,\n    options?: msRest.RequestOptionsBase\n  ): Promise<msRestAzure.LROPoller> {\n    return this.client.sendLRORequest(\n      {\n        deploymentName,\n        parameters,\n        options\n      },\n      beginValidateAtTenantScopeOperationSpec,\n      options\n    );\n  }\n\n  /**\n   * Returns changes that will be made by the deployment if executed at the scope of the tenant\n   * group.\n   * @param deploymentName The name of the deployment.\n   * @param parameters Parameters to validate.\n   * @param [options] The optional parameters\n   * @returns Promise<msRestAzure.LROPoller>\n   */\n  beginWhatIfAtTenantScope(\n    deploymentName: string,\n    parameters: Models.ScopedDeploymentWhatIf,\n    options?: msRest.RequestOptionsBase\n  ): Promise<msRestAzure.LROPoller> {\n    return this.client.sendLRORequest(\n      {\n        deploymentName,\n        parameters,\n        options\n      },\n      beginWhatIfAtTenantScopeOperationSpec,\n      options\n    );\n  }\n\n  /**\n   * A template deployment that is currently running cannot be deleted. Deleting a template\n   * deployment removes the associated deployment operations. This is an asynchronous operation that\n   * returns a status of 202 until the template deployment is successfully deleted. The Location\n   * response header contains the URI that is used to obtain the status of the process. While the\n   * process is running, a call to the URI in the Location header returns a status of 202. When the\n   * process finishes, the URI in the Location header returns a status of 204 on success. If the\n   * asynchronous request failed, the URI in the Location header returns an error-level status code.\n   * @summary Deletes a deployment from the deployment history.\n   * @param groupId The management group ID.\n   * @param deploymentName The name of the deployment.\n   * @param [options] The optional parameters\n   * @returns Promise<msRestAzure.LROPoller>\n   */\n  beginDeleteAtManagementGroupScope(\n    groupId: string,\n    deploymentName: string,\n    options?: msRest.RequestOptionsBase\n  ): Promise<msRestAzure.LROPoller> {\n    return this.client.sendLRORequest(\n      {\n        groupId,\n        deploymentName,\n        options\n      },\n      beginDeleteAtManagementGroupScopeOperationSpec,\n      options\n    );\n  }\n\n  /**\n   * You can provide the template and parameters directly in the request or link to JSON files.\n   * @summary Deploys resources at management group scope.\n   * @param groupId The management group ID.\n   * @param deploymentName The name of the deployment.\n   * @param parameters Additional parameters supplied to the operation.\n   * @param [options] The optional parameters\n   * @returns Promise<msRestAzure.LROPoller>\n   */\n  beginCreateOrUpdateAtManagementGroupScope(\n    groupId: string,\n    deploymentName: string,\n    parameters: Models.ScopedDeployment,\n    options?: msRest.RequestOptionsBase\n  ): Promise<msRestAzure.LROPoller> {\n    return this.client.sendLRORequest(\n      {\n        groupId,\n        deploymentName,\n        parameters,\n        options\n      },\n      beginCreateOrUpdateAtManagementGroupScopeOperationSpec,\n      options\n    );\n  }\n\n  /**\n   * Validates whether the specified template is syntactically correct and will be accepted by Azure\n   * Resource Manager..\n   * @param groupId The management group ID.\n   * @param deploymentName The name of the deployment.\n   * @param parameters Parameters to validate.\n   * @param [options] The optional parameters\n   * @returns Promise<msRestAzure.LROPoller>\n   */\n  beginValidateAtManagementGroupScope(\n    groupId: string,\n    deploymentName: string,\n    parameters: Models.ScopedDeployment,\n    options?: msRest.RequestOptionsBase\n  ): Promise<msRestAzure.LROPoller> {\n    return this.client.sendLRORequest(\n      {\n        groupId,\n        deploymentName,\n        parameters,\n        options\n      },\n      beginValidateAtManagementGroupScopeOperationSpec,\n      options\n    );\n  }\n\n  /**\n   * Returns changes that will be made by the deployment if executed at the scope of the management\n   * group.\n   * @param groupId The management group ID.\n   * @param deploymentName The name of the deployment.\n   * @param parameters Parameters to validate.\n   * @param [options] The optional parameters\n   * @returns Promise<msRestAzure.LROPoller>\n   */\n  beginWhatIfAtManagementGroupScope(\n    groupId: string,\n    deploymentName: string,\n    parameters: Models.ScopedDeploymentWhatIf,\n    options?: msRest.RequestOptionsBase\n  ): Promise<msRestAzure.LROPoller> {\n    return this.client.sendLRORequest(\n      {\n        groupId,\n        deploymentName,\n        parameters,\n        options\n      },\n      beginWhatIfAtManagementGroupScopeOperationSpec,\n      options\n    );\n  }\n\n  /**\n   * A template deployment that is currently running cannot be deleted. Deleting a template\n   * deployment removes the associated deployment operations. This is an asynchronous operation that\n   * returns a status of 202 until the template deployment is successfully deleted. The Location\n   * response header contains the URI that is used to obtain the status of the process. While the\n   * process is running, a call to the URI in the Location header returns a status of 202. When the\n   * process finishes, the URI in the Location header returns a status of 204 on success. If the\n   * asynchronous request failed, the URI in the Location header returns an error-level status code.\n   * @summary Deletes a deployment from the deployment history.\n   * @param deploymentName The name of the deployment.\n   * @param [options] The optional parameters\n   * @returns Promise<msRestAzure.LROPoller>\n   */\n  beginDeleteAtSubscriptionScope(\n    deploymentName: string,\n    options?: msRest.RequestOptionsBase\n  ): Promise<msRestAzure.LROPoller> {\n    return this.client.sendLRORequest(\n      {\n        deploymentName,\n        options\n      },\n      beginDeleteAtSubscriptionScopeOperationSpec,\n      options\n    );\n  }\n\n  /**\n   * You can provide the template and parameters directly in the request or link to JSON files.\n   * @summary Deploys resources at subscription scope.\n   * @param deploymentName The name of the deployment.\n   * @param parameters Additional parameters supplied to the operation.\n   * @param [options] The optional parameters\n   * @returns Promise<msRestAzure.LROPoller>\n   */\n  beginCreateOrUpdateAtSubscriptionScope(\n    deploymentName: string,\n    parameters: Models.Deployment,\n    options?: msRest.RequestOptionsBase\n  ): Promise<msRestAzure.LROPoller> {\n    return this.client.sendLRORequest(\n      {\n        deploymentName,\n        parameters,\n        options\n      },\n      beginCreateOrUpdateAtSubscriptionScopeOperationSpec,\n      options\n    );\n  }\n\n  /**\n   * Validates whether the specified template is syntactically correct and will be accepted by Azure\n   * Resource Manager..\n   * @param deploymentName The name of the deployment.\n   * @param parameters Parameters to validate.\n   * @param [options] The optional parameters\n   * @returns Promise<msRestAzure.LROPoller>\n   */\n  beginValidateAtSubscriptionScope(\n    deploymentName: string,\n    parameters: Models.Deployment,\n    options?: msRest.RequestOptionsBase\n  ): Promise<msRestAzure.LROPoller> {\n    return this.client.sendLRORequest(\n      {\n        deploymentName,\n        parameters,\n        options\n      },\n      beginValidateAtSubscriptionScopeOperationSpec,\n      options\n    );\n  }\n\n  /**\n   * Returns changes that will be made by the deployment if executed at the scope of the\n   * subscription.\n   * @param deploymentName The name of the deployment.\n   * @param parameters Parameters to What If.\n   * @param [options] The optional parameters\n   * @returns Promise<msRestAzure.LROPoller>\n   */\n  beginWhatIfAtSubscriptionScope(\n    deploymentName: string,\n    parameters: Models.DeploymentWhatIf,\n    options?: msRest.RequestOptionsBase\n  ): Promise<msRestAzure.LROPoller> {\n    return this.client.sendLRORequest(\n      {\n        deploymentName,\n        parameters,\n        options\n      },\n      beginWhatIfAtSubscriptionScopeOperationSpec,\n      options\n    );\n  }\n\n  /**\n   * A template deployment that is currently running cannot be deleted. Deleting a template\n   * deployment removes the associated deployment operations. Deleting a template deployment does not\n   * affect the state of the resource group. This is an asynchronous operation that returns a status\n   * of 202 until the template deployment is successfully deleted. The Location response header\n   * contains the URI that is used to obtain the status of the process. While the process is running,\n   * a call to the URI in the Location header returns a status of 202. When the process finishes, the\n   * URI in the Location header returns a status of 204 on success. If the asynchronous request\n   * failed, the URI in the Location header returns an error-level status code.\n   * @summary Deletes a deployment from the deployment history.\n   * @param resourceGroupName The name of the resource group with the deployment to delete. The name\n   * is case insensitive.\n   * @param deploymentName The name of the deployment.\n   * @param [options] The optional parameters\n   * @returns Promise<msRestAzure.LROPoller>\n   */\n  beginDeleteMethod(\n    resourceGroupName: string,\n    deploymentName: string,\n    options?: msRest.RequestOptionsBase\n  ): Promise<msRestAzure.LROPoller> {\n    return this.client.sendLRORequest(\n      {\n        resourceGroupName,\n        deploymentName,\n        options\n      },\n      beginDeleteMethodOperationSpec,\n      options\n    );\n  }\n\n  /**\n   * You can provide the template and parameters directly in the request or link to JSON files.\n   * @summary Deploys resources to a resource group.\n   * @param resourceGroupName The name of the resource group to deploy the resources to. The name is\n   * case insensitive. The resource group must already exist.\n   * @param deploymentName The name of the deployment.\n   * @param parameters Additional parameters supplied to the operation.\n   * @param [options] The optional parameters\n   * @returns Promise<msRestAzure.LROPoller>\n   */\n  beginCreateOrUpdate(\n    resourceGroupName: string,\n    deploymentName: string,\n    parameters: Models.Deployment,\n    options?: msRest.RequestOptionsBase\n  ): Promise<msRestAzure.LROPoller> {\n    return this.client.sendLRORequest(\n      {\n        resourceGroupName,\n        deploymentName,\n        parameters,\n        options\n      },\n      beginCreateOrUpdateOperationSpec,\n      options\n    );\n  }\n\n  /**\n   * Validates whether the specified template is syntactically correct and will be accepted by Azure\n   * Resource Manager..\n   * @param resourceGroupName The name of the resource group the template will be deployed to. The\n   * name is case insensitive.\n   * @param deploymentName The name of the deployment.\n   * @param parameters Parameters to validate.\n   * @param [options] The optional parameters\n   * @returns Promise<msRestAzure.LROPoller>\n   */\n  beginValidate(\n    resourceGroupName: string,\n    deploymentName: string,\n    parameters: Models.Deployment,\n    options?: msRest.RequestOptionsBase\n  ): Promise<msRestAzure.LROPoller> {\n    return this.client.sendLRORequest(\n      {\n        resourceGroupName,\n        deploymentName,\n        parameters,\n        options\n      },\n      beginValidateOperationSpec,\n      options\n    );\n  }\n\n  /**\n   * Returns changes that will be made by the deployment if executed at the scope of the resource\n   * group.\n   * @param resourceGroupName The name of the resource group the template will be deployed to. The\n   * name is case insensitive.\n   * @param deploymentName The name of the deployment.\n   * @param parameters Parameters to validate.\n   * @param [options] The optional parameters\n   * @returns Promise<msRestAzure.LROPoller>\n   */\n  beginWhatIf(\n    resourceGroupName: string,\n    deploymentName: string,\n    parameters: Models.DeploymentWhatIf,\n    options?: msRest.RequestOptionsBase\n  ): Promise<msRestAzure.LROPoller> {\n    return this.client.sendLRORequest(\n      {\n        resourceGroupName,\n        deploymentName,\n        parameters,\n        options\n      },\n      beginWhatIfOperationSpec,\n      options\n    );\n  }\n\n  /**\n   * Get all the deployments at the given scope.\n   * @param nextPageLink The NextLink from the previous successful call to List operation.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.DeploymentsListAtScopeNextResponse>\n   */\n  listAtScopeNext(\n    nextPageLink: string,\n    options?: Models.DeploymentsListAtScopeNextOptionalParams\n  ): Promise<Models.DeploymentsListAtScopeNextResponse>;\n  /**\n   * @param nextPageLink The NextLink from the previous successful call to List operation.\n   * @param callback The callback\n   */\n  listAtScopeNext(\n    nextPageLink: string,\n    callback: msRest.ServiceCallback<Models.DeploymentListResult>\n  ): void;\n  /**\n   * @param nextPageLink The NextLink from the previous successful call to List operation.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  listAtScopeNext(\n    nextPageLink: string,\n    options: Models.DeploymentsListAtScopeNextOptionalParams,\n    callback: msRest.ServiceCallback<Models.DeploymentListResult>\n  ): void;\n  listAtScopeNext(\n    nextPageLink: string,\n    options?:\n      | Models.DeploymentsListAtScopeNextOptionalParams\n      | msRest.ServiceCallback<Models.DeploymentListResult>,\n    callback?: msRest.ServiceCallback<Models.DeploymentListResult>\n  ): Promise<Models.DeploymentsListAtScopeNextResponse> {\n    return this.client.sendOperationRequest(\n      {\n        nextPageLink,\n        options\n      },\n      listAtScopeNextOperationSpec,\n      callback\n    ) as Promise<Models.DeploymentsListAtScopeNextResponse>;\n  }\n\n  /**\n   * Get all the deployments at the tenant scope.\n   * @param nextPageLink The NextLink from the previous successful call to List operation.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.DeploymentsListAtTenantScopeNextResponse>\n   */\n  listAtTenantScopeNext(\n    nextPageLink: string,\n    options?: Models.DeploymentsListAtTenantScopeNextOptionalParams\n  ): Promise<Models.DeploymentsListAtTenantScopeNextResponse>;\n  /**\n   * @param nextPageLink The NextLink from the previous successful call to List operation.\n   * @param callback The callback\n   */\n  listAtTenantScopeNext(\n    nextPageLink: string,\n    callback: msRest.ServiceCallback<Models.DeploymentListResult>\n  ): void;\n  /**\n   * @param nextPageLink The NextLink from the previous successful call to List operation.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  listAtTenantScopeNext(\n    nextPageLink: string,\n    options: Models.DeploymentsListAtTenantScopeNextOptionalParams,\n    callback: msRest.ServiceCallback<Models.DeploymentListResult>\n  ): void;\n  listAtTenantScopeNext(\n    nextPageLink: string,\n    options?:\n      | Models.DeploymentsListAtTenantScopeNextOptionalParams\n      | msRest.ServiceCallback<Models.DeploymentListResult>,\n    callback?: msRest.ServiceCallback<Models.DeploymentListResult>\n  ): Promise<Models.DeploymentsListAtTenantScopeNextResponse> {\n    return this.client.sendOperationRequest(\n      {\n        nextPageLink,\n        options\n      },\n      listAtTenantScopeNextOperationSpec,\n      callback\n    ) as Promise<Models.DeploymentsListAtTenantScopeNextResponse>;\n  }\n\n  /**\n   * Get all the deployments for a management group.\n   * @param nextPageLink The NextLink from the previous successful call to List operation.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.DeploymentsListAtManagementGroupScopeNextResponse>\n   */\n  listAtManagementGroupScopeNext(\n    nextPageLink: string,\n    options?: Models.DeploymentsListAtManagementGroupScopeNextOptionalParams\n  ): Promise<Models.DeploymentsListAtManagementGroupScopeNextResponse>;\n  /**\n   * @param nextPageLink The NextLink from the previous successful call to List operation.\n   * @param callback The callback\n   */\n  listAtManagementGroupScopeNext(\n    nextPageLink: string,\n    callback: msRest.ServiceCallback<Models.DeploymentListResult>\n  ): void;\n  /**\n   * @param nextPageLink The NextLink from the previous successful call to List operation.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  listAtManagementGroupScopeNext(\n    nextPageLink: string,\n    options: Models.DeploymentsListAtManagementGroupScopeNextOptionalParams,\n    callback: msRest.ServiceCallback<Models.DeploymentListResult>\n  ): void;\n  listAtManagementGroupScopeNext(\n    nextPageLink: string,\n    options?:\n      | Models.DeploymentsListAtManagementGroupScopeNextOptionalParams\n      | msRest.ServiceCallback<Models.DeploymentListResult>,\n    callback?: msRest.ServiceCallback<Models.DeploymentListResult>\n  ): Promise<Models.DeploymentsListAtManagementGroupScopeNextResponse> {\n    return this.client.sendOperationRequest(\n      {\n        nextPageLink,\n        options\n      },\n      listAtManagementGroupScopeNextOperationSpec,\n      callback\n    ) as Promise<Models.DeploymentsListAtManagementGroupScopeNextResponse>;\n  }\n\n  /**\n   * Get all the deployments for a subscription.\n   * @param nextPageLink The NextLink from the previous successful call to List operation.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.DeploymentsListAtSubscriptionScopeNextResponse>\n   */\n  listAtSubscriptionScopeNext(\n    nextPageLink: string,\n    options?: Models.DeploymentsListAtSubscriptionScopeNextOptionalParams\n  ): Promise<Models.DeploymentsListAtSubscriptionScopeNextResponse>;\n  /**\n   * @param nextPageLink The NextLink from the previous successful call to List operation.\n   * @param callback The callback\n   */\n  listAtSubscriptionScopeNext(\n    nextPageLink: string,\n    callback: msRest.ServiceCallback<Models.DeploymentListResult>\n  ): void;\n  /**\n   * @param nextPageLink The NextLink from the previous successful call to List operation.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  listAtSubscriptionScopeNext(\n    nextPageLink: string,\n    options: Models.DeploymentsListAtSubscriptionScopeNextOptionalParams,\n    callback: msRest.ServiceCallback<Models.DeploymentListResult>\n  ): void;\n  listAtSubscriptionScopeNext(\n    nextPageLink: string,\n    options?:\n      | Models.DeploymentsListAtSubscriptionScopeNextOptionalParams\n      | msRest.ServiceCallback<Models.DeploymentListResult>,\n    callback?: msRest.ServiceCallback<Models.DeploymentListResult>\n  ): Promise<Models.DeploymentsListAtSubscriptionScopeNextResponse> {\n    return this.client.sendOperationRequest(\n      {\n        nextPageLink,\n        options\n      },\n      listAtSubscriptionScopeNextOperationSpec,\n      callback\n    ) as Promise<Models.DeploymentsListAtSubscriptionScopeNextResponse>;\n  }\n\n  /**\n   * Get all the deployments for a resource group.\n   * @param nextPageLink The NextLink from the previous successful call to List operation.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.DeploymentsListByResourceGroupNextResponse>\n   */\n  listByResourceGroupNext(\n    nextPageLink: string,\n    options?: Models.DeploymentsListByResourceGroupNextOptionalParams\n  ): Promise<Models.DeploymentsListByResourceGroupNextResponse>;\n  /**\n   * @param nextPageLink The NextLink from the previous successful call to List operation.\n   * @param callback The callback\n   */\n  listByResourceGroupNext(\n    nextPageLink: string,\n    callback: msRest.ServiceCallback<Models.DeploymentListResult>\n  ): void;\n  /**\n   * @param nextPageLink The NextLink from the previous successful call to List operation.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  listByResourceGroupNext(\n    nextPageLink: string,\n    options: Models.DeploymentsListByResourceGroupNextOptionalParams,\n    callback: msRest.ServiceCallback<Models.DeploymentListResult>\n  ): void;\n  listByResourceGroupNext(\n    nextPageLink: string,\n    options?:\n      | Models.DeploymentsListByResourceGroupNextOptionalParams\n      | msRest.ServiceCallback<Models.DeploymentListResult>,\n    callback?: msRest.ServiceCallback<Models.DeploymentListResult>\n  ): Promise<Models.DeploymentsListByResourceGroupNextResponse> {\n    return this.client.sendOperationRequest(\n      {\n        nextPageLink,\n        options\n      },\n      listByResourceGroupNextOperationSpec,\n      callback\n    ) as Promise<Models.DeploymentsListByResourceGroupNextResponse>;\n  }\n}\n\n// Operation Specifications\nconst serializer = new msRest.Serializer(Mappers);\nconst checkExistenceAtScopeOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"HEAD\",\n  path: \"{scope}/providers/Microsoft.Resources/deployments/{deploymentName}\",\n  urlParameters: [Parameters.scope, Parameters.deploymentName],\n  queryParameters: [Parameters.apiVersion],\n  headerParameters: [Parameters.acceptLanguage],\n  responses: {\n    204: {},\n    404: {},\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  serializer\n};\n\nconst getAtScopeOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"GET\",\n  path: \"{scope}/providers/Microsoft.Resources/deployments/{deploymentName}\",\n  urlParameters: [Parameters.scope, Parameters.deploymentName],\n  queryParameters: [Parameters.apiVersion],\n  headerParameters: [Parameters.acceptLanguage],\n  responses: {\n    200: {\n      bodyMapper: Mappers.DeploymentExtended\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  serializer\n};\n\nconst cancelAtScopeOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"POST\",\n  path: \"{scope}/providers/Microsoft.Resources/deployments/{deploymentName}/cancel\",\n  urlParameters: [Parameters.scope, Parameters.deploymentName],\n  queryParameters: [Parameters.apiVersion],\n  headerParameters: [Parameters.acceptLanguage],\n  responses: {\n    204: {},\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  serializer\n};\n\nconst exportTemplateAtScopeOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"POST\",\n  path: \"{scope}/providers/Microsoft.Resources/deployments/{deploymentName}/exportTemplate\",\n  urlParameters: [Parameters.scope, Parameters.deploymentName],\n  queryParameters: [Parameters.apiVersion],\n  headerParameters: [Parameters.acceptLanguage],\n  responses: {\n    200: {\n      bodyMapper: Mappers.DeploymentExportResult\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  serializer\n};\n\nconst listAtScopeOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"GET\",\n  path: \"{scope}/providers/Microsoft.Resources/deployments/\",\n  urlParameters: [Parameters.scope],\n  queryParameters: [Parameters.filter, Parameters.top, Parameters.apiVersion],\n  headerParameters: [Parameters.acceptLanguage],\n  responses: {\n    200: {\n      bodyMapper: Mappers.DeploymentListResult\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  serializer\n};\n\nconst checkExistenceAtTenantScopeOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"HEAD\",\n  path: \"providers/Microsoft.Resources/deployments/{deploymentName}\",\n  urlParameters: [Parameters.deploymentName],\n  queryParameters: [Parameters.apiVersion],\n  headerParameters: [Parameters.acceptLanguage],\n  responses: {\n    204: {},\n    404: {},\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  serializer\n};\n\nconst getAtTenantScopeOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"GET\",\n  path: \"providers/Microsoft.Resources/deployments/{deploymentName}\",\n  urlParameters: [Parameters.deploymentName],\n  queryParameters: [Parameters.apiVersion],\n  headerParameters: [Parameters.acceptLanguage],\n  responses: {\n    200: {\n      bodyMapper: Mappers.DeploymentExtended\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  serializer\n};\n\nconst cancelAtTenantScopeOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"POST\",\n  path: \"providers/Microsoft.Resources/deployments/{deploymentName}/cancel\",\n  urlParameters: [Parameters.deploymentName],\n  queryParameters: [Parameters.apiVersion],\n  headerParameters: [Parameters.acceptLanguage],\n  responses: {\n    204: {},\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  serializer\n};\n\nconst exportTemplateAtTenantScopeOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"POST\",\n  path: \"providers/Microsoft.Resources/deployments/{deploymentName}/exportTemplate\",\n  urlParameters: [Parameters.deploymentName],\n  queryParameters: [Parameters.apiVersion],\n  headerParameters: [Parameters.acceptLanguage],\n  responses: {\n    200: {\n      bodyMapper: Mappers.DeploymentExportResult\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  serializer\n};\n\nconst listAtTenantScopeOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"GET\",\n  path: \"providers/Microsoft.Resources/deployments/\",\n  queryParameters: [Parameters.filter, Parameters.top, Parameters.apiVersion],\n  headerParameters: [Parameters.acceptLanguage],\n  responses: {\n    200: {\n      bodyMapper: Mappers.DeploymentListResult\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  serializer\n};\n\nconst checkExistenceAtManagementGroupScopeOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"HEAD\",\n  path:\n    \"providers/Microsoft.Management/managementGroups/{groupId}/providers/Microsoft.Resources/deployments/{deploymentName}\",\n  urlParameters: [Parameters.groupId, Parameters.deploymentName],\n  queryParameters: [Parameters.apiVersion],\n  headerParameters: [Parameters.acceptLanguage],\n  responses: {\n    204: {},\n    404: {},\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  serializer\n};\n\nconst getAtManagementGroupScopeOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"GET\",\n  path:\n    \"providers/Microsoft.Management/managementGroups/{groupId}/providers/Microsoft.Resources/deployments/{deploymentName}\",\n  urlParameters: [Parameters.groupId, Parameters.deploymentName],\n  queryParameters: [Parameters.apiVersion],\n  headerParameters: [Parameters.acceptLanguage],\n  responses: {\n    200: {\n      bodyMapper: Mappers.DeploymentExtended\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  serializer\n};\n\nconst cancelAtManagementGroupScopeOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"POST\",\n  path:\n    \"providers/Microsoft.Management/managementGroups/{groupId}/providers/Microsoft.Resources/deployments/{deploymentName}/cancel\",\n  urlParameters: [Parameters.groupId, Parameters.deploymentName],\n  queryParameters: [Parameters.apiVersion],\n  headerParameters: [Parameters.acceptLanguage],\n  responses: {\n    204: {},\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  serializer\n};\n\nconst exportTemplateAtManagementGroupScopeOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"POST\",\n  path:\n    \"providers/Microsoft.Management/managementGroups/{groupId}/providers/Microsoft.Resources/deployments/{deploymentName}/exportTemplate\",\n  urlParameters: [Parameters.groupId, Parameters.deploymentName],\n  queryParameters: [Parameters.apiVersion],\n  headerParameters: [Parameters.acceptLanguage],\n  responses: {\n    200: {\n      bodyMapper: Mappers.DeploymentExportResult\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  serializer\n};\n\nconst listAtManagementGroupScopeOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"GET\",\n  path:\n    \"providers/Microsoft.Management/managementGroups/{groupId}/providers/Microsoft.Resources/deployments/\",\n  urlParameters: [Parameters.groupId],\n  queryParameters: [Parameters.filter, Parameters.top, Parameters.apiVersion],\n  headerParameters: [Parameters.acceptLanguage],\n  responses: {\n    200: {\n      bodyMapper: Mappers.DeploymentListResult\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  serializer\n};\n\nconst checkExistenceAtSubscriptionScopeOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"HEAD\",\n  path: \"subscriptions/{subscriptionId}/providers/Microsoft.Resources/deployments/{deploymentName}\",\n  urlParameters: [Parameters.deploymentName, Parameters.subscriptionId],\n  queryParameters: [Parameters.apiVersion],\n  headerParameters: [Parameters.acceptLanguage],\n  responses: {\n    204: {},\n    404: {},\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  serializer\n};\n\nconst getAtSubscriptionScopeOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"GET\",\n  path: \"subscriptions/{subscriptionId}/providers/Microsoft.Resources/deployments/{deploymentName}\",\n  urlParameters: [Parameters.deploymentName, Parameters.subscriptionId],\n  queryParameters: [Parameters.apiVersion],\n  headerParameters: [Parameters.acceptLanguage],\n  responses: {\n    200: {\n      bodyMapper: Mappers.DeploymentExtended\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  serializer\n};\n\nconst cancelAtSubscriptionScopeOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"POST\",\n  path:\n    \"subscriptions/{subscriptionId}/providers/Microsoft.Resources/deployments/{deploymentName}/cancel\",\n  urlParameters: [Parameters.deploymentName, Parameters.subscriptionId],\n  queryParameters: [Parameters.apiVersion],\n  headerParameters: [Parameters.acceptLanguage],\n  responses: {\n    204: {},\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  serializer\n};\n\nconst exportTemplateAtSubscriptionScopeOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"POST\",\n  path:\n    \"subscriptions/{subscriptionId}/providers/Microsoft.Resources/deployments/{deploymentName}/exportTemplate\",\n  urlParameters: [Parameters.deploymentName, Parameters.subscriptionId],\n  queryParameters: [Parameters.apiVersion],\n  headerParameters: [Parameters.acceptLanguage],\n  responses: {\n    200: {\n      bodyMapper: Mappers.DeploymentExportResult\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  serializer\n};\n\nconst listAtSubscriptionScopeOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"GET\",\n  path: \"subscriptions/{subscriptionId}/providers/Microsoft.Resources/deployments/\",\n  urlParameters: [Parameters.subscriptionId],\n  queryParameters: [Parameters.filter, Parameters.top, Parameters.apiVersion],\n  headerParameters: [Parameters.acceptLanguage],\n  responses: {\n    200: {\n      bodyMapper: Mappers.DeploymentListResult\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  serializer\n};\n\nconst checkExistenceOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"HEAD\",\n  path:\n    \"subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.Resources/deployments/{deploymentName}\",\n  urlParameters: [\n    Parameters.resourceGroupName,\n    Parameters.deploymentName,\n    Parameters.subscriptionId\n  ],\n  queryParameters: [Parameters.apiVersion],\n  headerParameters: [Parameters.acceptLanguage],\n  responses: {\n    204: {},\n    404: {},\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  serializer\n};\n\nconst getOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"GET\",\n  path:\n    \"subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.Resources/deployments/{deploymentName}\",\n  urlParameters: [\n    Parameters.resourceGroupName,\n    Parameters.deploymentName,\n    Parameters.subscriptionId\n  ],\n  queryParameters: [Parameters.apiVersion],\n  headerParameters: [Parameters.acceptLanguage],\n  responses: {\n    200: {\n      bodyMapper: Mappers.DeploymentExtended\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  serializer\n};\n\nconst cancelOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"POST\",\n  path:\n    \"subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.Resources/deployments/{deploymentName}/cancel\",\n  urlParameters: [\n    Parameters.resourceGroupName,\n    Parameters.deploymentName,\n    Parameters.subscriptionId\n  ],\n  queryParameters: [Parameters.apiVersion],\n  headerParameters: [Parameters.acceptLanguage],\n  responses: {\n    204: {},\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  serializer\n};\n\nconst exportTemplateOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"POST\",\n  path:\n    \"subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.Resources/deployments/{deploymentName}/exportTemplate\",\n  urlParameters: [\n    Parameters.resourceGroupName,\n    Parameters.deploymentName,\n    Parameters.subscriptionId\n  ],\n  queryParameters: [Parameters.apiVersion],\n  headerParameters: [Parameters.acceptLanguage],\n  responses: {\n    200: {\n      bodyMapper: Mappers.DeploymentExportResult\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  serializer\n};\n\nconst listByResourceGroupOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"GET\",\n  path:\n    \"subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.Resources/deployments/\",\n  urlParameters: [Parameters.resourceGroupName, Parameters.subscriptionId],\n  queryParameters: [Parameters.filter, Parameters.top, Parameters.apiVersion],\n  headerParameters: [Parameters.acceptLanguage],\n  responses: {\n    200: {\n      bodyMapper: Mappers.DeploymentListResult\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  serializer\n};\n\nconst calculateTemplateHashOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"POST\",\n  path: \"providers/Microsoft.Resources/calculateTemplateHash\",\n  queryParameters: [Parameters.apiVersion],\n  headerParameters: [Parameters.acceptLanguage],\n  requestBody: {\n    parameterPath: \"template\",\n    mapper: {\n      required: true,\n      serializedName: \"template\",\n      type: {\n        name: \"Object\"\n      }\n    }\n  },\n  responses: {\n    200: {\n      bodyMapper: Mappers.TemplateHashResult\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  serializer\n};\n\nconst beginDeleteAtScopeOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"DELETE\",\n  path: \"{scope}/providers/Microsoft.Resources/deployments/{deploymentName}\",\n  urlParameters: [Parameters.scope, Parameters.deploymentName],\n  queryParameters: [Parameters.apiVersion],\n  headerParameters: [Parameters.acceptLanguage],\n  responses: {\n    202: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  serializer\n};\n\nconst beginCreateOrUpdateAtScopeOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"PUT\",\n  path: \"{scope}/providers/Microsoft.Resources/deployments/{deploymentName}\",\n  urlParameters: [Parameters.scope, Parameters.deploymentName],\n  queryParameters: [Parameters.apiVersion],\n  headerParameters: [Parameters.acceptLanguage],\n  requestBody: {\n    parameterPath: \"parameters\",\n    mapper: {\n      ...Mappers.Deployment,\n      required: true\n    }\n  },\n  responses: {\n    200: {\n      bodyMapper: Mappers.DeploymentExtended\n    },\n    201: {\n      bodyMapper: Mappers.DeploymentExtended\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  serializer\n};\n\nconst beginValidateAtScopeOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"POST\",\n  path: \"{scope}/providers/Microsoft.Resources/deployments/{deploymentName}/validate\",\n  urlParameters: [Parameters.scope, Parameters.deploymentName],\n  queryParameters: [Parameters.apiVersion],\n  headerParameters: [Parameters.acceptLanguage],\n  requestBody: {\n    parameterPath: \"parameters\",\n    mapper: {\n      ...Mappers.Deployment,\n      required: true\n    }\n  },\n  responses: {\n    200: {\n      bodyMapper: Mappers.DeploymentValidateResult\n    },\n    202: {},\n    400: {\n      bodyMapper: Mappers.DeploymentValidateResult\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  serializer\n};\n\nconst beginDeleteAtTenantScopeOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"DELETE\",\n  path: \"providers/Microsoft.Resources/deployments/{deploymentName}\",\n  urlParameters: [Parameters.deploymentName],\n  queryParameters: [Parameters.apiVersion],\n  headerParameters: [Parameters.acceptLanguage],\n  responses: {\n    202: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  serializer\n};\n\nconst beginCreateOrUpdateAtTenantScopeOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"PUT\",\n  path: \"providers/Microsoft.Resources/deployments/{deploymentName}\",\n  urlParameters: [Parameters.deploymentName],\n  queryParameters: [Parameters.apiVersion],\n  headerParameters: [Parameters.acceptLanguage],\n  requestBody: {\n    parameterPath: \"parameters\",\n    mapper: {\n      ...Mappers.ScopedDeployment,\n      required: true\n    }\n  },\n  responses: {\n    200: {\n      bodyMapper: Mappers.DeploymentExtended\n    },\n    201: {\n      bodyMapper: Mappers.DeploymentExtended\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  serializer\n};\n\nconst beginValidateAtTenantScopeOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"POST\",\n  path: \"providers/Microsoft.Resources/deployments/{deploymentName}/validate\",\n  urlParameters: [Parameters.deploymentName],\n  queryParameters: [Parameters.apiVersion],\n  headerParameters: [Parameters.acceptLanguage],\n  requestBody: {\n    parameterPath: \"parameters\",\n    mapper: {\n      ...Mappers.ScopedDeployment,\n      required: true\n    }\n  },\n  responses: {\n    200: {\n      bodyMapper: Mappers.DeploymentValidateResult\n    },\n    202: {},\n    400: {\n      bodyMapper: Mappers.DeploymentValidateResult\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  serializer\n};\n\nconst beginWhatIfAtTenantScopeOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"POST\",\n  path: \"providers/Microsoft.Resources/deployments/{deploymentName}/whatIf\",\n  urlParameters: [Parameters.deploymentName],\n  queryParameters: [Parameters.apiVersion],\n  headerParameters: [Parameters.acceptLanguage],\n  requestBody: {\n    parameterPath: \"parameters\",\n    mapper: {\n      ...Mappers.ScopedDeploymentWhatIf,\n      required: true\n    }\n  },\n  responses: {\n    200: {\n      bodyMapper: Mappers.WhatIfOperationResult,\n      headersMapper: Mappers.DeploymentsWhatIfAtTenantScopeHeaders\n    },\n    202: {\n      headersMapper: Mappers.DeploymentsWhatIfAtTenantScopeHeaders\n    },\n    default: {\n      bodyMapper: Mappers.CloudError,\n      headersMapper: Mappers.DeploymentsWhatIfAtTenantScopeHeaders\n    }\n  },\n  serializer\n};\n\nconst beginDeleteAtManagementGroupScopeOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"DELETE\",\n  path:\n    \"providers/Microsoft.Management/managementGroups/{groupId}/providers/Microsoft.Resources/deployments/{deploymentName}\",\n  urlParameters: [Parameters.groupId, Parameters.deploymentName],\n  queryParameters: [Parameters.apiVersion],\n  headerParameters: [Parameters.acceptLanguage],\n  responses: {\n    202: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  serializer\n};\n\nconst beginCreateOrUpdateAtManagementGroupScopeOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"PUT\",\n  path:\n    \"providers/Microsoft.Management/managementGroups/{groupId}/providers/Microsoft.Resources/deployments/{deploymentName}\",\n  urlParameters: [Parameters.groupId, Parameters.deploymentName],\n  queryParameters: [Parameters.apiVersion],\n  headerParameters: [Parameters.acceptLanguage],\n  requestBody: {\n    parameterPath: \"parameters\",\n    mapper: {\n      ...Mappers.ScopedDeployment,\n      required: true\n    }\n  },\n  responses: {\n    200: {\n      bodyMapper: Mappers.DeploymentExtended\n    },\n    201: {\n      bodyMapper: Mappers.DeploymentExtended\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  serializer\n};\n\nconst beginValidateAtManagementGroupScopeOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"POST\",\n  path:\n    \"providers/Microsoft.Management/managementGroups/{groupId}/providers/Microsoft.Resources/deployments/{deploymentName}/validate\",\n  urlParameters: [Parameters.groupId, Parameters.deploymentName],\n  queryParameters: [Parameters.apiVersion],\n  headerParameters: [Parameters.acceptLanguage],\n  requestBody: {\n    parameterPath: \"parameters\",\n    mapper: {\n      ...Mappers.ScopedDeployment,\n      required: true\n    }\n  },\n  responses: {\n    200: {\n      bodyMapper: Mappers.DeploymentValidateResult\n    },\n    202: {},\n    400: {\n      bodyMapper: Mappers.DeploymentValidateResult\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  serializer\n};\n\nconst beginWhatIfAtManagementGroupScopeOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"POST\",\n  path:\n    \"providers/Microsoft.Management/managementGroups/{groupId}/providers/Microsoft.Resources/deployments/{deploymentName}/whatIf\",\n  urlParameters: [Parameters.groupId, Parameters.deploymentName],\n  queryParameters: [Parameters.apiVersion],\n  headerParameters: [Parameters.acceptLanguage],\n  requestBody: {\n    parameterPath: \"parameters\",\n    mapper: {\n      ...Mappers.ScopedDeploymentWhatIf,\n      required: true\n    }\n  },\n  responses: {\n    200: {\n      bodyMapper: Mappers.WhatIfOperationResult,\n      headersMapper: Mappers.DeploymentsWhatIfAtManagementGroupScopeHeaders\n    },\n    202: {\n      headersMapper: Mappers.DeploymentsWhatIfAtManagementGroupScopeHeaders\n    },\n    default: {\n      bodyMapper: Mappers.CloudError,\n      headersMapper: Mappers.DeploymentsWhatIfAtManagementGroupScopeHeaders\n    }\n  },\n  serializer\n};\n\nconst beginDeleteAtSubscriptionScopeOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"DELETE\",\n  path: \"subscriptions/{subscriptionId}/providers/Microsoft.Resources/deployments/{deploymentName}\",\n  urlParameters: [Parameters.deploymentName, Parameters.subscriptionId],\n  queryParameters: [Parameters.apiVersion],\n  headerParameters: [Parameters.acceptLanguage],\n  responses: {\n    202: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  serializer\n};\n\nconst beginCreateOrUpdateAtSubscriptionScopeOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"PUT\",\n  path: \"subscriptions/{subscriptionId}/providers/Microsoft.Resources/deployments/{deploymentName}\",\n  urlParameters: [Parameters.deploymentName, Parameters.subscriptionId],\n  queryParameters: [Parameters.apiVersion],\n  headerParameters: [Parameters.acceptLanguage],\n  requestBody: {\n    parameterPath: \"parameters\",\n    mapper: {\n      ...Mappers.Deployment,\n      required: true\n    }\n  },\n  responses: {\n    200: {\n      bodyMapper: Mappers.DeploymentExtended\n    },\n    201: {\n      bodyMapper: Mappers.DeploymentExtended\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  serializer\n};\n\nconst beginValidateAtSubscriptionScopeOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"POST\",\n  path:\n    \"subscriptions/{subscriptionId}/providers/Microsoft.Resources/deployments/{deploymentName}/validate\",\n  urlParameters: [Parameters.deploymentName, Parameters.subscriptionId],\n  queryParameters: [Parameters.apiVersion],\n  headerParameters: [Parameters.acceptLanguage],\n  requestBody: {\n    parameterPath: \"parameters\",\n    mapper: {\n      ...Mappers.Deployment,\n      required: true\n    }\n  },\n  responses: {\n    200: {\n      bodyMapper: Mappers.DeploymentValidateResult\n    },\n    202: {},\n    400: {\n      bodyMapper: Mappers.DeploymentValidateResult\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  serializer\n};\n\nconst beginWhatIfAtSubscriptionScopeOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"POST\",\n  path:\n    \"subscriptions/{subscriptionId}/providers/Microsoft.Resources/deployments/{deploymentName}/whatIf\",\n  urlParameters: [Parameters.deploymentName, Parameters.subscriptionId],\n  queryParameters: [Parameters.apiVersion],\n  headerParameters: [Parameters.acceptLanguage],\n  requestBody: {\n    parameterPath: \"parameters\",\n    mapper: {\n      ...Mappers.DeploymentWhatIf,\n      required: true\n    }\n  },\n  responses: {\n    200: {\n      bodyMapper: Mappers.WhatIfOperationResult,\n      headersMapper: Mappers.DeploymentsWhatIfAtSubscriptionScopeHeaders\n    },\n    202: {\n      headersMapper: Mappers.DeploymentsWhatIfAtSubscriptionScopeHeaders\n    },\n    default: {\n      bodyMapper: Mappers.CloudError,\n      headersMapper: Mappers.DeploymentsWhatIfAtSubscriptionScopeHeaders\n    }\n  },\n  serializer\n};\n\nconst beginDeleteMethodOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"DELETE\",\n  path:\n    \"subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.Resources/deployments/{deploymentName}\",\n  urlParameters: [\n    Parameters.resourceGroupName,\n    Parameters.deploymentName,\n    Parameters.subscriptionId\n  ],\n  queryParameters: [Parameters.apiVersion],\n  headerParameters: [Parameters.acceptLanguage],\n  responses: {\n    202: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  serializer\n};\n\nconst beginCreateOrUpdateOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"PUT\",\n  path:\n    \"subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.Resources/deployments/{deploymentName}\",\n  urlParameters: [\n    Parameters.resourceGroupName,\n    Parameters.deploymentName,\n    Parameters.subscriptionId\n  ],\n  queryParameters: [Parameters.apiVersion],\n  headerParameters: [Parameters.acceptLanguage],\n  requestBody: {\n    parameterPath: \"parameters\",\n    mapper: {\n      ...Mappers.Deployment,\n      required: true\n    }\n  },\n  responses: {\n    200: {\n      bodyMapper: Mappers.DeploymentExtended\n    },\n    201: {\n      bodyMapper: Mappers.DeploymentExtended\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  serializer\n};\n\nconst beginValidateOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"POST\",\n  path:\n    \"subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.Resources/deployments/{deploymentName}/validate\",\n  urlParameters: [\n    Parameters.resourceGroupName,\n    Parameters.deploymentName,\n    Parameters.subscriptionId\n  ],\n  queryParameters: [Parameters.apiVersion],\n  headerParameters: [Parameters.acceptLanguage],\n  requestBody: {\n    parameterPath: \"parameters\",\n    mapper: {\n      ...Mappers.Deployment,\n      required: true\n    }\n  },\n  responses: {\n    200: {\n      bodyMapper: Mappers.DeploymentValidateResult\n    },\n    202: {},\n    400: {\n      bodyMapper: Mappers.DeploymentValidateResult\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  serializer\n};\n\nconst beginWhatIfOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"POST\",\n  path:\n    \"subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.Resources/deployments/{deploymentName}/whatIf\",\n  urlParameters: [\n    Parameters.resourceGroupName,\n    Parameters.deploymentName,\n    Parameters.subscriptionId\n  ],\n  queryParameters: [Parameters.apiVersion],\n  headerParameters: [Parameters.acceptLanguage],\n  requestBody: {\n    parameterPath: \"parameters\",\n    mapper: {\n      ...Mappers.DeploymentWhatIf,\n      required: true\n    }\n  },\n  responses: {\n    200: {\n      bodyMapper: Mappers.WhatIfOperationResult,\n      headersMapper: Mappers.DeploymentsWhatIfHeaders\n    },\n    202: {\n      headersMapper: Mappers.DeploymentsWhatIfHeaders\n    },\n    default: {\n      bodyMapper: Mappers.CloudError,\n      headersMapper: Mappers.DeploymentsWhatIfHeaders\n    }\n  },\n  serializer\n};\n\nconst listAtScopeNextOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"GET\",\n  baseUrl: \"https://management.azure.com\",\n  path: \"{nextLink}\",\n  urlParameters: [Parameters.nextPageLink],\n  queryParameters: [Parameters.filter, Parameters.top, Parameters.apiVersion],\n  headerParameters: [Parameters.acceptLanguage],\n  responses: {\n    200: {\n      bodyMapper: Mappers.DeploymentListResult\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  serializer\n};\n\nconst listAtTenantScopeNextOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"GET\",\n  baseUrl: \"https://management.azure.com\",\n  path: \"{nextLink}\",\n  urlParameters: [Parameters.nextPageLink],\n  queryParameters: [Parameters.filter, Parameters.top, Parameters.apiVersion],\n  headerParameters: [Parameters.acceptLanguage],\n  responses: {\n    200: {\n      bodyMapper: Mappers.DeploymentListResult\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  serializer\n};\n\nconst listAtManagementGroupScopeNextOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"GET\",\n  baseUrl: \"https://management.azure.com\",\n  path: \"{nextLink}\",\n  urlParameters: [Parameters.nextPageLink],\n  queryParameters: [Parameters.filter, Parameters.top, Parameters.apiVersion],\n  headerParameters: [Parameters.acceptLanguage],\n  responses: {\n    200: {\n      bodyMapper: Mappers.DeploymentListResult\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  serializer\n};\n\nconst listAtSubscriptionScopeNextOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"GET\",\n  baseUrl: \"https://management.azure.com\",\n  path: \"{nextLink}\",\n  urlParameters: [Parameters.nextPageLink],\n  queryParameters: [Parameters.filter, Parameters.top, Parameters.apiVersion],\n  headerParameters: [Parameters.acceptLanguage],\n  responses: {\n    200: {\n      bodyMapper: Mappers.DeploymentListResult\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  serializer\n};\n\nconst listByResourceGroupNextOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"GET\",\n  baseUrl: \"https://management.azure.com\",\n  path: \"{nextLink}\",\n  urlParameters: [Parameters.nextPageLink],\n  queryParameters: [Parameters.filter, Parameters.top, Parameters.apiVersion],\n  headerParameters: [Parameters.acceptLanguage],\n  responses: {\n    200: {\n      bodyMapper: Mappers.DeploymentListResult\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nexport {\n  Alias,\n  AliasPath,\n  AliasPathMetadata,\n  AliasPattern,\n  ApiProfile,\n  CloudError,\n  ErrorAdditionalInfo,\n  ErrorResponse,\n  Provider,\n  ProviderExtendedLocation,\n  ProviderListResult,\n  ProviderResourceType\n} from \"../models/mappers\";\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is\n * regenerated.\n */\n\nimport * as msRest from \"@azure/ms-rest-js\";\nimport * as Models from \"../models\";\nimport * as Mappers from \"../models/providersMappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { ResourceManagementClientContext } from \"../resourceManagementClientContext\";\n\n/** Class representing a Providers. */\nexport class Providers {\n  private readonly client: ResourceManagementClientContext;\n\n  /**\n   * Create a Providers.\n   * @param {ResourceManagementClientContext} client Reference to the service client.\n   */\n  constructor(client: ResourceManagementClientContext) {\n    this.client = client;\n  }\n\n  /**\n   * Unregisters a subscription from a resource provider.\n   * @param resourceProviderNamespace The namespace of the resource provider to unregister.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.ProvidersUnregisterResponse>\n   */\n  unregister(\n    resourceProviderNamespace: string,\n    options?: msRest.RequestOptionsBase\n  ): Promise<Models.ProvidersUnregisterResponse>;\n  /**\n   * @param resourceProviderNamespace The namespace of the resource provider to unregister.\n   * @param callback The callback\n   */\n  unregister(\n    resourceProviderNamespace: string,\n    callback: msRest.ServiceCallback<Models.Provider>\n  ): void;\n  /**\n   * @param resourceProviderNamespace The namespace of the resource provider to unregister.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  unregister(\n    resourceProviderNamespace: string,\n    options: msRest.RequestOptionsBase,\n    callback: msRest.ServiceCallback<Models.Provider>\n  ): void;\n  unregister(\n    resourceProviderNamespace: string,\n    options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.Provider>,\n    callback?: msRest.ServiceCallback<Models.Provider>\n  ): Promise<Models.ProvidersUnregisterResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceProviderNamespace,\n        options\n      },\n      unregisterOperationSpec,\n      callback\n    ) as Promise<Models.ProvidersUnregisterResponse>;\n  }\n\n  /**\n   * Registers a management group with a resource provider.\n   * @param resourceProviderNamespace The namespace of the resource provider to register.\n   * @param groupId The management group ID.\n   * @param [options] The optional parameters\n   * @returns Promise<msRest.RestResponse>\n   */\n  registerAtManagementGroupScope(\n    resourceProviderNamespace: string,\n    groupId: string,\n    options?: msRest.RequestOptionsBase\n  ): Promise<msRest.RestResponse>;\n  /**\n   * @param resourceProviderNamespace The namespace of the resource provider to register.\n   * @param groupId The management group ID.\n   * @param callback The callback\n   */\n  registerAtManagementGroupScope(\n    resourceProviderNamespace: string,\n    groupId: string,\n    callback: msRest.ServiceCallback<void>\n  ): void;\n  /**\n   * @param resourceProviderNamespace The namespace of the resource provider to register.\n   * @param groupId The management group ID.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  registerAtManagementGroupScope(\n    resourceProviderNamespace: string,\n    groupId: string,\n    options: msRest.RequestOptionsBase,\n    callback: msRest.ServiceCallback<void>\n  ): void;\n  registerAtManagementGroupScope(\n    resourceProviderNamespace: string,\n    groupId: string,\n    options?: msRest.RequestOptionsBase | msRest.ServiceCallback<void>,\n    callback?: msRest.ServiceCallback<void>\n  ): Promise<msRest.RestResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceProviderNamespace,\n        groupId,\n        options\n      },\n      registerAtManagementGroupScopeOperationSpec,\n      callback\n    );\n  }\n\n  /**\n   * Registers a subscription with a resource provider.\n   * @param resourceProviderNamespace The namespace of the resource provider to register.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.ProvidersRegisterResponse>\n   */\n  register(\n    resourceProviderNamespace: string,\n    options?: msRest.RequestOptionsBase\n  ): Promise<Models.ProvidersRegisterResponse>;\n  /**\n   * @param resourceProviderNamespace The namespace of the resource provider to register.\n   * @param callback The callback\n   */\n  register(\n    resourceProviderNamespace: string,\n    callback: msRest.ServiceCallback<Models.Provider>\n  ): void;\n  /**\n   * @param resourceProviderNamespace The namespace of the resource provider to register.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  register(\n    resourceProviderNamespace: string,\n    options: msRest.RequestOptionsBase,\n    callback: msRest.ServiceCallback<Models.Provider>\n  ): void;\n  register(\n    resourceProviderNamespace: string,\n    options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.Provider>,\n    callback?: msRest.ServiceCallback<Models.Provider>\n  ): Promise<Models.ProvidersRegisterResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceProviderNamespace,\n        options\n      },\n      registerOperationSpec,\n      callback\n    ) as Promise<Models.ProvidersRegisterResponse>;\n  }\n\n  /**\n   * Gets all resource providers for a subscription.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.ProvidersListResponse>\n   */\n  list(options?: Models.ProvidersListOptionalParams): Promise<Models.ProvidersListResponse>;\n  /**\n   * @param callback The callback\n   */\n  list(callback: msRest.ServiceCallback<Models.ProviderListResult>): void;\n  /**\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  list(\n    options: Models.ProvidersListOptionalParams,\n    callback: msRest.ServiceCallback<Models.ProviderListResult>\n  ): void;\n  list(\n    options?:\n      | Models.ProvidersListOptionalParams\n      | msRest.ServiceCallback<Models.ProviderListResult>,\n    callback?: msRest.ServiceCallback<Models.ProviderListResult>\n  ): Promise<Models.ProvidersListResponse> {\n    return this.client.sendOperationRequest(\n      {\n        options\n      },\n      listOperationSpec,\n      callback\n    ) as Promise<Models.ProvidersListResponse>;\n  }\n\n  /**\n   * Gets all resource providers for the tenant.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.ProvidersListAtTenantScopeResponse>\n   */\n  listAtTenantScope(\n    options?: Models.ProvidersListAtTenantScopeOptionalParams\n  ): Promise<Models.ProvidersListAtTenantScopeResponse>;\n  /**\n   * @param callback The callback\n   */\n  listAtTenantScope(callback: msRest.ServiceCallback<Models.ProviderListResult>): void;\n  /**\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  listAtTenantScope(\n    options: Models.ProvidersListAtTenantScopeOptionalParams,\n    callback: msRest.ServiceCallback<Models.ProviderListResult>\n  ): void;\n  listAtTenantScope(\n    options?:\n      | Models.ProvidersListAtTenantScopeOptionalParams\n      | msRest.ServiceCallback<Models.ProviderListResult>,\n    callback?: msRest.ServiceCallback<Models.ProviderListResult>\n  ): Promise<Models.ProvidersListAtTenantScopeResponse> {\n    return this.client.sendOperationRequest(\n      {\n        options\n      },\n      listAtTenantScopeOperationSpec,\n      callback\n    ) as Promise<Models.ProvidersListAtTenantScopeResponse>;\n  }\n\n  /**\n   * Gets the specified resource provider.\n   * @param resourceProviderNamespace The namespace of the resource provider.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.ProvidersGetResponse>\n   */\n  get(\n    resourceProviderNamespace: string,\n    options?: Models.ProvidersGetOptionalParams\n  ): Promise<Models.ProvidersGetResponse>;\n  /**\n   * @param resourceProviderNamespace The namespace of the resource provider.\n   * @param callback The callback\n   */\n  get(resourceProviderNamespace: string, callback: msRest.ServiceCallback<Models.Provider>): void;\n  /**\n   * @param resourceProviderNamespace The namespace of the resource provider.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  get(\n    resourceProviderNamespace: string,\n    options: Models.ProvidersGetOptionalParams,\n    callback: msRest.ServiceCallback<Models.Provider>\n  ): void;\n  get(\n    resourceProviderNamespace: string,\n    options?: Models.ProvidersGetOptionalParams | msRest.ServiceCallback<Models.Provider>,\n    callback?: msRest.ServiceCallback<Models.Provider>\n  ): Promise<Models.ProvidersGetResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceProviderNamespace,\n        options\n      },\n      getOperationSpec,\n      callback\n    ) as Promise<Models.ProvidersGetResponse>;\n  }\n\n  /**\n   * Gets the specified resource provider at the tenant level.\n   * @param resourceProviderNamespace The namespace of the resource provider.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.ProvidersGetAtTenantScopeResponse>\n   */\n  getAtTenantScope(\n    resourceProviderNamespace: string,\n    options?: Models.ProvidersGetAtTenantScopeOptionalParams\n  ): Promise<Models.ProvidersGetAtTenantScopeResponse>;\n  /**\n   * @param resourceProviderNamespace The namespace of the resource provider.\n   * @param callback The callback\n   */\n  getAtTenantScope(\n    resourceProviderNamespace: string,\n    callback: msRest.ServiceCallback<Models.Provider>\n  ): void;\n  /**\n   * @param resourceProviderNamespace The namespace of the resource provider.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  getAtTenantScope(\n    resourceProviderNamespace: string,\n    options: Models.ProvidersGetAtTenantScopeOptionalParams,\n    callback: msRest.ServiceCallback<Models.Provider>\n  ): void;\n  getAtTenantScope(\n    resourceProviderNamespace: string,\n    options?:\n      | Models.ProvidersGetAtTenantScopeOptionalParams\n      | msRest.ServiceCallback<Models.Provider>,\n    callback?: msRest.ServiceCallback<Models.Provider>\n  ): Promise<Models.ProvidersGetAtTenantScopeResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceProviderNamespace,\n        options\n      },\n      getAtTenantScopeOperationSpec,\n      callback\n    ) as Promise<Models.ProvidersGetAtTenantScopeResponse>;\n  }\n\n  /**\n   * Gets all resource providers for a subscription.\n   * @param nextPageLink The NextLink from the previous successful call to List operation.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.ProvidersListNextResponse>\n   */\n  listNext(\n    nextPageLink: string,\n    options?: Models.ProvidersListNextOptionalParams\n  ): Promise<Models.ProvidersListNextResponse>;\n  /**\n   * @param nextPageLink The NextLink from the previous successful call to List operation.\n   * @param callback The callback\n   */\n  listNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.ProviderListResult>): void;\n  /**\n   * @param nextPageLink The NextLink from the previous successful call to List operation.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  listNext(\n    nextPageLink: string,\n    options: Models.ProvidersListNextOptionalParams,\n    callback: msRest.ServiceCallback<Models.ProviderListResult>\n  ): void;\n  listNext(\n    nextPageLink: string,\n    options?:\n      | Models.ProvidersListNextOptionalParams\n      | msRest.ServiceCallback<Models.ProviderListResult>,\n    callback?: msRest.ServiceCallback<Models.ProviderListResult>\n  ): Promise<Models.ProvidersListNextResponse> {\n    return this.client.sendOperationRequest(\n      {\n        nextPageLink,\n        options\n      },\n      listNextOperationSpec,\n      callback\n    ) as Promise<Models.ProvidersListNextResponse>;\n  }\n\n  /**\n   * Gets all resource providers for the tenant.\n   * @param nextPageLink The NextLink from the previous successful call to List operation.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.ProvidersListAtTenantScopeNextResponse>\n   */\n  listAtTenantScopeNext(\n    nextPageLink: string,\n    options?: Models.ProvidersListAtTenantScopeNextOptionalParams\n  ): Promise<Models.ProvidersListAtTenantScopeNextResponse>;\n  /**\n   * @param nextPageLink The NextLink from the previous successful call to List operation.\n   * @param callback The callback\n   */\n  listAtTenantScopeNext(\n    nextPageLink: string,\n    callback: msRest.ServiceCallback<Models.ProviderListResult>\n  ): void;\n  /**\n   * @param nextPageLink The NextLink from the previous successful call to List operation.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  listAtTenantScopeNext(\n    nextPageLink: string,\n    options: Models.ProvidersListAtTenantScopeNextOptionalParams,\n    callback: msRest.ServiceCallback<Models.ProviderListResult>\n  ): void;\n  listAtTenantScopeNext(\n    nextPageLink: string,\n    options?:\n      | Models.ProvidersListAtTenantScopeNextOptionalParams\n      | msRest.ServiceCallback<Models.ProviderListResult>,\n    callback?: msRest.ServiceCallback<Models.ProviderListResult>\n  ): Promise<Models.ProvidersListAtTenantScopeNextResponse> {\n    return this.client.sendOperationRequest(\n      {\n        nextPageLink,\n        options\n      },\n      listAtTenantScopeNextOperationSpec,\n      callback\n    ) as Promise<Models.ProvidersListAtTenantScopeNextResponse>;\n  }\n}\n\n// Operation Specifications\nconst serializer = new msRest.Serializer(Mappers);\nconst unregisterOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"POST\",\n  path: \"subscriptions/{subscriptionId}/providers/{resourceProviderNamespace}/unregister\",\n  urlParameters: [Parameters.resourceProviderNamespace, Parameters.subscriptionId],\n  queryParameters: [Parameters.apiVersion],\n  headerParameters: [Parameters.acceptLanguage],\n  responses: {\n    200: {\n      bodyMapper: Mappers.Provider\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  serializer\n};\n\nconst registerAtManagementGroupScopeOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"POST\",\n  path:\n    \"providers/Microsoft.Management/managementGroups/{groupId}/providers/{resourceProviderNamespace}/register\",\n  urlParameters: [Parameters.resourceProviderNamespace, Parameters.groupId],\n  queryParameters: [Parameters.apiVersion],\n  headerParameters: [Parameters.acceptLanguage],\n  responses: {\n    200: {},\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  serializer\n};\n\nconst registerOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"POST\",\n  path: \"subscriptions/{subscriptionId}/providers/{resourceProviderNamespace}/register\",\n  urlParameters: [Parameters.resourceProviderNamespace, Parameters.subscriptionId],\n  queryParameters: [Parameters.apiVersion],\n  headerParameters: [Parameters.acceptLanguage],\n  responses: {\n    200: {\n      bodyMapper: Mappers.Provider\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  serializer\n};\n\nconst listOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"GET\",\n  path: \"subscriptions/{subscriptionId}/providers\",\n  urlParameters: [Parameters.subscriptionId],\n  queryParameters: [Parameters.top, Parameters.expand, Parameters.apiVersion],\n  headerParameters: [Parameters.acceptLanguage],\n  responses: {\n    200: {\n      bodyMapper: Mappers.ProviderListResult\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  serializer\n};\n\nconst listAtTenantScopeOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"GET\",\n  path: \"providers\",\n  queryParameters: [Parameters.top, Parameters.expand, Parameters.apiVersion],\n  headerParameters: [Parameters.acceptLanguage],\n  responses: {\n    200: {\n      bodyMapper: Mappers.ProviderListResult\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  serializer\n};\n\nconst getOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"GET\",\n  path: \"subscriptions/{subscriptionId}/providers/{resourceProviderNamespace}\",\n  urlParameters: [Parameters.resourceProviderNamespace, Parameters.subscriptionId],\n  queryParameters: [Parameters.expand, Parameters.apiVersion],\n  headerParameters: [Parameters.acceptLanguage],\n  responses: {\n    200: {\n      bodyMapper: Mappers.Provider\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  serializer\n};\n\nconst getAtTenantScopeOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"GET\",\n  path: \"providers/{resourceProviderNamespace}\",\n  urlParameters: [Parameters.resourceProviderNamespace],\n  queryParameters: [Parameters.expand, Parameters.apiVersion],\n  headerParameters: [Parameters.acceptLanguage],\n  responses: {\n    200: {\n      bodyMapper: Mappers.Provider\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  serializer\n};\n\nconst listNextOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"GET\",\n  baseUrl: \"https://management.azure.com\",\n  path: \"{nextLink}\",\n  urlParameters: [Parameters.nextPageLink],\n  queryParameters: [Parameters.top, Parameters.expand, Parameters.apiVersion],\n  headerParameters: [Parameters.acceptLanguage],\n  responses: {\n    200: {\n      bodyMapper: Mappers.ProviderListResult\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  serializer\n};\n\nconst listAtTenantScopeNextOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"GET\",\n  baseUrl: \"https://management.azure.com\",\n  path: \"{nextLink}\",\n  urlParameters: [Parameters.nextPageLink],\n  queryParameters: [Parameters.top, Parameters.expand, Parameters.apiVersion],\n  headerParameters: [Parameters.acceptLanguage],\n  responses: {\n    200: {\n      bodyMapper: Mappers.ProviderListResult\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nexport {\n  Alias,\n  AliasPath,\n  AliasPathMetadata,\n  AliasPattern,\n  ApiProfile,\n  CloudError,\n  ErrorAdditionalInfo,\n  ErrorResponse,\n  ProviderExtendedLocation,\n  ProviderResourceType,\n  ProviderResourceTypeListResult\n} from \"../models/mappers\";\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is\n * regenerated.\n */\n\nimport * as msRest from \"@azure/ms-rest-js\";\nimport * as Models from \"../models\";\nimport * as Mappers from \"../models/providerResourceTypesMappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { ResourceManagementClientContext } from \"../resourceManagementClientContext\";\n\n/** Class representing a ProviderResourceTypes. */\nexport class ProviderResourceTypes {\n  private readonly client: ResourceManagementClientContext;\n\n  /**\n   * Create a ProviderResourceTypes.\n   * @param {ResourceManagementClientContext} client Reference to the service client.\n   */\n  constructor(client: ResourceManagementClientContext) {\n    this.client = client;\n  }\n\n  /**\n   * List the resource types for a specified resource provider.\n   * @param resourceProviderNamespace The namespace of the resource provider.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.ProviderResourceTypesListResponse>\n   */\n  list(\n    resourceProviderNamespace: string,\n    options?: Models.ProviderResourceTypesListOptionalParams\n  ): Promise<Models.ProviderResourceTypesListResponse>;\n  /**\n   * @param resourceProviderNamespace The namespace of the resource provider.\n   * @param callback The callback\n   */\n  list(\n    resourceProviderNamespace: string,\n    callback: msRest.ServiceCallback<Models.ProviderResourceTypeListResult>\n  ): void;\n  /**\n   * @param resourceProviderNamespace The namespace of the resource provider.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  list(\n    resourceProviderNamespace: string,\n    options: Models.ProviderResourceTypesListOptionalParams,\n    callback: msRest.ServiceCallback<Models.ProviderResourceTypeListResult>\n  ): void;\n  list(\n    resourceProviderNamespace: string,\n    options?:\n      | Models.ProviderResourceTypesListOptionalParams\n      | msRest.ServiceCallback<Models.ProviderResourceTypeListResult>,\n    callback?: msRest.ServiceCallback<Models.ProviderResourceTypeListResult>\n  ): Promise<Models.ProviderResourceTypesListResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceProviderNamespace,\n        options\n      },\n      listOperationSpec,\n      callback\n    ) as Promise<Models.ProviderResourceTypesListResponse>;\n  }\n}\n\n// Operation Specifications\nconst serializer = new msRest.Serializer(Mappers);\nconst listOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"GET\",\n  path: \"subscriptions/{subscriptionId}/providers/{resourceProviderNamespace}/resourceTypes\",\n  urlParameters: [Parameters.resourceProviderNamespace, Parameters.subscriptionId],\n  queryParameters: [Parameters.expand, Parameters.apiVersion],\n  headerParameters: [Parameters.acceptLanguage],\n  responses: {\n    200: {\n      bodyMapper: Mappers.ProviderResourceTypeListResult\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nexport {\n  Alias,\n  AliasPath,\n  AliasPathMetadata,\n  AliasPattern,\n  ApiProfile,\n  BaseResource,\n  BasicDependency,\n  CloudError,\n  DebugSetting,\n  Dependency,\n  DeploymentExtended,\n  DeploymentPropertiesExtended,\n  ErrorAdditionalInfo,\n  ErrorResponse,\n  ExtendedLocation,\n  GenericResource,\n  GenericResourceExpanded,\n  Identity,\n  IdentityUserAssignedIdentitiesValue,\n  OnErrorDeploymentExtended,\n  ParametersLink,\n  Plan,\n  Provider,\n  ProviderExtendedLocation,\n  ProviderResourceType,\n  Resource,\n  ResourceGroup,\n  ResourceGroupProperties,\n  ResourceListResult,\n  ResourceReference,\n  ResourcesMoveInfo,\n  Sku,\n  SubResource,\n  TagCount,\n  TagDetails,\n  Tags,\n  TagsResource,\n  TagValue,\n  TemplateLink\n} from \"../models/mappers\";\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is\n * regenerated.\n */\n\nimport * as msRest from \"@azure/ms-rest-js\";\nimport * as msRestAzure from \"@azure/ms-rest-azure-js\";\nimport * as Models from \"../models\";\nimport * as Mappers from \"../models/resourcesMappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { ResourceManagementClientContext } from \"../resourceManagementClientContext\";\n\n/** Class representing a Resources. */\nexport class Resources {\n  private readonly client: ResourceManagementClientContext;\n\n  /**\n   * Create a Resources.\n   * @param {ResourceManagementClientContext} client Reference to the service client.\n   */\n  constructor(client: ResourceManagementClientContext) {\n    this.client = client;\n  }\n\n  /**\n   * Get all the resources for a resource group.\n   * @param resourceGroupName The resource group with the resources to get.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.ResourcesListByResourceGroupResponse>\n   */\n  listByResourceGroup(\n    resourceGroupName: string,\n    options?: Models.ResourcesListByResourceGroupOptionalParams\n  ): Promise<Models.ResourcesListByResourceGroupResponse>;\n  /**\n   * @param resourceGroupName The resource group with the resources to get.\n   * @param callback The callback\n   */\n  listByResourceGroup(\n    resourceGroupName: string,\n    callback: msRest.ServiceCallback<Models.ResourceListResult>\n  ): void;\n  /**\n   * @param resourceGroupName The resource group with the resources to get.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  listByResourceGroup(\n    resourceGroupName: string,\n    options: Models.ResourcesListByResourceGroupOptionalParams,\n    callback: msRest.ServiceCallback<Models.ResourceListResult>\n  ): void;\n  listByResourceGroup(\n    resourceGroupName: string,\n    options?:\n      | Models.ResourcesListByResourceGroupOptionalParams\n      | msRest.ServiceCallback<Models.ResourceListResult>,\n    callback?: msRest.ServiceCallback<Models.ResourceListResult>\n  ): Promise<Models.ResourcesListByResourceGroupResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        options\n      },\n      listByResourceGroupOperationSpec,\n      callback\n    ) as Promise<Models.ResourcesListByResourceGroupResponse>;\n  }\n\n  /**\n   * The resources to move must be in the same source resource group. The target resource group may\n   * be in a different subscription. When moving resources, both the source group and the target\n   * group are locked for the duration of the operation. Write and delete operations are blocked on\n   * the groups until the move completes.\n   * @summary Moves resources from one resource group to another resource group.\n   * @param sourceResourceGroupName The name of the resource group containing the resources to move.\n   * @param parameters Parameters for moving resources.\n   * @param [options] The optional parameters\n   * @returns Promise<msRest.RestResponse>\n   */\n  moveResources(\n    sourceResourceGroupName: string,\n    parameters: Models.ResourcesMoveInfo,\n    options?: msRest.RequestOptionsBase\n  ): Promise<msRest.RestResponse> {\n    return this.beginMoveResources(sourceResourceGroupName, parameters, options).then((lroPoller) =>\n      lroPoller.pollUntilFinished()\n    );\n  }\n\n  /**\n   * This operation checks whether the specified resources can be moved to the target. The resources\n   * to move must be in the same source resource group. The target resource group may be in a\n   * different subscription. If validation succeeds, it returns HTTP response code 204 (no content).\n   * If validation fails, it returns HTTP response code 409 (Conflict) with an error message.\n   * Retrieve the URL in the Location header value to check the result of the long-running operation.\n   * @summary Validates whether resources can be moved from one resource group to another resource\n   * group.\n   * @param sourceResourceGroupName The name of the resource group containing the resources to\n   * validate for move.\n   * @param parameters Parameters for moving resources.\n   * @param [options] The optional parameters\n   * @returns Promise<msRest.RestResponse>\n   */\n  validateMoveResources(\n    sourceResourceGroupName: string,\n    parameters: Models.ResourcesMoveInfo,\n    options?: msRest.RequestOptionsBase\n  ): Promise<msRest.RestResponse> {\n    return this.beginValidateMoveResources(\n      sourceResourceGroupName,\n      parameters,\n      options\n    ).then((lroPoller) => lroPoller.pollUntilFinished());\n  }\n\n  /**\n   * Get all the resources in a subscription.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.ResourcesListResponse>\n   */\n  list(options?: Models.ResourcesListOptionalParams): Promise<Models.ResourcesListResponse>;\n  /**\n   * @param callback The callback\n   */\n  list(callback: msRest.ServiceCallback<Models.ResourceListResult>): void;\n  /**\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  list(\n    options: Models.ResourcesListOptionalParams,\n    callback: msRest.ServiceCallback<Models.ResourceListResult>\n  ): void;\n  list(\n    options?:\n      | Models.ResourcesListOptionalParams\n      | msRest.ServiceCallback<Models.ResourceListResult>,\n    callback?: msRest.ServiceCallback<Models.ResourceListResult>\n  ): Promise<Models.ResourcesListResponse> {\n    return this.client.sendOperationRequest(\n      {\n        options\n      },\n      listOperationSpec,\n      callback\n    ) as Promise<Models.ResourcesListResponse>;\n  }\n\n  /**\n   * Checks whether a resource exists.\n   * @param resourceGroupName The name of the resource group containing the resource to check. The\n   * name is case insensitive.\n   * @param resourceProviderNamespace The resource provider of the resource to check.\n   * @param parentResourcePath The parent resource identity.\n   * @param resourceType The resource type.\n   * @param resourceName The name of the resource to check whether it exists.\n   * @param apiVersion The API version to use for the operation.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.ResourcesCheckExistenceResponse>\n   */\n  checkExistence(\n    resourceGroupName: string,\n    resourceProviderNamespace: string,\n    parentResourcePath: string,\n    resourceType: string,\n    resourceName: string,\n    apiVersion: string,\n    options?: msRest.RequestOptionsBase\n  ): Promise<Models.ResourcesCheckExistenceResponse>;\n  /**\n   * @param resourceGroupName The name of the resource group containing the resource to check. The\n   * name is case insensitive.\n   * @param resourceProviderNamespace The resource provider of the resource to check.\n   * @param parentResourcePath The parent resource identity.\n   * @param resourceType The resource type.\n   * @param resourceName The name of the resource to check whether it exists.\n   * @param apiVersion The API version to use for the operation.\n   * @param callback The callback\n   */\n  checkExistence(\n    resourceGroupName: string,\n    resourceProviderNamespace: string,\n    parentResourcePath: string,\n    resourceType: string,\n    resourceName: string,\n    apiVersion: string,\n    callback: msRest.ServiceCallback<boolean>\n  ): void;\n  /**\n   * @param resourceGroupName The name of the resource group containing the resource to check. The\n   * name is case insensitive.\n   * @param resourceProviderNamespace The resource provider of the resource to check.\n   * @param parentResourcePath The parent resource identity.\n   * @param resourceType The resource type.\n   * @param resourceName The name of the resource to check whether it exists.\n   * @param apiVersion The API version to use for the operation.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  checkExistence(\n    resourceGroupName: string,\n    resourceProviderNamespace: string,\n    parentResourcePath: string,\n    resourceType: string,\n    resourceName: string,\n    apiVersion: string,\n    options: msRest.RequestOptionsBase,\n    callback: msRest.ServiceCallback<boolean>\n  ): void;\n  checkExistence(\n    resourceGroupName: string,\n    resourceProviderNamespace: string,\n    parentResourcePath: string,\n    resourceType: string,\n    resourceName: string,\n    apiVersion: string,\n    options?: msRest.RequestOptionsBase | msRest.ServiceCallback<boolean>,\n    callback?: msRest.ServiceCallback<boolean>\n  ): Promise<Models.ResourcesCheckExistenceResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        resourceProviderNamespace,\n        parentResourcePath,\n        resourceType,\n        resourceName,\n        apiVersion,\n        options\n      },\n      checkExistenceOperationSpec,\n      callback\n    ) as Promise<Models.ResourcesCheckExistenceResponse>;\n  }\n\n  /**\n   * Deletes a resource.\n   * @param resourceGroupName The name of the resource group that contains the resource to delete.\n   * The name is case insensitive.\n   * @param resourceProviderNamespace The namespace of the resource provider.\n   * @param parentResourcePath The parent resource identity.\n   * @param resourceType The resource type.\n   * @param resourceName The name of the resource to delete.\n   * @param apiVersion The API version to use for the operation.\n   * @param [options] The optional parameters\n   * @returns Promise<msRest.RestResponse>\n   */\n  deleteMethod(\n    resourceGroupName: string,\n    resourceProviderNamespace: string,\n    parentResourcePath: string,\n    resourceType: string,\n    resourceName: string,\n    apiVersion: string,\n    options?: msRest.RequestOptionsBase\n  ): Promise<msRest.RestResponse> {\n    return this.beginDeleteMethod(\n      resourceGroupName,\n      resourceProviderNamespace,\n      parentResourcePath,\n      resourceType,\n      resourceName,\n      apiVersion,\n      options\n    ).then((lroPoller) => lroPoller.pollUntilFinished());\n  }\n\n  /**\n   * Creates a resource.\n   * @param resourceGroupName The name of the resource group for the resource. The name is case\n   * insensitive.\n   * @param resourceProviderNamespace The namespace of the resource provider.\n   * @param parentResourcePath The parent resource identity.\n   * @param resourceType The resource type of the resource to create.\n   * @param resourceName The name of the resource to create.\n   * @param apiVersion The API version to use for the operation.\n   * @param parameters Parameters for creating or updating the resource.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.ResourcesCreateOrUpdateResponse>\n   */\n  createOrUpdate(\n    resourceGroupName: string,\n    resourceProviderNamespace: string,\n    parentResourcePath: string,\n    resourceType: string,\n    resourceName: string,\n    apiVersion: string,\n    parameters: Models.GenericResource,\n    options?: msRest.RequestOptionsBase\n  ): Promise<Models.ResourcesCreateOrUpdateResponse> {\n    return this.beginCreateOrUpdate(\n      resourceGroupName,\n      resourceProviderNamespace,\n      parentResourcePath,\n      resourceType,\n      resourceName,\n      apiVersion,\n      parameters,\n      options\n    ).then((lroPoller) => lroPoller.pollUntilFinished()) as Promise<\n      Models.ResourcesCreateOrUpdateResponse\n    >;\n  }\n\n  /**\n   * Updates a resource.\n   * @param resourceGroupName The name of the resource group for the resource. The name is case\n   * insensitive.\n   * @param resourceProviderNamespace The namespace of the resource provider.\n   * @param parentResourcePath The parent resource identity.\n   * @param resourceType The resource type of the resource to update.\n   * @param resourceName The name of the resource to update.\n   * @param apiVersion The API version to use for the operation.\n   * @param parameters Parameters for updating the resource.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.ResourcesUpdateResponse>\n   */\n  update(\n    resourceGroupName: string,\n    resourceProviderNamespace: string,\n    parentResourcePath: string,\n    resourceType: string,\n    resourceName: string,\n    apiVersion: string,\n    parameters: Models.GenericResource,\n    options?: msRest.RequestOptionsBase\n  ): Promise<Models.ResourcesUpdateResponse> {\n    return this.beginUpdate(\n      resourceGroupName,\n      resourceProviderNamespace,\n      parentResourcePath,\n      resourceType,\n      resourceName,\n      apiVersion,\n      parameters,\n      options\n    ).then((lroPoller) => lroPoller.pollUntilFinished()) as Promise<Models.ResourcesUpdateResponse>;\n  }\n\n  /**\n   * Gets a resource.\n   * @param resourceGroupName The name of the resource group containing the resource to get. The name\n   * is case insensitive.\n   * @param resourceProviderNamespace The namespace of the resource provider.\n   * @param parentResourcePath The parent resource identity.\n   * @param resourceType The resource type of the resource.\n   * @param resourceName The name of the resource to get.\n   * @param apiVersion The API version to use for the operation.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.ResourcesGetResponse>\n   */\n  get(\n    resourceGroupName: string,\n    resourceProviderNamespace: string,\n    parentResourcePath: string,\n    resourceType: string,\n    resourceName: string,\n    apiVersion: string,\n    options?: msRest.RequestOptionsBase\n  ): Promise<Models.ResourcesGetResponse>;\n  /**\n   * @param resourceGroupName The name of the resource group containing the resource to get. The name\n   * is case insensitive.\n   * @param resourceProviderNamespace The namespace of the resource provider.\n   * @param parentResourcePath The parent resource identity.\n   * @param resourceType The resource type of the resource.\n   * @param resourceName The name of the resource to get.\n   * @param apiVersion The API version to use for the operation.\n   * @param callback The callback\n   */\n  get(\n    resourceGroupName: string,\n    resourceProviderNamespace: string,\n    parentResourcePath: string,\n    resourceType: string,\n    resourceName: string,\n    apiVersion: string,\n    callback: msRest.ServiceCallback<Models.GenericResource>\n  ): void;\n  /**\n   * @param resourceGroupName The name of the resource group containing the resource to get. The name\n   * is case insensitive.\n   * @param resourceProviderNamespace The namespace of the resource provider.\n   * @param parentResourcePath The parent resource identity.\n   * @param resourceType The resource type of the resource.\n   * @param resourceName The name of the resource to get.\n   * @param apiVersion The API version to use for the operation.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  get(\n    resourceGroupName: string,\n    resourceProviderNamespace: string,\n    parentResourcePath: string,\n    resourceType: string,\n    resourceName: string,\n    apiVersion: string,\n    options: msRest.RequestOptionsBase,\n    callback: msRest.ServiceCallback<Models.GenericResource>\n  ): void;\n  get(\n    resourceGroupName: string,\n    resourceProviderNamespace: string,\n    parentResourcePath: string,\n    resourceType: string,\n    resourceName: string,\n    apiVersion: string,\n    options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.GenericResource>,\n    callback?: msRest.ServiceCallback<Models.GenericResource>\n  ): Promise<Models.ResourcesGetResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        resourceProviderNamespace,\n        parentResourcePath,\n        resourceType,\n        resourceName,\n        apiVersion,\n        options\n      },\n      getOperationSpec,\n      callback\n    ) as Promise<Models.ResourcesGetResponse>;\n  }\n\n  /**\n   * Checks by ID whether a resource exists.\n   * @param resourceId The fully qualified ID of the resource, including the resource name and\n   * resource type. Use the format,\n   * /subscriptions/{guid}/resourceGroups/{resource-group-name}/{resource-provider-namespace}/{resource-type}/{resource-name}\n   * @param apiVersion The API version to use for the operation.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.ResourcesCheckExistenceByIdResponse>\n   */\n  checkExistenceById(\n    resourceId: string,\n    apiVersion: string,\n    options?: msRest.RequestOptionsBase\n  ): Promise<Models.ResourcesCheckExistenceByIdResponse>;\n  /**\n   * @param resourceId The fully qualified ID of the resource, including the resource name and\n   * resource type. Use the format,\n   * /subscriptions/{guid}/resourceGroups/{resource-group-name}/{resource-provider-namespace}/{resource-type}/{resource-name}\n   * @param apiVersion The API version to use for the operation.\n   * @param callback The callback\n   */\n  checkExistenceById(\n    resourceId: string,\n    apiVersion: string,\n    callback: msRest.ServiceCallback<boolean>\n  ): void;\n  /**\n   * @param resourceId The fully qualified ID of the resource, including the resource name and\n   * resource type. Use the format,\n   * /subscriptions/{guid}/resourceGroups/{resource-group-name}/{resource-provider-namespace}/{resource-type}/{resource-name}\n   * @param apiVersion The API version to use for the operation.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  checkExistenceById(\n    resourceId: string,\n    apiVersion: string,\n    options: msRest.RequestOptionsBase,\n    callback: msRest.ServiceCallback<boolean>\n  ): void;\n  checkExistenceById(\n    resourceId: string,\n    apiVersion: string,\n    options?: msRest.RequestOptionsBase | msRest.ServiceCallback<boolean>,\n    callback?: msRest.ServiceCallback<boolean>\n  ): Promise<Models.ResourcesCheckExistenceByIdResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceId,\n        apiVersion,\n        options\n      },\n      checkExistenceByIdOperationSpec,\n      callback\n    ) as Promise<Models.ResourcesCheckExistenceByIdResponse>;\n  }\n\n  /**\n   * Deletes a resource by ID.\n   * @param resourceId The fully qualified ID of the resource, including the resource name and\n   * resource type. Use the format,\n   * /subscriptions/{guid}/resourceGroups/{resource-group-name}/{resource-provider-namespace}/{resource-type}/{resource-name}\n   * @param apiVersion The API version to use for the operation.\n   * @param [options] The optional parameters\n   * @returns Promise<msRest.RestResponse>\n   */\n  deleteById(\n    resourceId: string,\n    apiVersion: string,\n    options?: msRest.RequestOptionsBase\n  ): Promise<msRest.RestResponse> {\n    return this.beginDeleteById(resourceId, apiVersion, options).then((lroPoller) =>\n      lroPoller.pollUntilFinished()\n    );\n  }\n\n  /**\n   * Create a resource by ID.\n   * @param resourceId The fully qualified ID of the resource, including the resource name and\n   * resource type. Use the format,\n   * /subscriptions/{guid}/resourceGroups/{resource-group-name}/{resource-provider-namespace}/{resource-type}/{resource-name}\n   * @param apiVersion The API version to use for the operation.\n   * @param parameters Create or update resource parameters.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.ResourcesCreateOrUpdateByIdResponse>\n   */\n  createOrUpdateById(\n    resourceId: string,\n    apiVersion: string,\n    parameters: Models.GenericResource,\n    options?: msRest.RequestOptionsBase\n  ): Promise<Models.ResourcesCreateOrUpdateByIdResponse> {\n    return this.beginCreateOrUpdateById(\n      resourceId,\n      apiVersion,\n      parameters,\n      options\n    ).then((lroPoller) => lroPoller.pollUntilFinished()) as Promise<\n      Models.ResourcesCreateOrUpdateByIdResponse\n    >;\n  }\n\n  /**\n   * Updates a resource by ID.\n   * @param resourceId The fully qualified ID of the resource, including the resource name and\n   * resource type. Use the format,\n   * /subscriptions/{guid}/resourceGroups/{resource-group-name}/{resource-provider-namespace}/{resource-type}/{resource-name}\n   * @param apiVersion The API version to use for the operation.\n   * @param parameters Update resource parameters.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.ResourcesUpdateByIdResponse>\n   */\n  updateById(\n    resourceId: string,\n    apiVersion: string,\n    parameters: Models.GenericResource,\n    options?: msRest.RequestOptionsBase\n  ): Promise<Models.ResourcesUpdateByIdResponse> {\n    return this.beginUpdateById(resourceId, apiVersion, parameters, options).then((lroPoller) =>\n      lroPoller.pollUntilFinished()\n    ) as Promise<Models.ResourcesUpdateByIdResponse>;\n  }\n\n  /**\n   * Gets a resource by ID.\n   * @param resourceId The fully qualified ID of the resource, including the resource name and\n   * resource type. Use the format,\n   * /subscriptions/{guid}/resourceGroups/{resource-group-name}/{resource-provider-namespace}/{resource-type}/{resource-name}\n   * @param apiVersion The API version to use for the operation.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.ResourcesGetByIdResponse>\n   */\n  getById(\n    resourceId: string,\n    apiVersion: string,\n    options?: msRest.RequestOptionsBase\n  ): Promise<Models.ResourcesGetByIdResponse>;\n  /**\n   * @param resourceId The fully qualified ID of the resource, including the resource name and\n   * resource type. Use the format,\n   * /subscriptions/{guid}/resourceGroups/{resource-group-name}/{resource-provider-namespace}/{resource-type}/{resource-name}\n   * @param apiVersion The API version to use for the operation.\n   * @param callback The callback\n   */\n  getById(\n    resourceId: string,\n    apiVersion: string,\n    callback: msRest.ServiceCallback<Models.GenericResource>\n  ): void;\n  /**\n   * @param resourceId The fully qualified ID of the resource, including the resource name and\n   * resource type. Use the format,\n   * /subscriptions/{guid}/resourceGroups/{resource-group-name}/{resource-provider-namespace}/{resource-type}/{resource-name}\n   * @param apiVersion The API version to use for the operation.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  getById(\n    resourceId: string,\n    apiVersion: string,\n    options: msRest.RequestOptionsBase,\n    callback: msRest.ServiceCallback<Models.GenericResource>\n  ): void;\n  getById(\n    resourceId: string,\n    apiVersion: string,\n    options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.GenericResource>,\n    callback?: msRest.ServiceCallback<Models.GenericResource>\n  ): Promise<Models.ResourcesGetByIdResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceId,\n        apiVersion,\n        options\n      },\n      getByIdOperationSpec,\n      callback\n    ) as Promise<Models.ResourcesGetByIdResponse>;\n  }\n\n  /**\n   * The resources to move must be in the same source resource group. The target resource group may\n   * be in a different subscription. When moving resources, both the source group and the target\n   * group are locked for the duration of the operation. Write and delete operations are blocked on\n   * the groups until the move completes.\n   * @summary Moves resources from one resource group to another resource group.\n   * @param sourceResourceGroupName The name of the resource group containing the resources to move.\n   * @param parameters Parameters for moving resources.\n   * @param [options] The optional parameters\n   * @returns Promise<msRestAzure.LROPoller>\n   */\n  beginMoveResources(\n    sourceResourceGroupName: string,\n    parameters: Models.ResourcesMoveInfo,\n    options?: msRest.RequestOptionsBase\n  ): Promise<msRestAzure.LROPoller> {\n    return this.client.sendLRORequest(\n      {\n        sourceResourceGroupName,\n        parameters,\n        options\n      },\n      beginMoveResourcesOperationSpec,\n      options\n    );\n  }\n\n  /**\n   * This operation checks whether the specified resources can be moved to the target. The resources\n   * to move must be in the same source resource group. The target resource group may be in a\n   * different subscription. If validation succeeds, it returns HTTP response code 204 (no content).\n   * If validation fails, it returns HTTP response code 409 (Conflict) with an error message.\n   * Retrieve the URL in the Location header value to check the result of the long-running operation.\n   * @summary Validates whether resources can be moved from one resource group to another resource\n   * group.\n   * @param sourceResourceGroupName The name of the resource group containing the resources to\n   * validate for move.\n   * @param parameters Parameters for moving resources.\n   * @param [options] The optional parameters\n   * @returns Promise<msRestAzure.LROPoller>\n   */\n  beginValidateMoveResources(\n    sourceResourceGroupName: string,\n    parameters: Models.ResourcesMoveInfo,\n    options?: msRest.RequestOptionsBase\n  ): Promise<msRestAzure.LROPoller> {\n    return this.client.sendLRORequest(\n      {\n        sourceResourceGroupName,\n        parameters,\n        options\n      },\n      beginValidateMoveResourcesOperationSpec,\n      options\n    );\n  }\n\n  /**\n   * Deletes a resource.\n   * @param resourceGroupName The name of the resource group that contains the resource to delete.\n   * The name is case insensitive.\n   * @param resourceProviderNamespace The namespace of the resource provider.\n   * @param parentResourcePath The parent resource identity.\n   * @param resourceType The resource type.\n   * @param resourceName The name of the resource to delete.\n   * @param apiVersion The API version to use for the operation.\n   * @param [options] The optional parameters\n   * @returns Promise<msRestAzure.LROPoller>\n   */\n  beginDeleteMethod(\n    resourceGroupName: string,\n    resourceProviderNamespace: string,\n    parentResourcePath: string,\n    resourceType: string,\n    resourceName: string,\n    apiVersion: string,\n    options?: msRest.RequestOptionsBase\n  ): Promise<msRestAzure.LROPoller> {\n    return this.client.sendLRORequest(\n      {\n        resourceGroupName,\n        resourceProviderNamespace,\n        parentResourcePath,\n        resourceType,\n        resourceName,\n        apiVersion,\n        options\n      },\n      beginDeleteMethodOperationSpec,\n      options\n    );\n  }\n\n  /**\n   * Creates a resource.\n   * @param resourceGroupName The name of the resource group for the resource. The name is case\n   * insensitive.\n   * @param resourceProviderNamespace The namespace of the resource provider.\n   * @param parentResourcePath The parent resource identity.\n   * @param resourceType The resource type of the resource to create.\n   * @param resourceName The name of the resource to create.\n   * @param apiVersion The API version to use for the operation.\n   * @param parameters Parameters for creating or updating the resource.\n   * @param [options] The optional parameters\n   * @returns Promise<msRestAzure.LROPoller>\n   */\n  beginCreateOrUpdate(\n    resourceGroupName: string,\n    resourceProviderNamespace: string,\n    parentResourcePath: string,\n    resourceType: string,\n    resourceName: string,\n    apiVersion: string,\n    parameters: Models.GenericResource,\n    options?: msRest.RequestOptionsBase\n  ): Promise<msRestAzure.LROPoller> {\n    return this.client.sendLRORequest(\n      {\n        resourceGroupName,\n        resourceProviderNamespace,\n        parentResourcePath,\n        resourceType,\n        resourceName,\n        apiVersion,\n        parameters,\n        options\n      },\n      beginCreateOrUpdateOperationSpec,\n      options\n    );\n  }\n\n  /**\n   * Updates a resource.\n   * @param resourceGroupName The name of the resource group for the resource. The name is case\n   * insensitive.\n   * @param resourceProviderNamespace The namespace of the resource provider.\n   * @param parentResourcePath The parent resource identity.\n   * @param resourceType The resource type of the resource to update.\n   * @param resourceName The name of the resource to update.\n   * @param apiVersion The API version to use for the operation.\n   * @param parameters Parameters for updating the resource.\n   * @param [options] The optional parameters\n   * @returns Promise<msRestAzure.LROPoller>\n   */\n  beginUpdate(\n    resourceGroupName: string,\n    resourceProviderNamespace: string,\n    parentResourcePath: string,\n    resourceType: string,\n    resourceName: string,\n    apiVersion: string,\n    parameters: Models.GenericResource,\n    options?: msRest.RequestOptionsBase\n  ): Promise<msRestAzure.LROPoller> {\n    return this.client.sendLRORequest(\n      {\n        resourceGroupName,\n        resourceProviderNamespace,\n        parentResourcePath,\n        resourceType,\n        resourceName,\n        apiVersion,\n        parameters,\n        options\n      },\n      beginUpdateOperationSpec,\n      options\n    );\n  }\n\n  /**\n   * Deletes a resource by ID.\n   * @param resourceId The fully qualified ID of the resource, including the resource name and\n   * resource type. Use the format,\n   * /subscriptions/{guid}/resourceGroups/{resource-group-name}/{resource-provider-namespace}/{resource-type}/{resource-name}\n   * @param apiVersion The API version to use for the operation.\n   * @param [options] The optional parameters\n   * @returns Promise<msRestAzure.LROPoller>\n   */\n  beginDeleteById(\n    resourceId: string,\n    apiVersion: string,\n    options?: msRest.RequestOptionsBase\n  ): Promise<msRestAzure.LROPoller> {\n    return this.client.sendLRORequest(\n      {\n        resourceId,\n        apiVersion,\n        options\n      },\n      beginDeleteByIdOperationSpec,\n      options\n    );\n  }\n\n  /**\n   * Create a resource by ID.\n   * @param resourceId The fully qualified ID of the resource, including the resource name and\n   * resource type. Use the format,\n   * /subscriptions/{guid}/resourceGroups/{resource-group-name}/{resource-provider-namespace}/{resource-type}/{resource-name}\n   * @param apiVersion The API version to use for the operation.\n   * @param parameters Create or update resource parameters.\n   * @param [options] The optional parameters\n   * @returns Promise<msRestAzure.LROPoller>\n   */\n  beginCreateOrUpdateById(\n    resourceId: string,\n    apiVersion: string,\n    parameters: Models.GenericResource,\n    options?: msRest.RequestOptionsBase\n  ): Promise<msRestAzure.LROPoller> {\n    return this.client.sendLRORequest(\n      {\n        resourceId,\n        apiVersion,\n        parameters,\n        options\n      },\n      beginCreateOrUpdateByIdOperationSpec,\n      options\n    );\n  }\n\n  /**\n   * Updates a resource by ID.\n   * @param resourceId The fully qualified ID of the resource, including the resource name and\n   * resource type. Use the format,\n   * /subscriptions/{guid}/resourceGroups/{resource-group-name}/{resource-provider-namespace}/{resource-type}/{resource-name}\n   * @param apiVersion The API version to use for the operation.\n   * @param parameters Update resource parameters.\n   * @param [options] The optional parameters\n   * @returns Promise<msRestAzure.LROPoller>\n   */\n  beginUpdateById(\n    resourceId: string,\n    apiVersion: string,\n    parameters: Models.GenericResource,\n    options?: msRest.RequestOptionsBase\n  ): Promise<msRestAzure.LROPoller> {\n    return this.client.sendLRORequest(\n      {\n        resourceId,\n        apiVersion,\n        parameters,\n        options\n      },\n      beginUpdateByIdOperationSpec,\n      options\n    );\n  }\n\n  /**\n   * Get all the resources for a resource group.\n   * @param nextPageLink The NextLink from the previous successful call to List operation.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.ResourcesListByResourceGroupNextResponse>\n   */\n  listByResourceGroupNext(\n    nextPageLink: string,\n    options?: Models.ResourcesListByResourceGroupNextOptionalParams\n  ): Promise<Models.ResourcesListByResourceGroupNextResponse>;\n  /**\n   * @param nextPageLink The NextLink from the previous successful call to List operation.\n   * @param callback The callback\n   */\n  listByResourceGroupNext(\n    nextPageLink: string,\n    callback: msRest.ServiceCallback<Models.ResourceListResult>\n  ): void;\n  /**\n   * @param nextPageLink The NextLink from the previous successful call to List operation.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  listByResourceGroupNext(\n    nextPageLink: string,\n    options: Models.ResourcesListByResourceGroupNextOptionalParams,\n    callback: msRest.ServiceCallback<Models.ResourceListResult>\n  ): void;\n  listByResourceGroupNext(\n    nextPageLink: string,\n    options?:\n      | Models.ResourcesListByResourceGroupNextOptionalParams\n      | msRest.ServiceCallback<Models.ResourceListResult>,\n    callback?: msRest.ServiceCallback<Models.ResourceListResult>\n  ): Promise<Models.ResourcesListByResourceGroupNextResponse> {\n    return this.client.sendOperationRequest(\n      {\n        nextPageLink,\n        options\n      },\n      listByResourceGroupNextOperationSpec,\n      callback\n    ) as Promise<Models.ResourcesListByResourceGroupNextResponse>;\n  }\n\n  /**\n   * Get all the resources in a subscription.\n   * @param nextPageLink The NextLink from the previous successful call to List operation.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.ResourcesListNextResponse>\n   */\n  listNext(\n    nextPageLink: string,\n    options?: Models.ResourcesListNextOptionalParams\n  ): Promise<Models.ResourcesListNextResponse>;\n  /**\n   * @param nextPageLink The NextLink from the previous successful call to List operation.\n   * @param callback The callback\n   */\n  listNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.ResourceListResult>): void;\n  /**\n   * @param nextPageLink The NextLink from the previous successful call to List operation.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  listNext(\n    nextPageLink: string,\n    options: Models.ResourcesListNextOptionalParams,\n    callback: msRest.ServiceCallback<Models.ResourceListResult>\n  ): void;\n  listNext(\n    nextPageLink: string,\n    options?:\n      | Models.ResourcesListNextOptionalParams\n      | msRest.ServiceCallback<Models.ResourceListResult>,\n    callback?: msRest.ServiceCallback<Models.ResourceListResult>\n  ): Promise<Models.ResourcesListNextResponse> {\n    return this.client.sendOperationRequest(\n      {\n        nextPageLink,\n        options\n      },\n      listNextOperationSpec,\n      callback\n    ) as Promise<Models.ResourcesListNextResponse>;\n  }\n}\n\n// Operation Specifications\nconst serializer = new msRest.Serializer(Mappers);\nconst listByResourceGroupOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"GET\",\n  path: \"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/resources\",\n  urlParameters: [Parameters.resourceGroupName, Parameters.subscriptionId],\n  queryParameters: [Parameters.filter, Parameters.expand, Parameters.top, Parameters.apiVersion],\n  headerParameters: [Parameters.acceptLanguage],\n  responses: {\n    200: {\n      bodyMapper: Mappers.ResourceListResult\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  serializer\n};\n\nconst listOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"GET\",\n  path: \"subscriptions/{subscriptionId}/resources\",\n  urlParameters: [Parameters.subscriptionId],\n  queryParameters: [Parameters.filter, Parameters.expand, Parameters.top, Parameters.apiVersion],\n  headerParameters: [Parameters.acceptLanguage],\n  responses: {\n    200: {\n      bodyMapper: Mappers.ResourceListResult\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  serializer\n};\n\nconst checkExistenceOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"HEAD\",\n  path:\n    \"subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{parentResourcePath}/{resourceType}/{resourceName}\",\n  urlParameters: [\n    Parameters.resourceGroupName,\n    Parameters.resourceProviderNamespace,\n    Parameters.parentResourcePath,\n    Parameters.resourceType,\n    Parameters.resourceName,\n    Parameters.subscriptionId\n  ],\n  queryParameters: [Parameters.apiVersion],\n  headerParameters: [Parameters.acceptLanguage],\n  responses: {\n    204: {},\n    404: {},\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  serializer\n};\n\nconst getOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"GET\",\n  path:\n    \"subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{parentResourcePath}/{resourceType}/{resourceName}\",\n  urlParameters: [\n    Parameters.resourceGroupName,\n    Parameters.resourceProviderNamespace,\n    Parameters.parentResourcePath,\n    Parameters.resourceType,\n    Parameters.resourceName,\n    Parameters.subscriptionId\n  ],\n  queryParameters: [Parameters.apiVersion],\n  headerParameters: [Parameters.acceptLanguage],\n  responses: {\n    200: {\n      bodyMapper: Mappers.GenericResource\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  serializer\n};\n\nconst checkExistenceByIdOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"HEAD\",\n  path: \"{resourceId}\",\n  urlParameters: [Parameters.resourceId],\n  queryParameters: [Parameters.apiVersion],\n  headerParameters: [Parameters.acceptLanguage],\n  responses: {\n    204: {},\n    404: {},\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  serializer\n};\n\nconst getByIdOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"GET\",\n  path: \"{resourceId}\",\n  urlParameters: [Parameters.resourceId],\n  queryParameters: [Parameters.apiVersion],\n  headerParameters: [Parameters.acceptLanguage],\n  responses: {\n    200: {\n      bodyMapper: Mappers.GenericResource\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  serializer\n};\n\nconst beginMoveResourcesOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"POST\",\n  path: \"subscriptions/{subscriptionId}/resourceGroups/{sourceResourceGroupName}/moveResources\",\n  urlParameters: [Parameters.sourceResourceGroupName, Parameters.subscriptionId],\n  queryParameters: [Parameters.apiVersion],\n  headerParameters: [Parameters.acceptLanguage],\n  requestBody: {\n    parameterPath: \"parameters\",\n    mapper: {\n      ...Mappers.ResourcesMoveInfo,\n      required: true\n    }\n  },\n  responses: {\n    202: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  serializer\n};\n\nconst beginValidateMoveResourcesOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"POST\",\n  path:\n    \"subscriptions/{subscriptionId}/resourceGroups/{sourceResourceGroupName}/validateMoveResources\",\n  urlParameters: [Parameters.sourceResourceGroupName, Parameters.subscriptionId],\n  queryParameters: [Parameters.apiVersion],\n  headerParameters: [Parameters.acceptLanguage],\n  requestBody: {\n    parameterPath: \"parameters\",\n    mapper: {\n      ...Mappers.ResourcesMoveInfo,\n      required: true\n    }\n  },\n  responses: {\n    202: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  serializer\n};\n\nconst beginDeleteMethodOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"DELETE\",\n  path:\n    \"subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{parentResourcePath}/{resourceType}/{resourceName}\",\n  urlParameters: [\n    Parameters.resourceGroupName,\n    Parameters.resourceProviderNamespace,\n    Parameters.parentResourcePath,\n    Parameters.resourceType,\n    Parameters.resourceName,\n    Parameters.subscriptionId\n  ],\n  queryParameters: [Parameters.apiVersion],\n  headerParameters: [Parameters.acceptLanguage],\n  responses: {\n    200: {},\n    202: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  serializer\n};\n\nconst beginCreateOrUpdateOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"PUT\",\n  path:\n    \"subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{parentResourcePath}/{resourceType}/{resourceName}\",\n  urlParameters: [\n    Parameters.resourceGroupName,\n    Parameters.resourceProviderNamespace,\n    Parameters.parentResourcePath,\n    Parameters.resourceType,\n    Parameters.resourceName,\n    Parameters.subscriptionId\n  ],\n  queryParameters: [Parameters.apiVersion],\n  headerParameters: [Parameters.acceptLanguage],\n  requestBody: {\n    parameterPath: \"parameters\",\n    mapper: {\n      ...Mappers.GenericResource,\n      required: true\n    }\n  },\n  responses: {\n    200: {\n      bodyMapper: Mappers.GenericResource\n    },\n    201: {\n      bodyMapper: Mappers.GenericResource\n    },\n    202: {},\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  serializer\n};\n\nconst beginUpdateOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"PATCH\",\n  path:\n    \"subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{parentResourcePath}/{resourceType}/{resourceName}\",\n  urlParameters: [\n    Parameters.resourceGroupName,\n    Parameters.resourceProviderNamespace,\n    Parameters.parentResourcePath,\n    Parameters.resourceType,\n    Parameters.resourceName,\n    Parameters.subscriptionId\n  ],\n  queryParameters: [Parameters.apiVersion],\n  headerParameters: [Parameters.acceptLanguage],\n  requestBody: {\n    parameterPath: \"parameters\",\n    mapper: {\n      ...Mappers.GenericResource,\n      required: true\n    }\n  },\n  responses: {\n    200: {\n      bodyMapper: Mappers.GenericResource\n    },\n    202: {},\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  serializer\n};\n\nconst beginDeleteByIdOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"DELETE\",\n  path: \"{resourceId}\",\n  urlParameters: [Parameters.resourceId],\n  queryParameters: [Parameters.apiVersion],\n  headerParameters: [Parameters.acceptLanguage],\n  responses: {\n    200: {},\n    202: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  serializer\n};\n\nconst beginCreateOrUpdateByIdOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"PUT\",\n  path: \"{resourceId}\",\n  urlParameters: [Parameters.resourceId],\n  queryParameters: [Parameters.apiVersion],\n  headerParameters: [Parameters.acceptLanguage],\n  requestBody: {\n    parameterPath: \"parameters\",\n    mapper: {\n      ...Mappers.GenericResource,\n      required: true\n    }\n  },\n  responses: {\n    200: {\n      bodyMapper: Mappers.GenericResource\n    },\n    201: {\n      bodyMapper: Mappers.GenericResource\n    },\n    202: {},\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  serializer\n};\n\nconst beginUpdateByIdOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"PATCH\",\n  path: \"{resourceId}\",\n  urlParameters: [Parameters.resourceId],\n  queryParameters: [Parameters.apiVersion],\n  headerParameters: [Parameters.acceptLanguage],\n  requestBody: {\n    parameterPath: \"parameters\",\n    mapper: {\n      ...Mappers.GenericResource,\n      required: true\n    }\n  },\n  responses: {\n    200: {\n      bodyMapper: Mappers.GenericResource\n    },\n    202: {},\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  serializer\n};\n\nconst listByResourceGroupNextOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"GET\",\n  baseUrl: \"https://management.azure.com\",\n  path: \"{nextLink}\",\n  urlParameters: [Parameters.nextPageLink],\n  queryParameters: [Parameters.filter, Parameters.expand, Parameters.top, Parameters.apiVersion],\n  headerParameters: [Parameters.acceptLanguage],\n  responses: {\n    200: {\n      bodyMapper: Mappers.ResourceListResult\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  serializer\n};\n\nconst listNextOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"GET\",\n  baseUrl: \"https://management.azure.com\",\n  path: \"{nextLink}\",\n  urlParameters: [Parameters.nextPageLink],\n  queryParameters: [Parameters.filter, Parameters.expand, Parameters.top, Parameters.apiVersion],\n  headerParameters: [Parameters.acceptLanguage],\n  responses: {\n    200: {\n      bodyMapper: Mappers.ResourceListResult\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nexport {\n  Alias,\n  AliasPath,\n  AliasPathMetadata,\n  AliasPattern,\n  ApiProfile,\n  BaseResource,\n  BasicDependency,\n  CloudError,\n  DebugSetting,\n  Dependency,\n  DeploymentExtended,\n  DeploymentPropertiesExtended,\n  ErrorAdditionalInfo,\n  ErrorResponse,\n  ExportTemplateRequest,\n  ExtendedLocation,\n  GenericResource,\n  GenericResourceExpanded,\n  Identity,\n  IdentityUserAssignedIdentitiesValue,\n  OnErrorDeploymentExtended,\n  ParametersLink,\n  Plan,\n  Provider,\n  ProviderExtendedLocation,\n  ProviderResourceType,\n  Resource,\n  ResourceGroup,\n  ResourceGroupExportResult,\n  ResourceGroupListResult,\n  ResourceGroupPatchable,\n  ResourceGroupProperties,\n  ResourceReference,\n  Sku,\n  SubResource,\n  TagCount,\n  TagDetails,\n  Tags,\n  TagsResource,\n  TagValue,\n  TemplateLink\n} from \"../models/mappers\";\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is\n * regenerated.\n */\n\nimport * as msRest from \"@azure/ms-rest-js\";\nimport * as msRestAzure from \"@azure/ms-rest-azure-js\";\nimport * as Models from \"../models\";\nimport * as Mappers from \"../models/resourceGroupsMappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { ResourceManagementClientContext } from \"../resourceManagementClientContext\";\n\n/** Class representing a ResourceGroups. */\nexport class ResourceGroups {\n  private readonly client: ResourceManagementClientContext;\n\n  /**\n   * Create a ResourceGroups.\n   * @param {ResourceManagementClientContext} client Reference to the service client.\n   */\n  constructor(client: ResourceManagementClientContext) {\n    this.client = client;\n  }\n\n  /**\n   * Checks whether a resource group exists.\n   * @param resourceGroupName The name of the resource group to check. The name is case insensitive.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.ResourceGroupsCheckExistenceResponse>\n   */\n  checkExistence(\n    resourceGroupName: string,\n    options?: msRest.RequestOptionsBase\n  ): Promise<Models.ResourceGroupsCheckExistenceResponse>;\n  /**\n   * @param resourceGroupName The name of the resource group to check. The name is case insensitive.\n   * @param callback The callback\n   */\n  checkExistence(resourceGroupName: string, callback: msRest.ServiceCallback<boolean>): void;\n  /**\n   * @param resourceGroupName The name of the resource group to check. The name is case insensitive.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  checkExistence(\n    resourceGroupName: string,\n    options: msRest.RequestOptionsBase,\n    callback: msRest.ServiceCallback<boolean>\n  ): void;\n  checkExistence(\n    resourceGroupName: string,\n    options?: msRest.RequestOptionsBase | msRest.ServiceCallback<boolean>,\n    callback?: msRest.ServiceCallback<boolean>\n  ): Promise<Models.ResourceGroupsCheckExistenceResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        options\n      },\n      checkExistenceOperationSpec,\n      callback\n    ) as Promise<Models.ResourceGroupsCheckExistenceResponse>;\n  }\n\n  /**\n   * Creates or updates a resource group.\n   * @param resourceGroupName The name of the resource group to create or update. Can include\n   * alphanumeric, underscore, parentheses, hyphen, period (except at end), and Unicode characters\n   * that match the allowed characters.\n   * @param parameters Parameters supplied to the create or update a resource group.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.ResourceGroupsCreateOrUpdateResponse>\n   */\n  createOrUpdate(\n    resourceGroupName: string,\n    parameters: Models.ResourceGroup,\n    options?: msRest.RequestOptionsBase\n  ): Promise<Models.ResourceGroupsCreateOrUpdateResponse>;\n  /**\n   * @param resourceGroupName The name of the resource group to create or update. Can include\n   * alphanumeric, underscore, parentheses, hyphen, period (except at end), and Unicode characters\n   * that match the allowed characters.\n   * @param parameters Parameters supplied to the create or update a resource group.\n   * @param callback The callback\n   */\n  createOrUpdate(\n    resourceGroupName: string,\n    parameters: Models.ResourceGroup,\n    callback: msRest.ServiceCallback<Models.ResourceGroup>\n  ): void;\n  /**\n   * @param resourceGroupName The name of the resource group to create or update. Can include\n   * alphanumeric, underscore, parentheses, hyphen, period (except at end), and Unicode characters\n   * that match the allowed characters.\n   * @param parameters Parameters supplied to the create or update a resource group.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  createOrUpdate(\n    resourceGroupName: string,\n    parameters: Models.ResourceGroup,\n    options: msRest.RequestOptionsBase,\n    callback: msRest.ServiceCallback<Models.ResourceGroup>\n  ): void;\n  createOrUpdate(\n    resourceGroupName: string,\n    parameters: Models.ResourceGroup,\n    options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.ResourceGroup>,\n    callback?: msRest.ServiceCallback<Models.ResourceGroup>\n  ): Promise<Models.ResourceGroupsCreateOrUpdateResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        parameters,\n        options\n      },\n      createOrUpdateOperationSpec,\n      callback\n    ) as Promise<Models.ResourceGroupsCreateOrUpdateResponse>;\n  }\n\n  /**\n   * When you delete a resource group, all of its resources are also deleted. Deleting a resource\n   * group deletes all of its template deployments and currently stored operations.\n   * @summary Deletes a resource group.\n   * @param resourceGroupName The name of the resource group to delete. The name is case insensitive.\n   * @param [options] The optional parameters\n   * @returns Promise<msRest.RestResponse>\n   */\n  deleteMethod(\n    resourceGroupName: string,\n    options?: msRest.RequestOptionsBase\n  ): Promise<msRest.RestResponse> {\n    return this.beginDeleteMethod(resourceGroupName, options).then((lroPoller) =>\n      lroPoller.pollUntilFinished()\n    );\n  }\n\n  /**\n   * Gets a resource group.\n   * @param resourceGroupName The name of the resource group to get. The name is case insensitive.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.ResourceGroupsGetResponse>\n   */\n  get(\n    resourceGroupName: string,\n    options?: msRest.RequestOptionsBase\n  ): Promise<Models.ResourceGroupsGetResponse>;\n  /**\n   * @param resourceGroupName The name of the resource group to get. The name is case insensitive.\n   * @param callback The callback\n   */\n  get(resourceGroupName: string, callback: msRest.ServiceCallback<Models.ResourceGroup>): void;\n  /**\n   * @param resourceGroupName The name of the resource group to get. The name is case insensitive.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  get(\n    resourceGroupName: string,\n    options: msRest.RequestOptionsBase,\n    callback: msRest.ServiceCallback<Models.ResourceGroup>\n  ): void;\n  get(\n    resourceGroupName: string,\n    options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.ResourceGroup>,\n    callback?: msRest.ServiceCallback<Models.ResourceGroup>\n  ): Promise<Models.ResourceGroupsGetResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        options\n      },\n      getOperationSpec,\n      callback\n    ) as Promise<Models.ResourceGroupsGetResponse>;\n  }\n\n  /**\n   * Resource groups can be updated through a simple PATCH operation to a group address. The format\n   * of the request is the same as that for creating a resource group. If a field is unspecified, the\n   * current value is retained.\n   * @summary Updates a resource group.\n   * @param resourceGroupName The name of the resource group to update. The name is case insensitive.\n   * @param parameters Parameters supplied to update a resource group.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.ResourceGroupsUpdateResponse>\n   */\n  update(\n    resourceGroupName: string,\n    parameters: Models.ResourceGroupPatchable,\n    options?: msRest.RequestOptionsBase\n  ): Promise<Models.ResourceGroupsUpdateResponse>;\n  /**\n   * @param resourceGroupName The name of the resource group to update. The name is case insensitive.\n   * @param parameters Parameters supplied to update a resource group.\n   * @param callback The callback\n   */\n  update(\n    resourceGroupName: string,\n    parameters: Models.ResourceGroupPatchable,\n    callback: msRest.ServiceCallback<Models.ResourceGroup>\n  ): void;\n  /**\n   * @param resourceGroupName The name of the resource group to update. The name is case insensitive.\n   * @param parameters Parameters supplied to update a resource group.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  update(\n    resourceGroupName: string,\n    parameters: Models.ResourceGroupPatchable,\n    options: msRest.RequestOptionsBase,\n    callback: msRest.ServiceCallback<Models.ResourceGroup>\n  ): void;\n  update(\n    resourceGroupName: string,\n    parameters: Models.ResourceGroupPatchable,\n    options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.ResourceGroup>,\n    callback?: msRest.ServiceCallback<Models.ResourceGroup>\n  ): Promise<Models.ResourceGroupsUpdateResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        parameters,\n        options\n      },\n      updateOperationSpec,\n      callback\n    ) as Promise<Models.ResourceGroupsUpdateResponse>;\n  }\n\n  /**\n   * Captures the specified resource group as a template.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param parameters Parameters for exporting the template.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.ResourceGroupsExportTemplateResponse>\n   */\n  exportTemplate(\n    resourceGroupName: string,\n    parameters: Models.ExportTemplateRequest,\n    options?: msRest.RequestOptionsBase\n  ): Promise<Models.ResourceGroupsExportTemplateResponse> {\n    return this.beginExportTemplate(resourceGroupName, parameters, options).then((lroPoller) =>\n      lroPoller.pollUntilFinished()\n    ) as Promise<Models.ResourceGroupsExportTemplateResponse>;\n  }\n\n  /**\n   * Gets all the resource groups for a subscription.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.ResourceGroupsListResponse>\n   */\n  list(\n    options?: Models.ResourceGroupsListOptionalParams\n  ): Promise<Models.ResourceGroupsListResponse>;\n  /**\n   * @param callback The callback\n   */\n  list(callback: msRest.ServiceCallback<Models.ResourceGroupListResult>): void;\n  /**\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  list(\n    options: Models.ResourceGroupsListOptionalParams,\n    callback: msRest.ServiceCallback<Models.ResourceGroupListResult>\n  ): void;\n  list(\n    options?:\n      | Models.ResourceGroupsListOptionalParams\n      | msRest.ServiceCallback<Models.ResourceGroupListResult>,\n    callback?: msRest.ServiceCallback<Models.ResourceGroupListResult>\n  ): Promise<Models.ResourceGroupsListResponse> {\n    return this.client.sendOperationRequest(\n      {\n        options\n      },\n      listOperationSpec,\n      callback\n    ) as Promise<Models.ResourceGroupsListResponse>;\n  }\n\n  /**\n   * When you delete a resource group, all of its resources are also deleted. Deleting a resource\n   * group deletes all of its template deployments and currently stored operations.\n   * @summary Deletes a resource group.\n   * @param resourceGroupName The name of the resource group to delete. The name is case insensitive.\n   * @param [options] The optional parameters\n   * @returns Promise<msRestAzure.LROPoller>\n   */\n  beginDeleteMethod(\n    resourceGroupName: string,\n    options?: msRest.RequestOptionsBase\n  ): Promise<msRestAzure.LROPoller> {\n    return this.client.sendLRORequest(\n      {\n        resourceGroupName,\n        options\n      },\n      beginDeleteMethodOperationSpec,\n      options\n    );\n  }\n\n  /**\n   * Captures the specified resource group as a template.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param parameters Parameters for exporting the template.\n   * @param [options] The optional parameters\n   * @returns Promise<msRestAzure.LROPoller>\n   */\n  beginExportTemplate(\n    resourceGroupName: string,\n    parameters: Models.ExportTemplateRequest,\n    options?: msRest.RequestOptionsBase\n  ): Promise<msRestAzure.LROPoller> {\n    return this.client.sendLRORequest(\n      {\n        resourceGroupName,\n        parameters,\n        options\n      },\n      beginExportTemplateOperationSpec,\n      options\n    );\n  }\n\n  /**\n   * Gets all the resource groups for a subscription.\n   * @param nextPageLink The NextLink from the previous successful call to List operation.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.ResourceGroupsListNextResponse>\n   */\n  listNext(\n    nextPageLink: string,\n    options?: Models.ResourceGroupsListNextOptionalParams\n  ): Promise<Models.ResourceGroupsListNextResponse>;\n  /**\n   * @param nextPageLink The NextLink from the previous successful call to List operation.\n   * @param callback The callback\n   */\n  listNext(\n    nextPageLink: string,\n    callback: msRest.ServiceCallback<Models.ResourceGroupListResult>\n  ): void;\n  /**\n   * @param nextPageLink The NextLink from the previous successful call to List operation.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  listNext(\n    nextPageLink: string,\n    options: Models.ResourceGroupsListNextOptionalParams,\n    callback: msRest.ServiceCallback<Models.ResourceGroupListResult>\n  ): void;\n  listNext(\n    nextPageLink: string,\n    options?:\n      | Models.ResourceGroupsListNextOptionalParams\n      | msRest.ServiceCallback<Models.ResourceGroupListResult>,\n    callback?: msRest.ServiceCallback<Models.ResourceGroupListResult>\n  ): Promise<Models.ResourceGroupsListNextResponse> {\n    return this.client.sendOperationRequest(\n      {\n        nextPageLink,\n        options\n      },\n      listNextOperationSpec,\n      callback\n    ) as Promise<Models.ResourceGroupsListNextResponse>;\n  }\n}\n\n// Operation Specifications\nconst serializer = new msRest.Serializer(Mappers);\nconst checkExistenceOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"HEAD\",\n  path: \"subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}\",\n  urlParameters: [Parameters.resourceGroupName, Parameters.subscriptionId],\n  queryParameters: [Parameters.apiVersion],\n  headerParameters: [Parameters.acceptLanguage],\n  responses: {\n    204: {},\n    404: {},\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  serializer\n};\n\nconst createOrUpdateOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"PUT\",\n  path: \"subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}\",\n  urlParameters: [Parameters.resourceGroupName, Parameters.subscriptionId],\n  queryParameters: [Parameters.apiVersion],\n  headerParameters: [Parameters.acceptLanguage],\n  requestBody: {\n    parameterPath: \"parameters\",\n    mapper: {\n      ...Mappers.ResourceGroup,\n      required: true\n    }\n  },\n  responses: {\n    200: {\n      bodyMapper: Mappers.ResourceGroup\n    },\n    201: {\n      bodyMapper: Mappers.ResourceGroup\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  serializer\n};\n\nconst getOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"GET\",\n  path: \"subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}\",\n  urlParameters: [Parameters.resourceGroupName, Parameters.subscriptionId],\n  queryParameters: [Parameters.apiVersion],\n  headerParameters: [Parameters.acceptLanguage],\n  responses: {\n    200: {\n      bodyMapper: Mappers.ResourceGroup\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  serializer\n};\n\nconst updateOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"PATCH\",\n  path: \"subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}\",\n  urlParameters: [Parameters.resourceGroupName, Parameters.subscriptionId],\n  queryParameters: [Parameters.apiVersion],\n  headerParameters: [Parameters.acceptLanguage],\n  requestBody: {\n    parameterPath: \"parameters\",\n    mapper: {\n      ...Mappers.ResourceGroupPatchable,\n      required: true\n    }\n  },\n  responses: {\n    200: {\n      bodyMapper: Mappers.ResourceGroup\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  serializer\n};\n\nconst listOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"GET\",\n  path: \"subscriptions/{subscriptionId}/resourcegroups\",\n  urlParameters: [Parameters.subscriptionId],\n  queryParameters: [Parameters.filter, Parameters.top, Parameters.apiVersion],\n  headerParameters: [Parameters.acceptLanguage],\n  responses: {\n    200: {\n      bodyMapper: Mappers.ResourceGroupListResult\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  serializer\n};\n\nconst beginDeleteMethodOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"DELETE\",\n  path: \"subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}\",\n  urlParameters: [Parameters.resourceGroupName, Parameters.subscriptionId],\n  queryParameters: [Parameters.apiVersion],\n  headerParameters: [Parameters.acceptLanguage],\n  responses: {\n    200: {},\n    202: {},\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  serializer\n};\n\nconst beginExportTemplateOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"POST\",\n  path: \"subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/exportTemplate\",\n  urlParameters: [Parameters.subscriptionId, Parameters.resourceGroupName],\n  queryParameters: [Parameters.apiVersion],\n  headerParameters: [Parameters.acceptLanguage],\n  requestBody: {\n    parameterPath: \"parameters\",\n    mapper: {\n      ...Mappers.ExportTemplateRequest,\n      required: true\n    }\n  },\n  responses: {\n    200: {\n      bodyMapper: Mappers.ResourceGroupExportResult\n    },\n    202: {},\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  serializer\n};\n\nconst listNextOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"GET\",\n  baseUrl: \"https://management.azure.com\",\n  path: \"{nextLink}\",\n  urlParameters: [Parameters.nextPageLink],\n  queryParameters: [Parameters.filter, Parameters.top, Parameters.apiVersion],\n  headerParameters: [Parameters.acceptLanguage],\n  responses: {\n    200: {\n      bodyMapper: Mappers.ResourceGroupListResult\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nexport {\n  Alias,\n  AliasPath,\n  AliasPathMetadata,\n  AliasPattern,\n  ApiProfile,\n  BaseResource,\n  BasicDependency,\n  CloudError,\n  DebugSetting,\n  Dependency,\n  DeploymentExtended,\n  DeploymentPropertiesExtended,\n  ErrorAdditionalInfo,\n  ErrorResponse,\n  ExtendedLocation,\n  GenericResource,\n  GenericResourceExpanded,\n  Identity,\n  IdentityUserAssignedIdentitiesValue,\n  OnErrorDeploymentExtended,\n  ParametersLink,\n  Plan,\n  Provider,\n  ProviderExtendedLocation,\n  ProviderResourceType,\n  Resource,\n  ResourceGroup,\n  ResourceGroupProperties,\n  ResourceReference,\n  Sku,\n  SubResource,\n  TagCount,\n  TagDetails,\n  Tags,\n  TagsListResult,\n  TagsPatchResource,\n  TagsResource,\n  TagValue,\n  TemplateLink\n} from \"../models/mappers\";\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is\n * regenerated.\n */\n\nimport * as msRest from \"@azure/ms-rest-js\";\nimport * as Models from \"../models\";\nimport * as Mappers from \"../models/tagsOperationsMappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { ResourceManagementClientContext } from \"../resourceManagementClientContext\";\n\n/** Class representing a TagsOperations. */\nexport class TagsOperations {\n  private readonly client: ResourceManagementClientContext;\n\n  /**\n   * Create a TagsOperations.\n   * @param {ResourceManagementClientContext} client Reference to the service client.\n   */\n  constructor(client: ResourceManagementClientContext) {\n    this.client = client;\n  }\n\n  /**\n   * This operation allows deleting a value from the list of predefined values for an existing\n   * predefined tag name. The value being deleted must not be in use as a tag value for the given tag\n   * name for any resource.\n   * @summary Deletes a predefined tag value for a predefined tag name.\n   * @param tagName The name of the tag.\n   * @param tagValue The value of the tag to delete.\n   * @param [options] The optional parameters\n   * @returns Promise<msRest.RestResponse>\n   */\n  deleteValue(\n    tagName: string,\n    tagValue: string,\n    options?: msRest.RequestOptionsBase\n  ): Promise<msRest.RestResponse>;\n  /**\n   * @param tagName The name of the tag.\n   * @param tagValue The value of the tag to delete.\n   * @param callback The callback\n   */\n  deleteValue(tagName: string, tagValue: string, callback: msRest.ServiceCallback<void>): void;\n  /**\n   * @param tagName The name of the tag.\n   * @param tagValue The value of the tag to delete.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  deleteValue(\n    tagName: string,\n    tagValue: string,\n    options: msRest.RequestOptionsBase,\n    callback: msRest.ServiceCallback<void>\n  ): void;\n  deleteValue(\n    tagName: string,\n    tagValue: string,\n    options?: msRest.RequestOptionsBase | msRest.ServiceCallback<void>,\n    callback?: msRest.ServiceCallback<void>\n  ): Promise<msRest.RestResponse> {\n    return this.client.sendOperationRequest(\n      {\n        tagName,\n        tagValue,\n        options\n      },\n      deleteValueOperationSpec,\n      callback\n    );\n  }\n\n  /**\n   * This operation allows adding a value to the list of predefined values for an existing predefined\n   * tag name. A tag value can have a maximum of 256 characters.\n   * @summary Creates a predefined value for a predefined tag name.\n   * @param tagName The name of the tag.\n   * @param tagValue The value of the tag to create.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.TagsCreateOrUpdateValueResponse>\n   */\n  createOrUpdateValue(\n    tagName: string,\n    tagValue: string,\n    options?: msRest.RequestOptionsBase\n  ): Promise<Models.TagsCreateOrUpdateValueResponse>;\n  /**\n   * @param tagName The name of the tag.\n   * @param tagValue The value of the tag to create.\n   * @param callback The callback\n   */\n  createOrUpdateValue(\n    tagName: string,\n    tagValue: string,\n    callback: msRest.ServiceCallback<Models.TagValue>\n  ): void;\n  /**\n   * @param tagName The name of the tag.\n   * @param tagValue The value of the tag to create.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  createOrUpdateValue(\n    tagName: string,\n    tagValue: string,\n    options: msRest.RequestOptionsBase,\n    callback: msRest.ServiceCallback<Models.TagValue>\n  ): void;\n  createOrUpdateValue(\n    tagName: string,\n    tagValue: string,\n    options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.TagValue>,\n    callback?: msRest.ServiceCallback<Models.TagValue>\n  ): Promise<Models.TagsCreateOrUpdateValueResponse> {\n    return this.client.sendOperationRequest(\n      {\n        tagName,\n        tagValue,\n        options\n      },\n      createOrUpdateValueOperationSpec,\n      callback\n    ) as Promise<Models.TagsCreateOrUpdateValueResponse>;\n  }\n\n  /**\n   * This operation allows adding a name to the list of predefined tag names for the given\n   * subscription. A tag name can have a maximum of 512 characters and is case-insensitive. Tag names\n   * cannot have the following prefixes which are reserved for Azure use: 'microsoft', 'azure',\n   * 'windows'.\n   * @summary Creates a predefined tag name.\n   * @param tagName The name of the tag to create.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.TagsCreateOrUpdateResponse>\n   */\n  createOrUpdate(\n    tagName: string,\n    options?: msRest.RequestOptionsBase\n  ): Promise<Models.TagsCreateOrUpdateResponse>;\n  /**\n   * @param tagName The name of the tag to create.\n   * @param callback The callback\n   */\n  createOrUpdate(tagName: string, callback: msRest.ServiceCallback<Models.TagDetails>): void;\n  /**\n   * @param tagName The name of the tag to create.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  createOrUpdate(\n    tagName: string,\n    options: msRest.RequestOptionsBase,\n    callback: msRest.ServiceCallback<Models.TagDetails>\n  ): void;\n  createOrUpdate(\n    tagName: string,\n    options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.TagDetails>,\n    callback?: msRest.ServiceCallback<Models.TagDetails>\n  ): Promise<Models.TagsCreateOrUpdateResponse> {\n    return this.client.sendOperationRequest(\n      {\n        tagName,\n        options\n      },\n      createOrUpdateOperationSpec,\n      callback\n    ) as Promise<Models.TagsCreateOrUpdateResponse>;\n  }\n\n  /**\n   * This operation allows deleting a name from the list of predefined tag names for the given\n   * subscription. The name being deleted must not be in use as a tag name for any resource. All\n   * predefined values for the given name must have already been deleted.\n   * @summary Deletes a predefined tag name.\n   * @param tagName The name of the tag.\n   * @param [options] The optional parameters\n   * @returns Promise<msRest.RestResponse>\n   */\n  deleteMethod(tagName: string, options?: msRest.RequestOptionsBase): Promise<msRest.RestResponse>;\n  /**\n   * @param tagName The name of the tag.\n   * @param callback The callback\n   */\n  deleteMethod(tagName: string, callback: msRest.ServiceCallback<void>): void;\n  /**\n   * @param tagName The name of the tag.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  deleteMethod(\n    tagName: string,\n    options: msRest.RequestOptionsBase,\n    callback: msRest.ServiceCallback<void>\n  ): void;\n  deleteMethod(\n    tagName: string,\n    options?: msRest.RequestOptionsBase | msRest.ServiceCallback<void>,\n    callback?: msRest.ServiceCallback<void>\n  ): Promise<msRest.RestResponse> {\n    return this.client.sendOperationRequest(\n      {\n        tagName,\n        options\n      },\n      deleteMethodOperationSpec,\n      callback\n    );\n  }\n\n  /**\n   * This operation performs a union of predefined tags, resource tags, resource group tags and\n   * subscription tags, and returns a summary of usage for each tag name and value under the given\n   * subscription. In case of a large number of tags, this operation may return a previously cached\n   * result.\n   * @summary Gets a summary of tag usage under the subscription.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.TagsListResponse>\n   */\n  list(options?: msRest.RequestOptionsBase): Promise<Models.TagsListResponse>;\n  /**\n   * @param callback The callback\n   */\n  list(callback: msRest.ServiceCallback<Models.TagsListResult>): void;\n  /**\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  list(\n    options: msRest.RequestOptionsBase,\n    callback: msRest.ServiceCallback<Models.TagsListResult>\n  ): void;\n  list(\n    options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.TagsListResult>,\n    callback?: msRest.ServiceCallback<Models.TagsListResult>\n  ): Promise<Models.TagsListResponse> {\n    return this.client.sendOperationRequest(\n      {\n        options\n      },\n      listOperationSpec,\n      callback\n    ) as Promise<Models.TagsListResponse>;\n  }\n\n  /**\n   * This operation allows adding or replacing the entire set of tags on the specified resource or\n   * subscription. The specified entity can have a maximum of 50 tags.\n   * @summary Creates or updates the entire set of tags on a resource or subscription.\n   * @param scope The resource scope.\n   * @param parameters\n   * @param [options] The optional parameters\n   * @returns Promise<Models.TagsCreateOrUpdateAtScopeResponse>\n   */\n  createOrUpdateAtScope(\n    scope: string,\n    parameters: Models.TagsResource,\n    options?: msRest.RequestOptionsBase\n  ): Promise<Models.TagsCreateOrUpdateAtScopeResponse>;\n  /**\n   * @param scope The resource scope.\n   * @param parameters\n   * @param callback The callback\n   */\n  createOrUpdateAtScope(\n    scope: string,\n    parameters: Models.TagsResource,\n    callback: msRest.ServiceCallback<Models.TagsResource>\n  ): void;\n  /**\n   * @param scope The resource scope.\n   * @param parameters\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  createOrUpdateAtScope(\n    scope: string,\n    parameters: Models.TagsResource,\n    options: msRest.RequestOptionsBase,\n    callback: msRest.ServiceCallback<Models.TagsResource>\n  ): void;\n  createOrUpdateAtScope(\n    scope: string,\n    parameters: Models.TagsResource,\n    options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.TagsResource>,\n    callback?: msRest.ServiceCallback<Models.TagsResource>\n  ): Promise<Models.TagsCreateOrUpdateAtScopeResponse> {\n    return this.client.sendOperationRequest(\n      {\n        scope,\n        parameters,\n        options\n      },\n      createOrUpdateAtScopeOperationSpec,\n      callback\n    ) as Promise<Models.TagsCreateOrUpdateAtScopeResponse>;\n  }\n\n  /**\n   * This operation allows replacing, merging or selectively deleting tags on the specified resource\n   * or subscription. The specified entity can have a maximum of 50 tags at the end of the operation.\n   * The 'replace' option replaces the entire set of existing tags with a new set. The 'merge' option\n   * allows adding tags with new names and updating the values of tags with existing names. The\n   * 'delete' option allows selectively deleting tags based on given names or name/value pairs.\n   * @summary Selectively updates the set of tags on a resource or subscription.\n   * @param scope The resource scope.\n   * @param parameters\n   * @param [options] The optional parameters\n   * @returns Promise<Models.TagsUpdateAtScopeResponse>\n   */\n  updateAtScope(\n    scope: string,\n    parameters: Models.TagsPatchResource,\n    options?: msRest.RequestOptionsBase\n  ): Promise<Models.TagsUpdateAtScopeResponse>;\n  /**\n   * @param scope The resource scope.\n   * @param parameters\n   * @param callback The callback\n   */\n  updateAtScope(\n    scope: string,\n    parameters: Models.TagsPatchResource,\n    callback: msRest.ServiceCallback<Models.TagsResource>\n  ): void;\n  /**\n   * @param scope The resource scope.\n   * @param parameters\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  updateAtScope(\n    scope: string,\n    parameters: Models.TagsPatchResource,\n    options: msRest.RequestOptionsBase,\n    callback: msRest.ServiceCallback<Models.TagsResource>\n  ): void;\n  updateAtScope(\n    scope: string,\n    parameters: Models.TagsPatchResource,\n    options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.TagsResource>,\n    callback?: msRest.ServiceCallback<Models.TagsResource>\n  ): Promise<Models.TagsUpdateAtScopeResponse> {\n    return this.client.sendOperationRequest(\n      {\n        scope,\n        parameters,\n        options\n      },\n      updateAtScopeOperationSpec,\n      callback\n    ) as Promise<Models.TagsUpdateAtScopeResponse>;\n  }\n\n  /**\n   * @summary Gets the entire set of tags on a resource or subscription.\n   * @param scope The resource scope.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.TagsGetAtScopeResponse>\n   */\n  getAtScope(\n    scope: string,\n    options?: msRest.RequestOptionsBase\n  ): Promise<Models.TagsGetAtScopeResponse>;\n  /**\n   * @param scope The resource scope.\n   * @param callback The callback\n   */\n  getAtScope(scope: string, callback: msRest.ServiceCallback<Models.TagsResource>): void;\n  /**\n   * @param scope The resource scope.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  getAtScope(\n    scope: string,\n    options: msRest.RequestOptionsBase,\n    callback: msRest.ServiceCallback<Models.TagsResource>\n  ): void;\n  getAtScope(\n    scope: string,\n    options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.TagsResource>,\n    callback?: msRest.ServiceCallback<Models.TagsResource>\n  ): Promise<Models.TagsGetAtScopeResponse> {\n    return this.client.sendOperationRequest(\n      {\n        scope,\n        options\n      },\n      getAtScopeOperationSpec,\n      callback\n    ) as Promise<Models.TagsGetAtScopeResponse>;\n  }\n\n  /**\n   * @summary Deletes the entire set of tags on a resource or subscription.\n   * @param scope The resource scope.\n   * @param [options] The optional parameters\n   * @returns Promise<msRest.RestResponse>\n   */\n  deleteAtScope(scope: string, options?: msRest.RequestOptionsBase): Promise<msRest.RestResponse>;\n  /**\n   * @param scope The resource scope.\n   * @param callback The callback\n   */\n  deleteAtScope(scope: string, callback: msRest.ServiceCallback<void>): void;\n  /**\n   * @param scope The resource scope.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  deleteAtScope(\n    scope: string,\n    options: msRest.RequestOptionsBase,\n    callback: msRest.ServiceCallback<void>\n  ): void;\n  deleteAtScope(\n    scope: string,\n    options?: msRest.RequestOptionsBase | msRest.ServiceCallback<void>,\n    callback?: msRest.ServiceCallback<void>\n  ): Promise<msRest.RestResponse> {\n    return this.client.sendOperationRequest(\n      {\n        scope,\n        options\n      },\n      deleteAtScopeOperationSpec,\n      callback\n    );\n  }\n\n  /**\n   * This operation performs a union of predefined tags, resource tags, resource group tags and\n   * subscription tags, and returns a summary of usage for each tag name and value under the given\n   * subscription. In case of a large number of tags, this operation may return a previously cached\n   * result.\n   * @summary Gets a summary of tag usage under the subscription.\n   * @param nextPageLink The NextLink from the previous successful call to List operation.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.TagsListNextResponse>\n   */\n  listNext(\n    nextPageLink: string,\n    options?: msRest.RequestOptionsBase\n  ): Promise<Models.TagsListNextResponse>;\n  /**\n   * @param nextPageLink The NextLink from the previous successful call to List operation.\n   * @param callback The callback\n   */\n  listNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.TagsListResult>): void;\n  /**\n   * @param nextPageLink The NextLink from the previous successful call to List operation.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  listNext(\n    nextPageLink: string,\n    options: msRest.RequestOptionsBase,\n    callback: msRest.ServiceCallback<Models.TagsListResult>\n  ): void;\n  listNext(\n    nextPageLink: string,\n    options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.TagsListResult>,\n    callback?: msRest.ServiceCallback<Models.TagsListResult>\n  ): Promise<Models.TagsListNextResponse> {\n    return this.client.sendOperationRequest(\n      {\n        nextPageLink,\n        options\n      },\n      listNextOperationSpec,\n      callback\n    ) as Promise<Models.TagsListNextResponse>;\n  }\n}\n\n// Operation Specifications\nconst serializer = new msRest.Serializer(Mappers);\nconst deleteValueOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"DELETE\",\n  path: \"subscriptions/{subscriptionId}/tagNames/{tagName}/tagValues/{tagValue}\",\n  urlParameters: [Parameters.tagName, Parameters.tagValue, Parameters.subscriptionId],\n  queryParameters: [Parameters.apiVersion],\n  headerParameters: [Parameters.acceptLanguage],\n  responses: {\n    200: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  serializer\n};\n\nconst createOrUpdateValueOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"PUT\",\n  path: \"subscriptions/{subscriptionId}/tagNames/{tagName}/tagValues/{tagValue}\",\n  urlParameters: [Parameters.tagName, Parameters.tagValue, Parameters.subscriptionId],\n  queryParameters: [Parameters.apiVersion],\n  headerParameters: [Parameters.acceptLanguage],\n  responses: {\n    200: {\n      bodyMapper: Mappers.TagValue\n    },\n    201: {\n      bodyMapper: Mappers.TagValue\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  serializer\n};\n\nconst createOrUpdateOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"PUT\",\n  path: \"subscriptions/{subscriptionId}/tagNames/{tagName}\",\n  urlParameters: [Parameters.tagName, Parameters.subscriptionId],\n  queryParameters: [Parameters.apiVersion],\n  headerParameters: [Parameters.acceptLanguage],\n  responses: {\n    200: {\n      bodyMapper: Mappers.TagDetails\n    },\n    201: {\n      bodyMapper: Mappers.TagDetails\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  serializer\n};\n\nconst deleteMethodOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"DELETE\",\n  path: \"subscriptions/{subscriptionId}/tagNames/{tagName}\",\n  urlParameters: [Parameters.tagName, Parameters.subscriptionId],\n  queryParameters: [Parameters.apiVersion],\n  headerParameters: [Parameters.acceptLanguage],\n  responses: {\n    200: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  serializer\n};\n\nconst listOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"GET\",\n  path: \"subscriptions/{subscriptionId}/tagNames\",\n  urlParameters: [Parameters.subscriptionId],\n  queryParameters: [Parameters.apiVersion],\n  headerParameters: [Parameters.acceptLanguage],\n  responses: {\n    200: {\n      bodyMapper: Mappers.TagsListResult\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  serializer\n};\n\nconst createOrUpdateAtScopeOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"PUT\",\n  path: \"{scope}/providers/Microsoft.Resources/tags/default\",\n  urlParameters: [Parameters.scope],\n  queryParameters: [Parameters.apiVersion],\n  headerParameters: [Parameters.acceptLanguage],\n  requestBody: {\n    parameterPath: \"parameters\",\n    mapper: {\n      ...Mappers.TagsResource,\n      required: true\n    }\n  },\n  responses: {\n    200: {\n      bodyMapper: Mappers.TagsResource\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  serializer\n};\n\nconst updateAtScopeOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"PATCH\",\n  path: \"{scope}/providers/Microsoft.Resources/tags/default\",\n  urlParameters: [Parameters.scope],\n  queryParameters: [Parameters.apiVersion],\n  headerParameters: [Parameters.acceptLanguage],\n  requestBody: {\n    parameterPath: \"parameters\",\n    mapper: {\n      ...Mappers.TagsPatchResource,\n      required: true\n    }\n  },\n  responses: {\n    200: {\n      bodyMapper: Mappers.TagsResource\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  serializer\n};\n\nconst getAtScopeOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"GET\",\n  path: \"{scope}/providers/Microsoft.Resources/tags/default\",\n  urlParameters: [Parameters.scope],\n  queryParameters: [Parameters.apiVersion],\n  headerParameters: [Parameters.acceptLanguage],\n  responses: {\n    200: {\n      bodyMapper: Mappers.TagsResource\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  serializer\n};\n\nconst deleteAtScopeOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"DELETE\",\n  path: \"{scope}/providers/Microsoft.Resources/tags/default\",\n  urlParameters: [Parameters.scope],\n  queryParameters: [Parameters.apiVersion],\n  headerParameters: [Parameters.acceptLanguage],\n  responses: {\n    200: {},\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  serializer\n};\n\nconst listNextOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"GET\",\n  baseUrl: \"https://management.azure.com\",\n  path: \"{nextLink}\",\n  urlParameters: [Parameters.nextPageLink],\n  queryParameters: [Parameters.apiVersion],\n  headerParameters: [Parameters.acceptLanguage],\n  responses: {\n    200: {\n      bodyMapper: Mappers.TagsListResult\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nexport {\n  CloudError,\n  DeploymentOperation,\n  DeploymentOperationProperties,\n  DeploymentOperationsListResult,\n  ErrorAdditionalInfo,\n  ErrorResponse,\n  HttpMessage,\n  StatusMessage,\n  TargetResource\n} from \"../models/mappers\";\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is\n * regenerated.\n */\n\nimport * as msRest from \"@azure/ms-rest-js\";\nimport * as Models from \"../models\";\nimport * as Mappers from \"../models/deploymentOperationsMappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { ResourceManagementClientContext } from \"../resourceManagementClientContext\";\n\n/** Class representing a DeploymentOperations. */\nexport class DeploymentOperations {\n  private readonly client: ResourceManagementClientContext;\n\n  /**\n   * Create a DeploymentOperations.\n   * @param {ResourceManagementClientContext} client Reference to the service client.\n   */\n  constructor(client: ResourceManagementClientContext) {\n    this.client = client;\n  }\n\n  /**\n   * Gets a deployments operation.\n   * @param scope The resource scope.\n   * @param deploymentName The name of the deployment.\n   * @param operationId The ID of the operation to get.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.DeploymentOperationsGetAtScopeResponse>\n   */\n  getAtScope(\n    scope: string,\n    deploymentName: string,\n    operationId: string,\n    options?: msRest.RequestOptionsBase\n  ): Promise<Models.DeploymentOperationsGetAtScopeResponse>;\n  /**\n   * @param scope The resource scope.\n   * @param deploymentName The name of the deployment.\n   * @param operationId The ID of the operation to get.\n   * @param callback The callback\n   */\n  getAtScope(\n    scope: string,\n    deploymentName: string,\n    operationId: string,\n    callback: msRest.ServiceCallback<Models.DeploymentOperation>\n  ): void;\n  /**\n   * @param scope The resource scope.\n   * @param deploymentName The name of the deployment.\n   * @param operationId The ID of the operation to get.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  getAtScope(\n    scope: string,\n    deploymentName: string,\n    operationId: string,\n    options: msRest.RequestOptionsBase,\n    callback: msRest.ServiceCallback<Models.DeploymentOperation>\n  ): void;\n  getAtScope(\n    scope: string,\n    deploymentName: string,\n    operationId: string,\n    options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.DeploymentOperation>,\n    callback?: msRest.ServiceCallback<Models.DeploymentOperation>\n  ): Promise<Models.DeploymentOperationsGetAtScopeResponse> {\n    return this.client.sendOperationRequest(\n      {\n        scope,\n        deploymentName,\n        operationId,\n        options\n      },\n      getAtScopeOperationSpec,\n      callback\n    ) as Promise<Models.DeploymentOperationsGetAtScopeResponse>;\n  }\n\n  /**\n   * Gets all deployments operations for a deployment.\n   * @param scope The resource scope.\n   * @param deploymentName The name of the deployment.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.DeploymentOperationsListAtScopeResponse>\n   */\n  listAtScope(\n    scope: string,\n    deploymentName: string,\n    options?: Models.DeploymentOperationsListAtScopeOptionalParams\n  ): Promise<Models.DeploymentOperationsListAtScopeResponse>;\n  /**\n   * @param scope The resource scope.\n   * @param deploymentName The name of the deployment.\n   * @param callback The callback\n   */\n  listAtScope(\n    scope: string,\n    deploymentName: string,\n    callback: msRest.ServiceCallback<Models.DeploymentOperationsListResult>\n  ): void;\n  /**\n   * @param scope The resource scope.\n   * @param deploymentName The name of the deployment.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  listAtScope(\n    scope: string,\n    deploymentName: string,\n    options: Models.DeploymentOperationsListAtScopeOptionalParams,\n    callback: msRest.ServiceCallback<Models.DeploymentOperationsListResult>\n  ): void;\n  listAtScope(\n    scope: string,\n    deploymentName: string,\n    options?:\n      | Models.DeploymentOperationsListAtScopeOptionalParams\n      | msRest.ServiceCallback<Models.DeploymentOperationsListResult>,\n    callback?: msRest.ServiceCallback<Models.DeploymentOperationsListResult>\n  ): Promise<Models.DeploymentOperationsListAtScopeResponse> {\n    return this.client.sendOperationRequest(\n      {\n        scope,\n        deploymentName,\n        options\n      },\n      listAtScopeOperationSpec,\n      callback\n    ) as Promise<Models.DeploymentOperationsListAtScopeResponse>;\n  }\n\n  /**\n   * Gets a deployments operation.\n   * @param deploymentName The name of the deployment.\n   * @param operationId The ID of the operation to get.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.DeploymentOperationsGetAtTenantScopeResponse>\n   */\n  getAtTenantScope(\n    deploymentName: string,\n    operationId: string,\n    options?: msRest.RequestOptionsBase\n  ): Promise<Models.DeploymentOperationsGetAtTenantScopeResponse>;\n  /**\n   * @param deploymentName The name of the deployment.\n   * @param operationId The ID of the operation to get.\n   * @param callback The callback\n   */\n  getAtTenantScope(\n    deploymentName: string,\n    operationId: string,\n    callback: msRest.ServiceCallback<Models.DeploymentOperation>\n  ): void;\n  /**\n   * @param deploymentName The name of the deployment.\n   * @param operationId The ID of the operation to get.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  getAtTenantScope(\n    deploymentName: string,\n    operationId: string,\n    options: msRest.RequestOptionsBase,\n    callback: msRest.ServiceCallback<Models.DeploymentOperation>\n  ): void;\n  getAtTenantScope(\n    deploymentName: string,\n    operationId: string,\n    options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.DeploymentOperation>,\n    callback?: msRest.ServiceCallback<Models.DeploymentOperation>\n  ): Promise<Models.DeploymentOperationsGetAtTenantScopeResponse> {\n    return this.client.sendOperationRequest(\n      {\n        deploymentName,\n        operationId,\n        options\n      },\n      getAtTenantScopeOperationSpec,\n      callback\n    ) as Promise<Models.DeploymentOperationsGetAtTenantScopeResponse>;\n  }\n\n  /**\n   * Gets all deployments operations for a deployment.\n   * @param deploymentName The name of the deployment.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.DeploymentOperationsListAtTenantScopeResponse>\n   */\n  listAtTenantScope(\n    deploymentName: string,\n    options?: Models.DeploymentOperationsListAtTenantScopeOptionalParams\n  ): Promise<Models.DeploymentOperationsListAtTenantScopeResponse>;\n  /**\n   * @param deploymentName The name of the deployment.\n   * @param callback The callback\n   */\n  listAtTenantScope(\n    deploymentName: string,\n    callback: msRest.ServiceCallback<Models.DeploymentOperationsListResult>\n  ): void;\n  /**\n   * @param deploymentName The name of the deployment.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  listAtTenantScope(\n    deploymentName: string,\n    options: Models.DeploymentOperationsListAtTenantScopeOptionalParams,\n    callback: msRest.ServiceCallback<Models.DeploymentOperationsListResult>\n  ): void;\n  listAtTenantScope(\n    deploymentName: string,\n    options?:\n      | Models.DeploymentOperationsListAtTenantScopeOptionalParams\n      | msRest.ServiceCallback<Models.DeploymentOperationsListResult>,\n    callback?: msRest.ServiceCallback<Models.DeploymentOperationsListResult>\n  ): Promise<Models.DeploymentOperationsListAtTenantScopeResponse> {\n    return this.client.sendOperationRequest(\n      {\n        deploymentName,\n        options\n      },\n      listAtTenantScopeOperationSpec,\n      callback\n    ) as Promise<Models.DeploymentOperationsListAtTenantScopeResponse>;\n  }\n\n  /**\n   * Gets a deployments operation.\n   * @param groupId The management group ID.\n   * @param deploymentName The name of the deployment.\n   * @param operationId The ID of the operation to get.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.DeploymentOperationsGetAtManagementGroupScopeResponse>\n   */\n  getAtManagementGroupScope(\n    groupId: string,\n    deploymentName: string,\n    operationId: string,\n    options?: msRest.RequestOptionsBase\n  ): Promise<Models.DeploymentOperationsGetAtManagementGroupScopeResponse>;\n  /**\n   * @param groupId The management group ID.\n   * @param deploymentName The name of the deployment.\n   * @param operationId The ID of the operation to get.\n   * @param callback The callback\n   */\n  getAtManagementGroupScope(\n    groupId: string,\n    deploymentName: string,\n    operationId: string,\n    callback: msRest.ServiceCallback<Models.DeploymentOperation>\n  ): void;\n  /**\n   * @param groupId The management group ID.\n   * @param deploymentName The name of the deployment.\n   * @param operationId The ID of the operation to get.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  getAtManagementGroupScope(\n    groupId: string,\n    deploymentName: string,\n    operationId: string,\n    options: msRest.RequestOptionsBase,\n    callback: msRest.ServiceCallback<Models.DeploymentOperation>\n  ): void;\n  getAtManagementGroupScope(\n    groupId: string,\n    deploymentName: string,\n    operationId: string,\n    options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.DeploymentOperation>,\n    callback?: msRest.ServiceCallback<Models.DeploymentOperation>\n  ): Promise<Models.DeploymentOperationsGetAtManagementGroupScopeResponse> {\n    return this.client.sendOperationRequest(\n      {\n        groupId,\n        deploymentName,\n        operationId,\n        options\n      },\n      getAtManagementGroupScopeOperationSpec,\n      callback\n    ) as Promise<Models.DeploymentOperationsGetAtManagementGroupScopeResponse>;\n  }\n\n  /**\n   * Gets all deployments operations for a deployment.\n   * @param groupId The management group ID.\n   * @param deploymentName The name of the deployment.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.DeploymentOperationsListAtManagementGroupScopeResponse>\n   */\n  listAtManagementGroupScope(\n    groupId: string,\n    deploymentName: string,\n    options?: Models.DeploymentOperationsListAtManagementGroupScopeOptionalParams\n  ): Promise<Models.DeploymentOperationsListAtManagementGroupScopeResponse>;\n  /**\n   * @param groupId The management group ID.\n   * @param deploymentName The name of the deployment.\n   * @param callback The callback\n   */\n  listAtManagementGroupScope(\n    groupId: string,\n    deploymentName: string,\n    callback: msRest.ServiceCallback<Models.DeploymentOperationsListResult>\n  ): void;\n  /**\n   * @param groupId The management group ID.\n   * @param deploymentName The name of the deployment.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  listAtManagementGroupScope(\n    groupId: string,\n    deploymentName: string,\n    options: Models.DeploymentOperationsListAtManagementGroupScopeOptionalParams,\n    callback: msRest.ServiceCallback<Models.DeploymentOperationsListResult>\n  ): void;\n  listAtManagementGroupScope(\n    groupId: string,\n    deploymentName: string,\n    options?:\n      | Models.DeploymentOperationsListAtManagementGroupScopeOptionalParams\n      | msRest.ServiceCallback<Models.DeploymentOperationsListResult>,\n    callback?: msRest.ServiceCallback<Models.DeploymentOperationsListResult>\n  ): Promise<Models.DeploymentOperationsListAtManagementGroupScopeResponse> {\n    return this.client.sendOperationRequest(\n      {\n        groupId,\n        deploymentName,\n        options\n      },\n      listAtManagementGroupScopeOperationSpec,\n      callback\n    ) as Promise<Models.DeploymentOperationsListAtManagementGroupScopeResponse>;\n  }\n\n  /**\n   * Gets a deployments operation.\n   * @param deploymentName The name of the deployment.\n   * @param operationId The ID of the operation to get.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.DeploymentOperationsGetAtSubscriptionScopeResponse>\n   */\n  getAtSubscriptionScope(\n    deploymentName: string,\n    operationId: string,\n    options?: msRest.RequestOptionsBase\n  ): Promise<Models.DeploymentOperationsGetAtSubscriptionScopeResponse>;\n  /**\n   * @param deploymentName The name of the deployment.\n   * @param operationId The ID of the operation to get.\n   * @param callback The callback\n   */\n  getAtSubscriptionScope(\n    deploymentName: string,\n    operationId: string,\n    callback: msRest.ServiceCallback<Models.DeploymentOperation>\n  ): void;\n  /**\n   * @param deploymentName The name of the deployment.\n   * @param operationId The ID of the operation to get.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  getAtSubscriptionScope(\n    deploymentName: string,\n    operationId: string,\n    options: msRest.RequestOptionsBase,\n    callback: msRest.ServiceCallback<Models.DeploymentOperation>\n  ): void;\n  getAtSubscriptionScope(\n    deploymentName: string,\n    operationId: string,\n    options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.DeploymentOperation>,\n    callback?: msRest.ServiceCallback<Models.DeploymentOperation>\n  ): Promise<Models.DeploymentOperationsGetAtSubscriptionScopeResponse> {\n    return this.client.sendOperationRequest(\n      {\n        deploymentName,\n        operationId,\n        options\n      },\n      getAtSubscriptionScopeOperationSpec,\n      callback\n    ) as Promise<Models.DeploymentOperationsGetAtSubscriptionScopeResponse>;\n  }\n\n  /**\n   * Gets all deployments operations for a deployment.\n   * @param deploymentName The name of the deployment.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.DeploymentOperationsListAtSubscriptionScopeResponse>\n   */\n  listAtSubscriptionScope(\n    deploymentName: string,\n    options?: Models.DeploymentOperationsListAtSubscriptionScopeOptionalParams\n  ): Promise<Models.DeploymentOperationsListAtSubscriptionScopeResponse>;\n  /**\n   * @param deploymentName The name of the deployment.\n   * @param callback The callback\n   */\n  listAtSubscriptionScope(\n    deploymentName: string,\n    callback: msRest.ServiceCallback<Models.DeploymentOperationsListResult>\n  ): void;\n  /**\n   * @param deploymentName The name of the deployment.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  listAtSubscriptionScope(\n    deploymentName: string,\n    options: Models.DeploymentOperationsListAtSubscriptionScopeOptionalParams,\n    callback: msRest.ServiceCallback<Models.DeploymentOperationsListResult>\n  ): void;\n  listAtSubscriptionScope(\n    deploymentName: string,\n    options?:\n      | Models.DeploymentOperationsListAtSubscriptionScopeOptionalParams\n      | msRest.ServiceCallback<Models.DeploymentOperationsListResult>,\n    callback?: msRest.ServiceCallback<Models.DeploymentOperationsListResult>\n  ): Promise<Models.DeploymentOperationsListAtSubscriptionScopeResponse> {\n    return this.client.sendOperationRequest(\n      {\n        deploymentName,\n        options\n      },\n      listAtSubscriptionScopeOperationSpec,\n      callback\n    ) as Promise<Models.DeploymentOperationsListAtSubscriptionScopeResponse>;\n  }\n\n  /**\n   * Gets a deployments operation.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param deploymentName The name of the deployment.\n   * @param operationId The ID of the operation to get.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.DeploymentOperationsGetResponse>\n   */\n  get(\n    resourceGroupName: string,\n    deploymentName: string,\n    operationId: string,\n    options?: msRest.RequestOptionsBase\n  ): Promise<Models.DeploymentOperationsGetResponse>;\n  /**\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param deploymentName The name of the deployment.\n   * @param operationId The ID of the operation to get.\n   * @param callback The callback\n   */\n  get(\n    resourceGroupName: string,\n    deploymentName: string,\n    operationId: string,\n    callback: msRest.ServiceCallback<Models.DeploymentOperation>\n  ): void;\n  /**\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param deploymentName The name of the deployment.\n   * @param operationId The ID of the operation to get.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  get(\n    resourceGroupName: string,\n    deploymentName: string,\n    operationId: string,\n    options: msRest.RequestOptionsBase,\n    callback: msRest.ServiceCallback<Models.DeploymentOperation>\n  ): void;\n  get(\n    resourceGroupName: string,\n    deploymentName: string,\n    operationId: string,\n    options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.DeploymentOperation>,\n    callback?: msRest.ServiceCallback<Models.DeploymentOperation>\n  ): Promise<Models.DeploymentOperationsGetResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        deploymentName,\n        operationId,\n        options\n      },\n      getOperationSpec,\n      callback\n    ) as Promise<Models.DeploymentOperationsGetResponse>;\n  }\n\n  /**\n   * Gets all deployments operations for a deployment.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param deploymentName The name of the deployment.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.DeploymentOperationsListResponse>\n   */\n  list(\n    resourceGroupName: string,\n    deploymentName: string,\n    options?: Models.DeploymentOperationsListOptionalParams\n  ): Promise<Models.DeploymentOperationsListResponse>;\n  /**\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param deploymentName The name of the deployment.\n   * @param callback The callback\n   */\n  list(\n    resourceGroupName: string,\n    deploymentName: string,\n    callback: msRest.ServiceCallback<Models.DeploymentOperationsListResult>\n  ): void;\n  /**\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param deploymentName The name of the deployment.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  list(\n    resourceGroupName: string,\n    deploymentName: string,\n    options: Models.DeploymentOperationsListOptionalParams,\n    callback: msRest.ServiceCallback<Models.DeploymentOperationsListResult>\n  ): void;\n  list(\n    resourceGroupName: string,\n    deploymentName: string,\n    options?:\n      | Models.DeploymentOperationsListOptionalParams\n      | msRest.ServiceCallback<Models.DeploymentOperationsListResult>,\n    callback?: msRest.ServiceCallback<Models.DeploymentOperationsListResult>\n  ): Promise<Models.DeploymentOperationsListResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        deploymentName,\n        options\n      },\n      listOperationSpec,\n      callback\n    ) as Promise<Models.DeploymentOperationsListResponse>;\n  }\n\n  /**\n   * Gets all deployments operations for a deployment.\n   * @param nextPageLink The NextLink from the previous successful call to List operation.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.DeploymentOperationsListAtScopeNextResponse>\n   */\n  listAtScopeNext(\n    nextPageLink: string,\n    options?: Models.DeploymentOperationsListAtScopeNextOptionalParams\n  ): Promise<Models.DeploymentOperationsListAtScopeNextResponse>;\n  /**\n   * @param nextPageLink The NextLink from the previous successful call to List operation.\n   * @param callback The callback\n   */\n  listAtScopeNext(\n    nextPageLink: string,\n    callback: msRest.ServiceCallback<Models.DeploymentOperationsListResult>\n  ): void;\n  /**\n   * @param nextPageLink The NextLink from the previous successful call to List operation.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  listAtScopeNext(\n    nextPageLink: string,\n    options: Models.DeploymentOperationsListAtScopeNextOptionalParams,\n    callback: msRest.ServiceCallback<Models.DeploymentOperationsListResult>\n  ): void;\n  listAtScopeNext(\n    nextPageLink: string,\n    options?:\n      | Models.DeploymentOperationsListAtScopeNextOptionalParams\n      | msRest.ServiceCallback<Models.DeploymentOperationsListResult>,\n    callback?: msRest.ServiceCallback<Models.DeploymentOperationsListResult>\n  ): Promise<Models.DeploymentOperationsListAtScopeNextResponse> {\n    return this.client.sendOperationRequest(\n      {\n        nextPageLink,\n        options\n      },\n      listAtScopeNextOperationSpec,\n      callback\n    ) as Promise<Models.DeploymentOperationsListAtScopeNextResponse>;\n  }\n\n  /**\n   * Gets all deployments operations for a deployment.\n   * @param nextPageLink The NextLink from the previous successful call to List operation.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.DeploymentOperationsListAtTenantScopeNextResponse>\n   */\n  listAtTenantScopeNext(\n    nextPageLink: string,\n    options?: Models.DeploymentOperationsListAtTenantScopeNextOptionalParams\n  ): Promise<Models.DeploymentOperationsListAtTenantScopeNextResponse>;\n  /**\n   * @param nextPageLink The NextLink from the previous successful call to List operation.\n   * @param callback The callback\n   */\n  listAtTenantScopeNext(\n    nextPageLink: string,\n    callback: msRest.ServiceCallback<Models.DeploymentOperationsListResult>\n  ): void;\n  /**\n   * @param nextPageLink The NextLink from the previous successful call to List operation.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  listAtTenantScopeNext(\n    nextPageLink: string,\n    options: Models.DeploymentOperationsListAtTenantScopeNextOptionalParams,\n    callback: msRest.ServiceCallback<Models.DeploymentOperationsListResult>\n  ): void;\n  listAtTenantScopeNext(\n    nextPageLink: string,\n    options?:\n      | Models.DeploymentOperationsListAtTenantScopeNextOptionalParams\n      | msRest.ServiceCallback<Models.DeploymentOperationsListResult>,\n    callback?: msRest.ServiceCallback<Models.DeploymentOperationsListResult>\n  ): Promise<Models.DeploymentOperationsListAtTenantScopeNextResponse> {\n    return this.client.sendOperationRequest(\n      {\n        nextPageLink,\n        options\n      },\n      listAtTenantScopeNextOperationSpec,\n      callback\n    ) as Promise<Models.DeploymentOperationsListAtTenantScopeNextResponse>;\n  }\n\n  /**\n   * Gets all deployments operations for a deployment.\n   * @param nextPageLink The NextLink from the previous successful call to List operation.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.DeploymentOperationsListAtManagementGroupScopeNextResponse>\n   */\n  listAtManagementGroupScopeNext(\n    nextPageLink: string,\n    options?: Models.DeploymentOperationsListAtManagementGroupScopeNextOptionalParams\n  ): Promise<Models.DeploymentOperationsListAtManagementGroupScopeNextResponse>;\n  /**\n   * @param nextPageLink The NextLink from the previous successful call to List operation.\n   * @param callback The callback\n   */\n  listAtManagementGroupScopeNext(\n    nextPageLink: string,\n    callback: msRest.ServiceCallback<Models.DeploymentOperationsListResult>\n  ): void;\n  /**\n   * @param nextPageLink The NextLink from the previous successful call to List operation.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  listAtManagementGroupScopeNext(\n    nextPageLink: string,\n    options: Models.DeploymentOperationsListAtManagementGroupScopeNextOptionalParams,\n    callback: msRest.ServiceCallback<Models.DeploymentOperationsListResult>\n  ): void;\n  listAtManagementGroupScopeNext(\n    nextPageLink: string,\n    options?:\n      | Models.DeploymentOperationsListAtManagementGroupScopeNextOptionalParams\n      | msRest.ServiceCallback<Models.DeploymentOperationsListResult>,\n    callback?: msRest.ServiceCallback<Models.DeploymentOperationsListResult>\n  ): Promise<Models.DeploymentOperationsListAtManagementGroupScopeNextResponse> {\n    return this.client.sendOperationRequest(\n      {\n        nextPageLink,\n        options\n      },\n      listAtManagementGroupScopeNextOperationSpec,\n      callback\n    ) as Promise<Models.DeploymentOperationsListAtManagementGroupScopeNextResponse>;\n  }\n\n  /**\n   * Gets all deployments operations for a deployment.\n   * @param nextPageLink The NextLink from the previous successful call to List operation.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.DeploymentOperationsListAtSubscriptionScopeNextResponse>\n   */\n  listAtSubscriptionScopeNext(\n    nextPageLink: string,\n    options?: Models.DeploymentOperationsListAtSubscriptionScopeNextOptionalParams\n  ): Promise<Models.DeploymentOperationsListAtSubscriptionScopeNextResponse>;\n  /**\n   * @param nextPageLink The NextLink from the previous successful call to List operation.\n   * @param callback The callback\n   */\n  listAtSubscriptionScopeNext(\n    nextPageLink: string,\n    callback: msRest.ServiceCallback<Models.DeploymentOperationsListResult>\n  ): void;\n  /**\n   * @param nextPageLink The NextLink from the previous successful call to List operation.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  listAtSubscriptionScopeNext(\n    nextPageLink: string,\n    options: Models.DeploymentOperationsListAtSubscriptionScopeNextOptionalParams,\n    callback: msRest.ServiceCallback<Models.DeploymentOperationsListResult>\n  ): void;\n  listAtSubscriptionScopeNext(\n    nextPageLink: string,\n    options?:\n      | Models.DeploymentOperationsListAtSubscriptionScopeNextOptionalParams\n      | msRest.ServiceCallback<Models.DeploymentOperationsListResult>,\n    callback?: msRest.ServiceCallback<Models.DeploymentOperationsListResult>\n  ): Promise<Models.DeploymentOperationsListAtSubscriptionScopeNextResponse> {\n    return this.client.sendOperationRequest(\n      {\n        nextPageLink,\n        options\n      },\n      listAtSubscriptionScopeNextOperationSpec,\n      callback\n    ) as Promise<Models.DeploymentOperationsListAtSubscriptionScopeNextResponse>;\n  }\n\n  /**\n   * Gets all deployments operations for a deployment.\n   * @param nextPageLink The NextLink from the previous successful call to List operation.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.DeploymentOperationsListNextResponse>\n   */\n  listNext(\n    nextPageLink: string,\n    options?: Models.DeploymentOperationsListNextOptionalParams\n  ): Promise<Models.DeploymentOperationsListNextResponse>;\n  /**\n   * @param nextPageLink The NextLink from the previous successful call to List operation.\n   * @param callback The callback\n   */\n  listNext(\n    nextPageLink: string,\n    callback: msRest.ServiceCallback<Models.DeploymentOperationsListResult>\n  ): void;\n  /**\n   * @param nextPageLink The NextLink from the previous successful call to List operation.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  listNext(\n    nextPageLink: string,\n    options: Models.DeploymentOperationsListNextOptionalParams,\n    callback: msRest.ServiceCallback<Models.DeploymentOperationsListResult>\n  ): void;\n  listNext(\n    nextPageLink: string,\n    options?:\n      | Models.DeploymentOperationsListNextOptionalParams\n      | msRest.ServiceCallback<Models.DeploymentOperationsListResult>,\n    callback?: msRest.ServiceCallback<Models.DeploymentOperationsListResult>\n  ): Promise<Models.DeploymentOperationsListNextResponse> {\n    return this.client.sendOperationRequest(\n      {\n        nextPageLink,\n        options\n      },\n      listNextOperationSpec,\n      callback\n    ) as Promise<Models.DeploymentOperationsListNextResponse>;\n  }\n}\n\n// Operation Specifications\nconst serializer = new msRest.Serializer(Mappers);\nconst getAtScopeOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"GET\",\n  path:\n    \"{scope}/providers/Microsoft.Resources/deployments/{deploymentName}/operations/{operationId}\",\n  urlParameters: [Parameters.scope, Parameters.deploymentName, Parameters.operationId],\n  queryParameters: [Parameters.apiVersion],\n  headerParameters: [Parameters.acceptLanguage],\n  responses: {\n    200: {\n      bodyMapper: Mappers.DeploymentOperation\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  serializer\n};\n\nconst listAtScopeOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"GET\",\n  path: \"{scope}/providers/Microsoft.Resources/deployments/{deploymentName}/operations\",\n  urlParameters: [Parameters.scope, Parameters.deploymentName],\n  queryParameters: [Parameters.top, Parameters.apiVersion],\n  headerParameters: [Parameters.acceptLanguage],\n  responses: {\n    200: {\n      bodyMapper: Mappers.DeploymentOperationsListResult\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  serializer\n};\n\nconst getAtTenantScopeOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"GET\",\n  path: \"providers/Microsoft.Resources/deployments/{deploymentName}/operations/{operationId}\",\n  urlParameters: [Parameters.deploymentName, Parameters.operationId],\n  queryParameters: [Parameters.apiVersion],\n  headerParameters: [Parameters.acceptLanguage],\n  responses: {\n    200: {\n      bodyMapper: Mappers.DeploymentOperation\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  serializer\n};\n\nconst listAtTenantScopeOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"GET\",\n  path: \"providers/Microsoft.Resources/deployments/{deploymentName}/operations\",\n  urlParameters: [Parameters.deploymentName],\n  queryParameters: [Parameters.top, Parameters.apiVersion],\n  headerParameters: [Parameters.acceptLanguage],\n  responses: {\n    200: {\n      bodyMapper: Mappers.DeploymentOperationsListResult\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  serializer\n};\n\nconst getAtManagementGroupScopeOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"GET\",\n  path:\n    \"providers/Microsoft.Management/managementGroups/{groupId}/providers/Microsoft.Resources/deployments/{deploymentName}/operations/{operationId}\",\n  urlParameters: [Parameters.groupId, Parameters.deploymentName, Parameters.operationId],\n  queryParameters: [Parameters.apiVersion],\n  headerParameters: [Parameters.acceptLanguage],\n  responses: {\n    200: {\n      bodyMapper: Mappers.DeploymentOperation\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  serializer\n};\n\nconst listAtManagementGroupScopeOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"GET\",\n  path:\n    \"providers/Microsoft.Management/managementGroups/{groupId}/providers/Microsoft.Resources/deployments/{deploymentName}/operations\",\n  urlParameters: [Parameters.groupId, Parameters.deploymentName],\n  queryParameters: [Parameters.top, Parameters.apiVersion],\n  headerParameters: [Parameters.acceptLanguage],\n  responses: {\n    200: {\n      bodyMapper: Mappers.DeploymentOperationsListResult\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  serializer\n};\n\nconst getAtSubscriptionScopeOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"GET\",\n  path:\n    \"subscriptions/{subscriptionId}/providers/Microsoft.Resources/deployments/{deploymentName}/operations/{operationId}\",\n  urlParameters: [Parameters.deploymentName, Parameters.operationId, Parameters.subscriptionId],\n  queryParameters: [Parameters.apiVersion],\n  headerParameters: [Parameters.acceptLanguage],\n  responses: {\n    200: {\n      bodyMapper: Mappers.DeploymentOperation\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  serializer\n};\n\nconst listAtSubscriptionScopeOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"GET\",\n  path:\n    \"subscriptions/{subscriptionId}/providers/Microsoft.Resources/deployments/{deploymentName}/operations\",\n  urlParameters: [Parameters.deploymentName, Parameters.subscriptionId],\n  queryParameters: [Parameters.top, Parameters.apiVersion],\n  headerParameters: [Parameters.acceptLanguage],\n  responses: {\n    200: {\n      bodyMapper: Mappers.DeploymentOperationsListResult\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  serializer\n};\n\nconst getOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"GET\",\n  path:\n    \"subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/deployments/{deploymentName}/operations/{operationId}\",\n  urlParameters: [\n    Parameters.resourceGroupName,\n    Parameters.deploymentName,\n    Parameters.operationId,\n    Parameters.subscriptionId\n  ],\n  queryParameters: [Parameters.apiVersion],\n  headerParameters: [Parameters.acceptLanguage],\n  responses: {\n    200: {\n      bodyMapper: Mappers.DeploymentOperation\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  serializer\n};\n\nconst listOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"GET\",\n  path:\n    \"subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/deployments/{deploymentName}/operations\",\n  urlParameters: [\n    Parameters.resourceGroupName,\n    Parameters.deploymentName,\n    Parameters.subscriptionId\n  ],\n  queryParameters: [Parameters.top, Parameters.apiVersion],\n  headerParameters: [Parameters.acceptLanguage],\n  responses: {\n    200: {\n      bodyMapper: Mappers.DeploymentOperationsListResult\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  serializer\n};\n\nconst listAtScopeNextOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"GET\",\n  baseUrl: \"https://management.azure.com\",\n  path: \"{nextLink}\",\n  urlParameters: [Parameters.nextPageLink],\n  queryParameters: [Parameters.top, Parameters.apiVersion],\n  headerParameters: [Parameters.acceptLanguage],\n  responses: {\n    200: {\n      bodyMapper: Mappers.DeploymentOperationsListResult\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  serializer\n};\n\nconst listAtTenantScopeNextOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"GET\",\n  baseUrl: \"https://management.azure.com\",\n  path: \"{nextLink}\",\n  urlParameters: [Parameters.nextPageLink],\n  queryParameters: [Parameters.top, Parameters.apiVersion],\n  headerParameters: [Parameters.acceptLanguage],\n  responses: {\n    200: {\n      bodyMapper: Mappers.DeploymentOperationsListResult\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  serializer\n};\n\nconst listAtManagementGroupScopeNextOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"GET\",\n  baseUrl: \"https://management.azure.com\",\n  path: \"{nextLink}\",\n  urlParameters: [Parameters.nextPageLink],\n  queryParameters: [Parameters.top, Parameters.apiVersion],\n  headerParameters: [Parameters.acceptLanguage],\n  responses: {\n    200: {\n      bodyMapper: Mappers.DeploymentOperationsListResult\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  serializer\n};\n\nconst listAtSubscriptionScopeNextOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"GET\",\n  baseUrl: \"https://management.azure.com\",\n  path: \"{nextLink}\",\n  urlParameters: [Parameters.nextPageLink],\n  queryParameters: [Parameters.top, Parameters.apiVersion],\n  headerParameters: [Parameters.acceptLanguage],\n  responses: {\n    200: {\n      bodyMapper: Mappers.DeploymentOperationsListResult\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  serializer\n};\n\nconst listNextOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"GET\",\n  baseUrl: \"https://management.azure.com\",\n  path: \"{nextLink}\",\n  urlParameters: [Parameters.nextPageLink],\n  queryParameters: [Parameters.top, Parameters.apiVersion],\n  headerParameters: [Parameters.acceptLanguage],\n  responses: {\n    200: {\n      bodyMapper: Mappers.DeploymentOperationsListResult\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is\n * regenerated.\n */\n\nimport * as Models from \"./models\";\nimport * as msRest from \"@azure/ms-rest-js\";\nimport { TokenCredential } from \"@azure/core-auth\";\nimport * as msRestAzure from \"@azure/ms-rest-azure-js\";\n\nconst packageName = \"@azure/arm-resources\";\nconst packageVersion = \"4.2.2\";\n\nexport class ResourceManagementClientContext extends msRestAzure.AzureServiceClient {\n  credentials: msRest.ServiceClientCredentials | TokenCredential;\n  subscriptionId: string;\n  apiVersion?: string;\n\n  /**\n   * Initializes a new instance of the ResourceManagementClient class.\n   * @param credentials Credentials needed for the client to connect to Azure. Credentials\n   * implementing the TokenCredential interface from the @azure/identity package are recommended. For\n   * more information about these credentials, see\n   * {@link https://www.npmjs.com/package/@azure/identity}. Credentials implementing the\n   * ServiceClientCredentials interface from the older packages @azure/ms-rest-nodeauth and\n   * @azure/ms-rest-browserauth are also supported.\n   * @param subscriptionId The ID of the target subscription.\n   * @param [options] The parameter options\n   */\n  constructor(\n    credentials: msRest.ServiceClientCredentials | TokenCredential,\n    subscriptionId: string,\n    options?: Models.ResourceManagementClientOptions\n  ) {\n    if (credentials == undefined) {\n      throw new Error(\"'credentials' cannot be null.\");\n    }\n    if (subscriptionId == undefined) {\n      throw new Error(\"'subscriptionId' cannot be null.\");\n    }\n\n    if (!options) {\n      options = {};\n    }\n    if (!options.userAgent) {\n      const defaultUserAgent = msRestAzure.getDefaultUserAgentValue();\n      options.userAgent = `${packageName}/${packageVersion} ${defaultUserAgent}`;\n    }\n\n    super(credentials, options);\n\n    this.apiVersion = \"2021-01-01\";\n    this.acceptLanguage = \"en-US\";\n    this.longRunningOperationRetryTimeout = 30;\n    this.baseUri = options.baseUri || this.baseUri || \"https://management.azure.com\";\n    this.requestContentType = \"application/json; charset=utf-8\";\n    this.credentials = credentials;\n    this.subscriptionId = subscriptionId;\n\n    if (options.acceptLanguage !== null && options.acceptLanguage !== undefined) {\n      this.acceptLanguage = options.acceptLanguage;\n    }\n    if (\n      options.longRunningOperationRetryTimeout !== null &&\n      options.longRunningOperationRetryTimeout !== undefined\n    ) {\n      this.longRunningOperationRetryTimeout = options.longRunningOperationRetryTimeout;\n    }\n  }\n}\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is\n * regenerated.\n */\n\nimport * as msRest from \"@azure/ms-rest-js\";\nimport { TokenCredential } from \"@azure/core-auth\";\nimport * as Models from \"./models\";\nimport * as Mappers from \"./models/mappers\";\nimport * as operations from \"./operations\";\nimport { ResourceManagementClientContext } from \"./resourceManagementClientContext\";\n\nclass ResourceManagementClient extends ResourceManagementClientContext {\n  // Operation groups\n  operations: operations.Operations;\n  deployments: operations.Deployments;\n  providers: operations.Providers;\n  providerResourceTypes: operations.ProviderResourceTypes;\n  resources: operations.Resources;\n  resourceGroups: operations.ResourceGroups;\n  tags: operations.TagsOperations;\n  deploymentOperations: operations.DeploymentOperations;\n\n  /**\n   * Initializes a new instance of the ResourceManagementClient class.\n   * @param credentials Credentials needed for the client to connect to Azure. Credentials\n   * implementing the TokenCredential interface from the @azure/identity package are recommended. For\n   * more information about these credentials, see\n   * {@link https://www.npmjs.com/package/@azure/identity}. Credentials implementing the\n   * ServiceClientCredentials interface from the older packages @azure/ms-rest-nodeauth and\n   * @azure/ms-rest-browserauth are also supported.\n   * @param subscriptionId The ID of the target subscription.\n   * @param [options] The parameter options\n   */\n  constructor(\n    credentials: msRest.ServiceClientCredentials | TokenCredential,\n    subscriptionId: string,\n    options?: Models.ResourceManagementClientOptions\n  ) {\n    super(credentials, subscriptionId, options);\n    this.operations = new operations.Operations(this);\n    this.deployments = new operations.Deployments(this);\n    this.providers = new operations.Providers(this);\n    this.providerResourceTypes = new operations.ProviderResourceTypes(this);\n    this.resources = new operations.Resources(this);\n    this.resourceGroups = new operations.ResourceGroups(this);\n    this.tags = new operations.TagsOperations(this);\n    this.deploymentOperations = new operations.DeploymentOperations(this);\n  }\n}\n\n// Operation Specifications\n\nexport {\n  ResourceManagementClient,\n  ResourceManagementClientContext,\n  Models as ResourceManagementModels,\n  Mappers as ResourceManagementMappers\n};\nexport * from \"./operations\";\n"],"names":["CloudErrorMapper","BaseResourceMapper","msRest.Serializer","Parameters.apiVersion","Parameters.acceptLanguage","Mappers.OperationListResult","Mappers.CloudError","Parameters.nextPageLink","serializer","Mappers","Parameters.scope","Parameters.deploymentName","Mappers.DeploymentExtended","Mappers.DeploymentExportResult","Parameters.filter","Parameters.top","Mappers.DeploymentListResult","Parameters.groupId","Parameters.subscriptionId","Parameters.resourceGroupName","Mappers.TemplateHashResult","Mappers.Deployment","Mappers.DeploymentValidateResult","Mappers.ScopedDeployment","Mappers.ScopedDeploymentWhatIf","Mappers.WhatIfOperationResult","Mappers.DeploymentsWhatIfAtTenantScopeHeaders","Mappers.DeploymentsWhatIfAtManagementGroupScopeHeaders","Mappers.DeploymentWhatIf","Mappers.DeploymentsWhatIfAtSubscriptionScopeHeaders","Mappers.DeploymentsWhatIfHeaders","listOperationSpec","listAtTenantScopeOperationSpec","getOperationSpec","getAtTenantScopeOperationSpec","listNextOperationSpec","listAtTenantScopeNextOperationSpec","Parameters.resourceProviderNamespace","Mappers.Provider","Parameters.expand","Mappers.ProviderListResult","Mappers.ProviderResourceTypeListResult","listByResourceGroupOperationSpec","checkExistenceOperationSpec","beginDeleteMethodOperationSpec","beginCreateOrUpdateOperationSpec","listByResourceGroupNextOperationSpec","Mappers.ResourceListResult","Parameters.parentResourcePath","Parameters.resourceType","Parameters.resourceName","Mappers.GenericResource","Parameters.resourceId","Parameters.sourceResourceGroupName","Mappers.ResourcesMoveInfo","Mappers.ResourceGroup","Mappers.ResourceGroupPatchable","Mappers.ResourceGroupListResult","Mappers.ExportTemplateRequest","Mappers.ResourceGroupExportResult","createOrUpdateOperationSpec","getAtScopeOperationSpec","Parameters.tagName","Parameters.tagValue","Mappers.TagValue","Mappers.TagDetails","Mappers.TagsListResult","Mappers.TagsResource","Mappers.TagsPatchResource","listAtScopeOperationSpec","getAtManagementGroupScopeOperationSpec","listAtManagementGroupScopeOperationSpec","getAtSubscriptionScopeOperationSpec","listAtSubscriptionScopeOperationSpec","listAtScopeNextOperationSpec","listAtManagementGroupScopeNextOperationSpec","listAtSubscriptionScopeNextOperationSpec","Parameters.operationId","Mappers.DeploymentOperation","Mappers.DeploymentOperationsListResult","msRestAzure.getDefaultUserAgentValue","msRestAzure.AzureServiceClient","operations.Operations","operations.Deployments","operations.Providers","operations.ProviderResourceTypes","operations.Resources","operations.ResourceGroups","operations.TagsOperations","operations.DeploymentOperations"],"mappings":"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"}