/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */
import { __extends } from "tslib";
import * as msRestAzure from "@azure/ms-rest-azure-js";
var packageName = "@azure/arm-sql";
var packageVersion = "7.1.2";
var SqlManagementClientContext = /** @class */ (function (_super) {
    __extends(SqlManagementClientContext, _super);
    /**
     * Initializes a new instance of the SqlManagementClient class.
     * @param credentials Credentials needed for the client to connect to Azure. Credentials
     * implementing the TokenCredential interface from the @azure/identity package are recommended. For
     * more information about these credentials, see
     * {@link https://www.npmjs.com/package/@azure/identity}. Credentials implementing the
     * ServiceClientCredentials interface from the older packages @azure/ms-rest-nodeauth and
     * @azure/ms-rest-browserauth are also supported.
     * @param subscriptionId The subscription ID that identifies an Azure subscription.
     * @param [options] The parameter options
     */
    function SqlManagementClientContext(credentials, subscriptionId, options) {
        var _this = this;
        if (credentials == undefined) {
            throw new Error('\'credentials\' cannot be null.');
        }
        if (subscriptionId == undefined) {
            throw new Error('\'subscriptionId\' cannot be null.');
        }
        if (!options) {
            options = {};
        }
        if (!options.userAgent) {
            var defaultUserAgent = msRestAzure.getDefaultUserAgentValue();
            options.userAgent = packageName + "/" + packageVersion + " " + defaultUserAgent;
        }
        _this = _super.call(this, credentials, options) || this;
        _this.acceptLanguage = 'en-US';
        _this.longRunningOperationRetryTimeout = 30;
        _this.baseUri = options.baseUri || _this.baseUri || "https://management.azure.com";
        _this.requestContentType = "application/json; charset=utf-8";
        _this.credentials = credentials;
        _this.subscriptionId = subscriptionId;
        if (options.acceptLanguage !== null && options.acceptLanguage !== undefined) {
            _this.acceptLanguage = options.acceptLanguage;
        }
        if (options.longRunningOperationRetryTimeout !== null && options.longRunningOperationRetryTimeout !== undefined) {
            _this.longRunningOperationRetryTimeout = options.longRunningOperationRetryTimeout;
        }
        return _this;
    }
    /**
     * NOTE: This is an override added manually to workaround bug Azure/ms-rest-js/issues/395
     * When this library is regenerated, this override needs to be brought back
     * This override adds the header "Accept: application/json" to every request
     */
    SqlManagementClientContext.prototype.sendRequest = function (options) {
        if (!options.headers) {
            options.headers = { accept: "application/json" };
        }
        else {
            if (options.headers.set) {
                options.headers.set("accept", "application/json");
            }
            else {
                options.headers["accept"] = "application/json";
            }
        }
        return _super.prototype.sendRequest.call(this, options);
    };
    return SqlManagementClientContext;
}(msRestAzure.AzureServiceClient));
export { SqlManagementClientContext };
//# sourceMappingURL=sqlManagementClientContext.js.map