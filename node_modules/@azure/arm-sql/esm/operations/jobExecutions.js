/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */
import * as msRest from "@azure/ms-rest-js";
import * as Mappers from "../models/jobExecutionsMappers";
import * as Parameters from "../models/parameters";
/** Class representing a JobExecutions. */
var JobExecutions = /** @class */ (function () {
    /**
     * Create a JobExecutions.
     * @param {SqlManagementClientContext} client Reference to the service client.
     */
    function JobExecutions(client) {
        this.client = client;
    }
    JobExecutions.prototype.listByAgent = function (resourceGroupName, serverName, jobAgentName, options, callback) {
        return this.client.sendOperationRequest({
            resourceGroupName: resourceGroupName,
            serverName: serverName,
            jobAgentName: jobAgentName,
            options: options
        }, listByAgentOperationSpec, callback);
    };
    JobExecutions.prototype.cancel = function (resourceGroupName, serverName, jobAgentName, jobName, jobExecutionId, options, callback) {
        return this.client.sendOperationRequest({
            resourceGroupName: resourceGroupName,
            serverName: serverName,
            jobAgentName: jobAgentName,
            jobName: jobName,
            jobExecutionId: jobExecutionId,
            options: options
        }, cancelOperationSpec, callback);
    };
    /**
     * Starts an elastic job execution.
     * @param resourceGroupName The name of the resource group that contains the resource. You can
     * obtain this value from the Azure Resource Manager API or the portal.
     * @param serverName The name of the server.
     * @param jobAgentName The name of the job agent.
     * @param jobName The name of the job to get.
     * @param [options] The optional parameters
     * @returns Promise<Models.JobExecutionsCreateResponse>
     */
    JobExecutions.prototype.create = function (resourceGroupName, serverName, jobAgentName, jobName, options) {
        return this.beginCreate(resourceGroupName, serverName, jobAgentName, jobName, options)
            .then(function (lroPoller) { return lroPoller.pollUntilFinished(); });
    };
    JobExecutions.prototype.listByJob = function (resourceGroupName, serverName, jobAgentName, jobName, options, callback) {
        return this.client.sendOperationRequest({
            resourceGroupName: resourceGroupName,
            serverName: serverName,
            jobAgentName: jobAgentName,
            jobName: jobName,
            options: options
        }, listByJobOperationSpec, callback);
    };
    JobExecutions.prototype.get = function (resourceGroupName, serverName, jobAgentName, jobName, jobExecutionId, options, callback) {
        return this.client.sendOperationRequest({
            resourceGroupName: resourceGroupName,
            serverName: serverName,
            jobAgentName: jobAgentName,
            jobName: jobName,
            jobExecutionId: jobExecutionId,
            options: options
        }, getOperationSpec, callback);
    };
    /**
     * Creates or updates a job execution.
     * @param resourceGroupName The name of the resource group that contains the resource. You can
     * obtain this value from the Azure Resource Manager API or the portal.
     * @param serverName The name of the server.
     * @param jobAgentName The name of the job agent.
     * @param jobName The name of the job to get.
     * @param jobExecutionId The job execution id to create the job execution under.
     * @param [options] The optional parameters
     * @returns Promise<Models.JobExecutionsCreateOrUpdateResponse>
     */
    JobExecutions.prototype.createOrUpdate = function (resourceGroupName, serverName, jobAgentName, jobName, jobExecutionId, options) {
        return this.beginCreateOrUpdate(resourceGroupName, serverName, jobAgentName, jobName, jobExecutionId, options)
            .then(function (lroPoller) { return lroPoller.pollUntilFinished(); });
    };
    /**
     * Starts an elastic job execution.
     * @param resourceGroupName The name of the resource group that contains the resource. You can
     * obtain this value from the Azure Resource Manager API or the portal.
     * @param serverName The name of the server.
     * @param jobAgentName The name of the job agent.
     * @param jobName The name of the job to get.
     * @param [options] The optional parameters
     * @returns Promise<msRestAzure.LROPoller>
     */
    JobExecutions.prototype.beginCreate = function (resourceGroupName, serverName, jobAgentName, jobName, options) {
        return this.client.sendLRORequest({
            resourceGroupName: resourceGroupName,
            serverName: serverName,
            jobAgentName: jobAgentName,
            jobName: jobName,
            options: options
        }, beginCreateOperationSpec, options);
    };
    /**
     * Creates or updates a job execution.
     * @param resourceGroupName The name of the resource group that contains the resource. You can
     * obtain this value from the Azure Resource Manager API or the portal.
     * @param serverName The name of the server.
     * @param jobAgentName The name of the job agent.
     * @param jobName The name of the job to get.
     * @param jobExecutionId The job execution id to create the job execution under.
     * @param [options] The optional parameters
     * @returns Promise<msRestAzure.LROPoller>
     */
    JobExecutions.prototype.beginCreateOrUpdate = function (resourceGroupName, serverName, jobAgentName, jobName, jobExecutionId, options) {
        return this.client.sendLRORequest({
            resourceGroupName: resourceGroupName,
            serverName: serverName,
            jobAgentName: jobAgentName,
            jobName: jobName,
            jobExecutionId: jobExecutionId,
            options: options
        }, beginCreateOrUpdateOperationSpec, options);
    };
    JobExecutions.prototype.listByAgentNext = function (nextPageLink, options, callback) {
        return this.client.sendOperationRequest({
            nextPageLink: nextPageLink,
            options: options
        }, listByAgentNextOperationSpec, callback);
    };
    JobExecutions.prototype.listByJobNext = function (nextPageLink, options, callback) {
        return this.client.sendOperationRequest({
            nextPageLink: nextPageLink,
            options: options
        }, listByJobNextOperationSpec, callback);
    };
    return JobExecutions;
}());
export { JobExecutions };
// Operation Specifications
var serializer = new msRest.Serializer(Mappers);
var listByAgentOperationSpec = {
    httpMethod: "GET",
    path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/jobAgents/{jobAgentName}/executions",
    urlParameters: [
        Parameters.resourceGroupName,
        Parameters.serverName,
        Parameters.jobAgentName,
        Parameters.subscriptionId
    ],
    queryParameters: [
        Parameters.createTimeMin,
        Parameters.createTimeMax,
        Parameters.endTimeMin,
        Parameters.endTimeMax,
        Parameters.isActive,
        Parameters.skip,
        Parameters.top,
        Parameters.apiVersion4
    ],
    headerParameters: [
        Parameters.acceptLanguage
    ],
    responses: {
        200: {
            bodyMapper: Mappers.JobExecutionListResult
        },
        default: {
            bodyMapper: Mappers.CloudError
        }
    },
    serializer: serializer
};
var cancelOperationSpec = {
    httpMethod: "POST",
    path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/jobAgents/{jobAgentName}/jobs/{jobName}/executions/{jobExecutionId}/cancel",
    urlParameters: [
        Parameters.resourceGroupName,
        Parameters.serverName,
        Parameters.jobAgentName,
        Parameters.jobName,
        Parameters.jobExecutionId,
        Parameters.subscriptionId
    ],
    queryParameters: [
        Parameters.apiVersion4
    ],
    headerParameters: [
        Parameters.acceptLanguage
    ],
    responses: {
        200: {},
        default: {
            bodyMapper: Mappers.CloudError
        }
    },
    serializer: serializer
};
var listByJobOperationSpec = {
    httpMethod: "GET",
    path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/jobAgents/{jobAgentName}/jobs/{jobName}/executions",
    urlParameters: [
        Parameters.resourceGroupName,
        Parameters.serverName,
        Parameters.jobAgentName,
        Parameters.jobName,
        Parameters.subscriptionId
    ],
    queryParameters: [
        Parameters.createTimeMin,
        Parameters.createTimeMax,
        Parameters.endTimeMin,
        Parameters.endTimeMax,
        Parameters.isActive,
        Parameters.skip,
        Parameters.top,
        Parameters.apiVersion4
    ],
    headerParameters: [
        Parameters.acceptLanguage
    ],
    responses: {
        200: {
            bodyMapper: Mappers.JobExecutionListResult
        },
        default: {
            bodyMapper: Mappers.CloudError
        }
    },
    serializer: serializer
};
var getOperationSpec = {
    httpMethod: "GET",
    path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/jobAgents/{jobAgentName}/jobs/{jobName}/executions/{jobExecutionId}",
    urlParameters: [
        Parameters.resourceGroupName,
        Parameters.serverName,
        Parameters.jobAgentName,
        Parameters.jobName,
        Parameters.jobExecutionId,
        Parameters.subscriptionId
    ],
    queryParameters: [
        Parameters.apiVersion4
    ],
    headerParameters: [
        Parameters.acceptLanguage
    ],
    responses: {
        200: {
            bodyMapper: Mappers.JobExecution
        },
        default: {
            bodyMapper: Mappers.CloudError
        }
    },
    serializer: serializer
};
var beginCreateOperationSpec = {
    httpMethod: "POST",
    path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/jobAgents/{jobAgentName}/jobs/{jobName}/start",
    urlParameters: [
        Parameters.resourceGroupName,
        Parameters.serverName,
        Parameters.jobAgentName,
        Parameters.jobName,
        Parameters.subscriptionId
    ],
    queryParameters: [
        Parameters.apiVersion4
    ],
    headerParameters: [
        Parameters.acceptLanguage
    ],
    responses: {
        200: {
            bodyMapper: Mappers.JobExecution
        },
        202: {},
        default: {
            bodyMapper: Mappers.CloudError
        }
    },
    serializer: serializer
};
var beginCreateOrUpdateOperationSpec = {
    httpMethod: "PUT",
    path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/jobAgents/{jobAgentName}/jobs/{jobName}/executions/{jobExecutionId}",
    urlParameters: [
        Parameters.resourceGroupName,
        Parameters.serverName,
        Parameters.jobAgentName,
        Parameters.jobName,
        Parameters.jobExecutionId,
        Parameters.subscriptionId
    ],
    queryParameters: [
        Parameters.apiVersion4
    ],
    headerParameters: [
        Parameters.acceptLanguage
    ],
    responses: {
        200: {
            bodyMapper: Mappers.JobExecution
        },
        201: {
            bodyMapper: Mappers.JobExecution
        },
        202: {},
        default: {
            bodyMapper: Mappers.CloudError
        }
    },
    serializer: serializer
};
var listByAgentNextOperationSpec = {
    httpMethod: "GET",
    baseUrl: "https://management.azure.com",
    path: "{nextLink}",
    urlParameters: [
        Parameters.nextPageLink
    ],
    headerParameters: [
        Parameters.acceptLanguage
    ],
    responses: {
        200: {
            bodyMapper: Mappers.JobExecutionListResult
        },
        default: {
            bodyMapper: Mappers.CloudError
        }
    },
    serializer: serializer
};
var listByJobNextOperationSpec = {
    httpMethod: "GET",
    baseUrl: "https://management.azure.com",
    path: "{nextLink}",
    urlParameters: [
        Parameters.nextPageLink
    ],
    headerParameters: [
        Parameters.acceptLanguage
    ],
    responses: {
        200: {
            bodyMapper: Mappers.JobExecutionListResult
        },
        default: {
            bodyMapper: Mappers.CloudError
        }
    },
    serializer: serializer
};
//# sourceMappingURL=jobExecutions.js.map