/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */
import { __assign } from "tslib";
import * as msRest from "@azure/ms-rest-js";
import * as Mappers from "../models/managedDatabaseSensitivityLabelsMappers";
import * as Parameters from "../models/parameters";
/** Class representing a ManagedDatabaseSensitivityLabels. */
var ManagedDatabaseSensitivityLabels = /** @class */ (function () {
    /**
     * Create a ManagedDatabaseSensitivityLabels.
     * @param {SqlManagementClientContext} client Reference to the service client.
     */
    function ManagedDatabaseSensitivityLabels(client) {
        this.client = client;
    }
    ManagedDatabaseSensitivityLabels.prototype.get = function (resourceGroupName, managedInstanceName, databaseName, schemaName, tableName, columnName, sensitivityLabelSource, options, callback) {
        return this.client.sendOperationRequest({
            resourceGroupName: resourceGroupName,
            managedInstanceName: managedInstanceName,
            databaseName: databaseName,
            schemaName: schemaName,
            tableName: tableName,
            columnName: columnName,
            sensitivityLabelSource: sensitivityLabelSource,
            options: options
        }, getOperationSpec, callback);
    };
    ManagedDatabaseSensitivityLabels.prototype.createOrUpdate = function (resourceGroupName, managedInstanceName, databaseName, schemaName, tableName, columnName, parameters, options, callback) {
        return this.client.sendOperationRequest({
            resourceGroupName: resourceGroupName,
            managedInstanceName: managedInstanceName,
            databaseName: databaseName,
            schemaName: schemaName,
            tableName: tableName,
            columnName: columnName,
            parameters: parameters,
            options: options
        }, createOrUpdateOperationSpec, callback);
    };
    ManagedDatabaseSensitivityLabels.prototype.deleteMethod = function (resourceGroupName, managedInstanceName, databaseName, schemaName, tableName, columnName, options, callback) {
        return this.client.sendOperationRequest({
            resourceGroupName: resourceGroupName,
            managedInstanceName: managedInstanceName,
            databaseName: databaseName,
            schemaName: schemaName,
            tableName: tableName,
            columnName: columnName,
            options: options
        }, deleteMethodOperationSpec, callback);
    };
    ManagedDatabaseSensitivityLabels.prototype.disableRecommendation = function (resourceGroupName, managedInstanceName, databaseName, schemaName, tableName, columnName, options, callback) {
        return this.client.sendOperationRequest({
            resourceGroupName: resourceGroupName,
            managedInstanceName: managedInstanceName,
            databaseName: databaseName,
            schemaName: schemaName,
            tableName: tableName,
            columnName: columnName,
            options: options
        }, disableRecommendationOperationSpec, callback);
    };
    ManagedDatabaseSensitivityLabels.prototype.enableRecommendation = function (resourceGroupName, managedInstanceName, databaseName, schemaName, tableName, columnName, options, callback) {
        return this.client.sendOperationRequest({
            resourceGroupName: resourceGroupName,
            managedInstanceName: managedInstanceName,
            databaseName: databaseName,
            schemaName: schemaName,
            tableName: tableName,
            columnName: columnName,
            options: options
        }, enableRecommendationOperationSpec, callback);
    };
    ManagedDatabaseSensitivityLabels.prototype.listCurrentByDatabase = function (resourceGroupName, managedInstanceName, databaseName, options, callback) {
        return this.client.sendOperationRequest({
            resourceGroupName: resourceGroupName,
            managedInstanceName: managedInstanceName,
            databaseName: databaseName,
            options: options
        }, listCurrentByDatabaseOperationSpec, callback);
    };
    ManagedDatabaseSensitivityLabels.prototype.listRecommendedByDatabase = function (resourceGroupName, managedInstanceName, databaseName, options, callback) {
        return this.client.sendOperationRequest({
            resourceGroupName: resourceGroupName,
            managedInstanceName: managedInstanceName,
            databaseName: databaseName,
            options: options
        }, listRecommendedByDatabaseOperationSpec, callback);
    };
    ManagedDatabaseSensitivityLabels.prototype.listCurrentByDatabaseNext = function (nextPageLink, options, callback) {
        return this.client.sendOperationRequest({
            nextPageLink: nextPageLink,
            options: options
        }, listCurrentByDatabaseNextOperationSpec, callback);
    };
    ManagedDatabaseSensitivityLabels.prototype.listRecommendedByDatabaseNext = function (nextPageLink, options, callback) {
        return this.client.sendOperationRequest({
            nextPageLink: nextPageLink,
            options: options
        }, listRecommendedByDatabaseNextOperationSpec, callback);
    };
    return ManagedDatabaseSensitivityLabels;
}());
export { ManagedDatabaseSensitivityLabels };
// Operation Specifications
var serializer = new msRest.Serializer(Mappers);
var getOperationSpec = {
    httpMethod: "GET",
    path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/managedInstances/{managedInstanceName}/databases/{databaseName}/schemas/{schemaName}/tables/{tableName}/columns/{columnName}/sensitivityLabels/{sensitivityLabelSource}",
    urlParameters: [
        Parameters.resourceGroupName,
        Parameters.managedInstanceName,
        Parameters.databaseName,
        Parameters.schemaName,
        Parameters.tableName,
        Parameters.columnName,
        Parameters.sensitivityLabelSource1,
        Parameters.subscriptionId
    ],
    queryParameters: [
        Parameters.apiVersion3
    ],
    headerParameters: [
        Parameters.acceptLanguage
    ],
    responses: {
        200: {
            bodyMapper: Mappers.SensitivityLabel
        },
        default: {
            bodyMapper: Mappers.CloudError
        }
    },
    serializer: serializer
};
var createOrUpdateOperationSpec = {
    httpMethod: "PUT",
    path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/managedInstances/{managedInstanceName}/databases/{databaseName}/schemas/{schemaName}/tables/{tableName}/columns/{columnName}/sensitivityLabels/{sensitivityLabelSource}",
    urlParameters: [
        Parameters.resourceGroupName,
        Parameters.managedInstanceName,
        Parameters.databaseName,
        Parameters.schemaName,
        Parameters.tableName,
        Parameters.columnName,
        Parameters.sensitivityLabelSource2,
        Parameters.subscriptionId
    ],
    queryParameters: [
        Parameters.apiVersion3
    ],
    headerParameters: [
        Parameters.acceptLanguage
    ],
    requestBody: {
        parameterPath: "parameters",
        mapper: __assign(__assign({}, Mappers.SensitivityLabel), { required: true })
    },
    responses: {
        200: {
            bodyMapper: Mappers.SensitivityLabel
        },
        201: {
            bodyMapper: Mappers.SensitivityLabel
        },
        default: {
            bodyMapper: Mappers.CloudError
        }
    },
    serializer: serializer
};
var deleteMethodOperationSpec = {
    httpMethod: "DELETE",
    path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/managedInstances/{managedInstanceName}/databases/{databaseName}/schemas/{schemaName}/tables/{tableName}/columns/{columnName}/sensitivityLabels/{sensitivityLabelSource}",
    urlParameters: [
        Parameters.resourceGroupName,
        Parameters.managedInstanceName,
        Parameters.databaseName,
        Parameters.schemaName,
        Parameters.tableName,
        Parameters.columnName,
        Parameters.sensitivityLabelSource2,
        Parameters.subscriptionId
    ],
    queryParameters: [
        Parameters.apiVersion3
    ],
    headerParameters: [
        Parameters.acceptLanguage
    ],
    responses: {
        200: {},
        default: {
            bodyMapper: Mappers.CloudError
        }
    },
    serializer: serializer
};
var disableRecommendationOperationSpec = {
    httpMethod: "POST",
    path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/managedInstances/{managedInstanceName}/databases/{databaseName}/schemas/{schemaName}/tables/{tableName}/columns/{columnName}/sensitivityLabels/{sensitivityLabelSource}/disable",
    urlParameters: [
        Parameters.resourceGroupName,
        Parameters.managedInstanceName,
        Parameters.databaseName,
        Parameters.schemaName,
        Parameters.tableName,
        Parameters.columnName,
        Parameters.sensitivityLabelSource0,
        Parameters.subscriptionId
    ],
    queryParameters: [
        Parameters.apiVersion3
    ],
    headerParameters: [
        Parameters.acceptLanguage
    ],
    responses: {
        200: {},
        default: {
            bodyMapper: Mappers.CloudError
        }
    },
    serializer: serializer
};
var enableRecommendationOperationSpec = {
    httpMethod: "POST",
    path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/managedInstances/{managedInstanceName}/databases/{databaseName}/schemas/{schemaName}/tables/{tableName}/columns/{columnName}/sensitivityLabels/{sensitivityLabelSource}/enable",
    urlParameters: [
        Parameters.resourceGroupName,
        Parameters.managedInstanceName,
        Parameters.databaseName,
        Parameters.schemaName,
        Parameters.tableName,
        Parameters.columnName,
        Parameters.sensitivityLabelSource0,
        Parameters.subscriptionId
    ],
    queryParameters: [
        Parameters.apiVersion3
    ],
    headerParameters: [
        Parameters.acceptLanguage
    ],
    responses: {
        200: {},
        default: {
            bodyMapper: Mappers.CloudError
        }
    },
    serializer: serializer
};
var listCurrentByDatabaseOperationSpec = {
    httpMethod: "GET",
    path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/managedInstances/{managedInstanceName}/databases/{databaseName}/currentSensitivityLabels",
    urlParameters: [
        Parameters.resourceGroupName,
        Parameters.managedInstanceName,
        Parameters.databaseName,
        Parameters.subscriptionId
    ],
    queryParameters: [
        Parameters.filter1,
        Parameters.apiVersion3
    ],
    headerParameters: [
        Parameters.acceptLanguage
    ],
    responses: {
        200: {
            bodyMapper: Mappers.SensitivityLabelListResult
        },
        default: {
            bodyMapper: Mappers.CloudError
        }
    },
    serializer: serializer
};
var listRecommendedByDatabaseOperationSpec = {
    httpMethod: "GET",
    path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/managedInstances/{managedInstanceName}/databases/{databaseName}/recommendedSensitivityLabels",
    urlParameters: [
        Parameters.resourceGroupName,
        Parameters.managedInstanceName,
        Parameters.databaseName,
        Parameters.subscriptionId
    ],
    queryParameters: [
        Parameters.includeDisabledRecommendations,
        Parameters.skipToken,
        Parameters.filter1,
        Parameters.apiVersion3
    ],
    headerParameters: [
        Parameters.acceptLanguage
    ],
    responses: {
        200: {
            bodyMapper: Mappers.SensitivityLabelListResult
        },
        default: {
            bodyMapper: Mappers.CloudError
        }
    },
    serializer: serializer
};
var listCurrentByDatabaseNextOperationSpec = {
    httpMethod: "GET",
    baseUrl: "https://management.azure.com",
    path: "{nextLink}",
    urlParameters: [
        Parameters.nextPageLink
    ],
    headerParameters: [
        Parameters.acceptLanguage
    ],
    responses: {
        200: {
            bodyMapper: Mappers.SensitivityLabelListResult
        },
        default: {
            bodyMapper: Mappers.CloudError
        }
    },
    serializer: serializer
};
var listRecommendedByDatabaseNextOperationSpec = {
    httpMethod: "GET",
    baseUrl: "https://management.azure.com",
    path: "{nextLink}",
    urlParameters: [
        Parameters.nextPageLink
    ],
    headerParameters: [
        Parameters.acceptLanguage
    ],
    responses: {
        200: {
            bodyMapper: Mappers.SensitivityLabelListResult
        },
        default: {
            bodyMapper: Mappers.CloudError
        }
    },
    serializer: serializer
};
//# sourceMappingURL=managedDatabaseSensitivityLabels.js.map