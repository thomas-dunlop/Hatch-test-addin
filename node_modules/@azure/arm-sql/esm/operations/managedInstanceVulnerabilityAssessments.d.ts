import * as msRest from "@azure/ms-rest-js";
import * as Models from "../models";
import { SqlManagementClientContext } from "../sqlManagementClientContext";
/** Class representing a ManagedInstanceVulnerabilityAssessments. */
export declare class ManagedInstanceVulnerabilityAssessments {
    private readonly client;
    /**
     * Create a ManagedInstanceVulnerabilityAssessments.
     * @param {SqlManagementClientContext} client Reference to the service client.
     */
    constructor(client: SqlManagementClientContext);
    /**
     * Gets the managed instance's vulnerability assessment.
     * @param resourceGroupName The name of the resource group that contains the resource. You can
     * obtain this value from the Azure Resource Manager API or the portal.
     * @param managedInstanceName The name of the managed instance for which the vulnerability
     * assessment is defined.
     * @param [options] The optional parameters
     * @returns Promise<Models.ManagedInstanceVulnerabilityAssessmentsGetResponse>
     */
    get(resourceGroupName: string, managedInstanceName: string, options?: msRest.RequestOptionsBase): Promise<Models.ManagedInstanceVulnerabilityAssessmentsGetResponse>;
    /**
     * @param resourceGroupName The name of the resource group that contains the resource. You can
     * obtain this value from the Azure Resource Manager API or the portal.
     * @param managedInstanceName The name of the managed instance for which the vulnerability
     * assessment is defined.
     * @param callback The callback
     */
    get(resourceGroupName: string, managedInstanceName: string, callback: msRest.ServiceCallback<Models.ManagedInstanceVulnerabilityAssessment>): void;
    /**
     * @param resourceGroupName The name of the resource group that contains the resource. You can
     * obtain this value from the Azure Resource Manager API or the portal.
     * @param managedInstanceName The name of the managed instance for which the vulnerability
     * assessment is defined.
     * @param options The optional parameters
     * @param callback The callback
     */
    get(resourceGroupName: string, managedInstanceName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.ManagedInstanceVulnerabilityAssessment>): void;
    /**
     * Creates or updates the managed instance's vulnerability assessment.
     * @param resourceGroupName The name of the resource group that contains the resource. You can
     * obtain this value from the Azure Resource Manager API or the portal.
     * @param managedInstanceName The name of the managed instance for which the vulnerability
     * assessment is defined.
     * @param parameters The requested resource.
     * @param [options] The optional parameters
     * @returns Promise<Models.ManagedInstanceVulnerabilityAssessmentsCreateOrUpdateResponse>
     */
    createOrUpdate(resourceGroupName: string, managedInstanceName: string, parameters: Models.ManagedInstanceVulnerabilityAssessment, options?: msRest.RequestOptionsBase): Promise<Models.ManagedInstanceVulnerabilityAssessmentsCreateOrUpdateResponse>;
    /**
     * @param resourceGroupName The name of the resource group that contains the resource. You can
     * obtain this value from the Azure Resource Manager API or the portal.
     * @param managedInstanceName The name of the managed instance for which the vulnerability
     * assessment is defined.
     * @param parameters The requested resource.
     * @param callback The callback
     */
    createOrUpdate(resourceGroupName: string, managedInstanceName: string, parameters: Models.ManagedInstanceVulnerabilityAssessment, callback: msRest.ServiceCallback<Models.ManagedInstanceVulnerabilityAssessment>): void;
    /**
     * @param resourceGroupName The name of the resource group that contains the resource. You can
     * obtain this value from the Azure Resource Manager API or the portal.
     * @param managedInstanceName The name of the managed instance for which the vulnerability
     * assessment is defined.
     * @param parameters The requested resource.
     * @param options The optional parameters
     * @param callback The callback
     */
    createOrUpdate(resourceGroupName: string, managedInstanceName: string, parameters: Models.ManagedInstanceVulnerabilityAssessment, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.ManagedInstanceVulnerabilityAssessment>): void;
    /**
     * Removes the managed instance's vulnerability assessment.
     * @param resourceGroupName The name of the resource group that contains the resource. You can
     * obtain this value from the Azure Resource Manager API or the portal.
     * @param managedInstanceName The name of the managed instance for which the vulnerability
     * assessment is defined.
     * @param [options] The optional parameters
     * @returns Promise<msRest.RestResponse>
     */
    deleteMethod(resourceGroupName: string, managedInstanceName: string, options?: msRest.RequestOptionsBase): Promise<msRest.RestResponse>;
    /**
     * @param resourceGroupName The name of the resource group that contains the resource. You can
     * obtain this value from the Azure Resource Manager API or the portal.
     * @param managedInstanceName The name of the managed instance for which the vulnerability
     * assessment is defined.
     * @param callback The callback
     */
    deleteMethod(resourceGroupName: string, managedInstanceName: string, callback: msRest.ServiceCallback<void>): void;
    /**
     * @param resourceGroupName The name of the resource group that contains the resource. You can
     * obtain this value from the Azure Resource Manager API or the portal.
     * @param managedInstanceName The name of the managed instance for which the vulnerability
     * assessment is defined.
     * @param options The optional parameters
     * @param callback The callback
     */
    deleteMethod(resourceGroupName: string, managedInstanceName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<void>): void;
    /**
     * Gets the managed instance's vulnerability assessment policies.
     * @param resourceGroupName The name of the resource group that contains the resource. You can
     * obtain this value from the Azure Resource Manager API or the portal.
     * @param managedInstanceName The name of the managed instance for which the vulnerability
     * assessments is defined.
     * @param [options] The optional parameters
     * @returns Promise<Models.ManagedInstanceVulnerabilityAssessmentsListByInstanceResponse>
     */
    listByInstance(resourceGroupName: string, managedInstanceName: string, options?: msRest.RequestOptionsBase): Promise<Models.ManagedInstanceVulnerabilityAssessmentsListByInstanceResponse>;
    /**
     * @param resourceGroupName The name of the resource group that contains the resource. You can
     * obtain this value from the Azure Resource Manager API or the portal.
     * @param managedInstanceName The name of the managed instance for which the vulnerability
     * assessments is defined.
     * @param callback The callback
     */
    listByInstance(resourceGroupName: string, managedInstanceName: string, callback: msRest.ServiceCallback<Models.ManagedInstanceVulnerabilityAssessmentListResult>): void;
    /**
     * @param resourceGroupName The name of the resource group that contains the resource. You can
     * obtain this value from the Azure Resource Manager API or the portal.
     * @param managedInstanceName The name of the managed instance for which the vulnerability
     * assessments is defined.
     * @param options The optional parameters
     * @param callback The callback
     */
    listByInstance(resourceGroupName: string, managedInstanceName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.ManagedInstanceVulnerabilityAssessmentListResult>): void;
    /**
     * Gets the managed instance's vulnerability assessment policies.
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param [options] The optional parameters
     * @returns Promise<Models.ManagedInstanceVulnerabilityAssessmentsListByInstanceNextResponse>
     */
    listByInstanceNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.ManagedInstanceVulnerabilityAssessmentsListByInstanceNextResponse>;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param callback The callback
     */
    listByInstanceNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.ManagedInstanceVulnerabilityAssessmentListResult>): void;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param options The optional parameters
     * @param callback The callback
     */
    listByInstanceNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.ManagedInstanceVulnerabilityAssessmentListResult>): void;
}
//# sourceMappingURL=managedInstanceVulnerabilityAssessments.d.ts.map