import * as msRest from "@azure/ms-rest-js";
import * as msRestAzure from "@azure/ms-rest-azure-js";
import * as Models from "../models";
import { SqlManagementClientContext } from "../sqlManagementClientContext";
/** Class representing a ServerBlobAuditingPolicies. */
export declare class ServerBlobAuditingPolicies {
    private readonly client;
    /**
     * Create a ServerBlobAuditingPolicies.
     * @param {SqlManagementClientContext} client Reference to the service client.
     */
    constructor(client: SqlManagementClientContext);
    /**
     * Gets a server's blob auditing policy.
     * @param resourceGroupName The name of the resource group that contains the resource. You can
     * obtain this value from the Azure Resource Manager API or the portal.
     * @param serverName The name of the server.
     * @param [options] The optional parameters
     * @returns Promise<Models.ServerBlobAuditingPoliciesGetResponse>
     */
    get(resourceGroupName: string, serverName: string, options?: msRest.RequestOptionsBase): Promise<Models.ServerBlobAuditingPoliciesGetResponse>;
    /**
     * @param resourceGroupName The name of the resource group that contains the resource. You can
     * obtain this value from the Azure Resource Manager API or the portal.
     * @param serverName The name of the server.
     * @param callback The callback
     */
    get(resourceGroupName: string, serverName: string, callback: msRest.ServiceCallback<Models.ServerBlobAuditingPolicy>): void;
    /**
     * @param resourceGroupName The name of the resource group that contains the resource. You can
     * obtain this value from the Azure Resource Manager API or the portal.
     * @param serverName The name of the server.
     * @param options The optional parameters
     * @param callback The callback
     */
    get(resourceGroupName: string, serverName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.ServerBlobAuditingPolicy>): void;
    /**
     * Creates or updates a server's blob auditing policy.
     * @param resourceGroupName The name of the resource group that contains the resource. You can
     * obtain this value from the Azure Resource Manager API or the portal.
     * @param serverName The name of the server.
     * @param parameters Properties of blob auditing policy
     * @param [options] The optional parameters
     * @returns Promise<Models.ServerBlobAuditingPoliciesCreateOrUpdateResponse>
     */
    createOrUpdate(resourceGroupName: string, serverName: string, parameters: Models.ServerBlobAuditingPolicy, options?: msRest.RequestOptionsBase): Promise<Models.ServerBlobAuditingPoliciesCreateOrUpdateResponse>;
    /**
     * Lists auditing settings of a server.
     * @param resourceGroupName The name of the resource group that contains the resource. You can
     * obtain this value from the Azure Resource Manager API or the portal.
     * @param serverName The name of the server.
     * @param [options] The optional parameters
     * @returns Promise<Models.ServerBlobAuditingPoliciesListByServerResponse>
     */
    listByServer(resourceGroupName: string, serverName: string, options?: msRest.RequestOptionsBase): Promise<Models.ServerBlobAuditingPoliciesListByServerResponse>;
    /**
     * @param resourceGroupName The name of the resource group that contains the resource. You can
     * obtain this value from the Azure Resource Manager API or the portal.
     * @param serverName The name of the server.
     * @param callback The callback
     */
    listByServer(resourceGroupName: string, serverName: string, callback: msRest.ServiceCallback<Models.ServerBlobAuditingPolicyListResult>): void;
    /**
     * @param resourceGroupName The name of the resource group that contains the resource. You can
     * obtain this value from the Azure Resource Manager API or the portal.
     * @param serverName The name of the server.
     * @param options The optional parameters
     * @param callback The callback
     */
    listByServer(resourceGroupName: string, serverName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.ServerBlobAuditingPolicyListResult>): void;
    /**
     * Creates or updates a server's blob auditing policy.
     * @param resourceGroupName The name of the resource group that contains the resource. You can
     * obtain this value from the Azure Resource Manager API or the portal.
     * @param serverName The name of the server.
     * @param parameters Properties of blob auditing policy
     * @param [options] The optional parameters
     * @returns Promise<msRestAzure.LROPoller>
     */
    beginCreateOrUpdate(resourceGroupName: string, serverName: string, parameters: Models.ServerBlobAuditingPolicy, options?: msRest.RequestOptionsBase): Promise<msRestAzure.LROPoller>;
    /**
     * Lists auditing settings of a server.
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param [options] The optional parameters
     * @returns Promise<Models.ServerBlobAuditingPoliciesListByServerNextResponse>
     */
    listByServerNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.ServerBlobAuditingPoliciesListByServerNextResponse>;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param callback The callback
     */
    listByServerNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.ServerBlobAuditingPolicyListResult>): void;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param options The optional parameters
     * @param callback The callback
     */
    listByServerNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.ServerBlobAuditingPolicyListResult>): void;
}
//# sourceMappingURL=serverBlobAuditingPolicies.d.ts.map