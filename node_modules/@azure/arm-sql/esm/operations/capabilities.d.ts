import * as msRest from "@azure/ms-rest-js";
import * as Models from "../models";
import { SqlManagementClientContext } from "../sqlManagementClientContext";
/** Class representing a Capabilities. */
export declare class Capabilities {
    private readonly client;
    /**
     * Create a Capabilities.
     * @param {SqlManagementClientContext} client Reference to the service client.
     */
    constructor(client: SqlManagementClientContext);
    /**
     * Gets the subscription capabilities available for the specified location.
     * @param locationName The location name whose capabilities are retrieved.
     * @param [options] The optional parameters
     * @returns Promise<Models.CapabilitiesListByLocationResponse>
     */
    listByLocation(locationName: string, options?: Models.CapabilitiesListByLocationOptionalParams): Promise<Models.CapabilitiesListByLocationResponse>;
    /**
     * @param locationName The location name whose capabilities are retrieved.
     * @param callback The callback
     */
    listByLocation(locationName: string, callback: msRest.ServiceCallback<Models.LocationCapabilities>): void;
    /**
     * @param locationName The location name whose capabilities are retrieved.
     * @param options The optional parameters
     * @param callback The callback
     */
    listByLocation(locationName: string, options: Models.CapabilitiesListByLocationOptionalParams, callback: msRest.ServiceCallback<Models.LocationCapabilities>): void;
}
//# sourceMappingURL=capabilities.d.ts.map