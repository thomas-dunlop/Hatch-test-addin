/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */
import * as msRest from "@azure/ms-rest-js";
import * as Mappers from "../models/subscriptionUsagesMappers";
import * as Parameters from "../models/parameters";
/** Class representing a SubscriptionUsages. */
var SubscriptionUsages = /** @class */ (function () {
    /**
     * Create a SubscriptionUsages.
     * @param {SqlManagementClientContext} client Reference to the service client.
     */
    function SubscriptionUsages(client) {
        this.client = client;
    }
    SubscriptionUsages.prototype.listByLocation = function (locationName, options, callback) {
        return this.client.sendOperationRequest({
            locationName: locationName,
            options: options
        }, listByLocationOperationSpec, callback);
    };
    SubscriptionUsages.prototype.get = function (locationName, usageName, options, callback) {
        return this.client.sendOperationRequest({
            locationName: locationName,
            usageName: usageName,
            options: options
        }, getOperationSpec, callback);
    };
    SubscriptionUsages.prototype.listByLocationNext = function (nextPageLink, options, callback) {
        return this.client.sendOperationRequest({
            nextPageLink: nextPageLink,
            options: options
        }, listByLocationNextOperationSpec, callback);
    };
    return SubscriptionUsages;
}());
export { SubscriptionUsages };
// Operation Specifications
var serializer = new msRest.Serializer(Mappers);
var listByLocationOperationSpec = {
    httpMethod: "GET",
    path: "subscriptions/{subscriptionId}/providers/Microsoft.Sql/locations/{locationName}/usages",
    urlParameters: [
        Parameters.locationName,
        Parameters.subscriptionId
    ],
    queryParameters: [
        Parameters.apiVersion1
    ],
    headerParameters: [
        Parameters.acceptLanguage
    ],
    responses: {
        200: {
            bodyMapper: Mappers.SubscriptionUsageListResult
        },
        default: {
            bodyMapper: Mappers.CloudError
        }
    },
    serializer: serializer
};
var getOperationSpec = {
    httpMethod: "GET",
    path: "subscriptions/{subscriptionId}/providers/Microsoft.Sql/locations/{locationName}/usages/{usageName}",
    urlParameters: [
        Parameters.locationName,
        Parameters.usageName,
        Parameters.subscriptionId
    ],
    queryParameters: [
        Parameters.apiVersion1
    ],
    headerParameters: [
        Parameters.acceptLanguage
    ],
    responses: {
        200: {
            bodyMapper: Mappers.SubscriptionUsage
        },
        default: {
            bodyMapper: Mappers.CloudError
        }
    },
    serializer: serializer
};
var listByLocationNextOperationSpec = {
    httpMethod: "GET",
    baseUrl: "https://management.azure.com",
    path: "{nextLink}",
    urlParameters: [
        Parameters.nextPageLink
    ],
    headerParameters: [
        Parameters.acceptLanguage
    ],
    responses: {
        200: {
            bodyMapper: Mappers.SubscriptionUsageListResult
        },
        default: {
            bodyMapper: Mappers.CloudError
        }
    },
    serializer: serializer
};
//# sourceMappingURL=subscriptionUsages.js.map