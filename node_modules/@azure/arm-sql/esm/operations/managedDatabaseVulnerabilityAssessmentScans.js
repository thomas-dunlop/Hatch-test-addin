/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */
import * as msRest from "@azure/ms-rest-js";
import * as Mappers from "../models/managedDatabaseVulnerabilityAssessmentScansMappers";
import * as Parameters from "../models/parameters";
/** Class representing a ManagedDatabaseVulnerabilityAssessmentScans. */
var ManagedDatabaseVulnerabilityAssessmentScans = /** @class */ (function () {
    /**
     * Create a ManagedDatabaseVulnerabilityAssessmentScans.
     * @param {SqlManagementClientContext} client Reference to the service client.
     */
    function ManagedDatabaseVulnerabilityAssessmentScans(client) {
        this.client = client;
    }
    ManagedDatabaseVulnerabilityAssessmentScans.prototype.listByDatabase = function (resourceGroupName, managedInstanceName, databaseName, options, callback) {
        return this.client.sendOperationRequest({
            resourceGroupName: resourceGroupName,
            managedInstanceName: managedInstanceName,
            databaseName: databaseName,
            options: options
        }, listByDatabaseOperationSpec, callback);
    };
    ManagedDatabaseVulnerabilityAssessmentScans.prototype.get = function (resourceGroupName, managedInstanceName, databaseName, scanId, options, callback) {
        return this.client.sendOperationRequest({
            resourceGroupName: resourceGroupName,
            managedInstanceName: managedInstanceName,
            databaseName: databaseName,
            scanId: scanId,
            options: options
        }, getOperationSpec, callback);
    };
    /**
     * Executes a Vulnerability Assessment database scan.
     * @param resourceGroupName The name of the resource group that contains the resource. You can
     * obtain this value from the Azure Resource Manager API or the portal.
     * @param managedInstanceName The name of the managed instance.
     * @param databaseName The name of the database.
     * @param scanId The vulnerability assessment scan Id of the scan to retrieve.
     * @param [options] The optional parameters
     * @returns Promise<msRest.RestResponse>
     */
    ManagedDatabaseVulnerabilityAssessmentScans.prototype.initiateScan = function (resourceGroupName, managedInstanceName, databaseName, scanId, options) {
        return this.beginInitiateScan(resourceGroupName, managedInstanceName, databaseName, scanId, options)
            .then(function (lroPoller) { return lroPoller.pollUntilFinished(); });
    };
    ManagedDatabaseVulnerabilityAssessmentScans.prototype.exportMethod = function (resourceGroupName, managedInstanceName, databaseName, scanId, options, callback) {
        return this.client.sendOperationRequest({
            resourceGroupName: resourceGroupName,
            managedInstanceName: managedInstanceName,
            databaseName: databaseName,
            scanId: scanId,
            options: options
        }, exportMethodOperationSpec, callback);
    };
    /**
     * Executes a Vulnerability Assessment database scan.
     * @param resourceGroupName The name of the resource group that contains the resource. You can
     * obtain this value from the Azure Resource Manager API or the portal.
     * @param managedInstanceName The name of the managed instance.
     * @param databaseName The name of the database.
     * @param scanId The vulnerability assessment scan Id of the scan to retrieve.
     * @param [options] The optional parameters
     * @returns Promise<msRestAzure.LROPoller>
     */
    ManagedDatabaseVulnerabilityAssessmentScans.prototype.beginInitiateScan = function (resourceGroupName, managedInstanceName, databaseName, scanId, options) {
        return this.client.sendLRORequest({
            resourceGroupName: resourceGroupName,
            managedInstanceName: managedInstanceName,
            databaseName: databaseName,
            scanId: scanId,
            options: options
        }, beginInitiateScanOperationSpec, options);
    };
    ManagedDatabaseVulnerabilityAssessmentScans.prototype.listByDatabaseNext = function (nextPageLink, options, callback) {
        return this.client.sendOperationRequest({
            nextPageLink: nextPageLink,
            options: options
        }, listByDatabaseNextOperationSpec, callback);
    };
    return ManagedDatabaseVulnerabilityAssessmentScans;
}());
export { ManagedDatabaseVulnerabilityAssessmentScans };
// Operation Specifications
var serializer = new msRest.Serializer(Mappers);
var listByDatabaseOperationSpec = {
    httpMethod: "GET",
    path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/managedInstances/{managedInstanceName}/databases/{databaseName}/vulnerabilityAssessments/{vulnerabilityAssessmentName}/scans",
    urlParameters: [
        Parameters.resourceGroupName,
        Parameters.managedInstanceName,
        Parameters.databaseName,
        Parameters.vulnerabilityAssessmentName,
        Parameters.subscriptionId
    ],
    queryParameters: [
        Parameters.apiVersion2
    ],
    headerParameters: [
        Parameters.acceptLanguage
    ],
    responses: {
        200: {
            bodyMapper: Mappers.VulnerabilityAssessmentScanRecordListResult
        },
        default: {
            bodyMapper: Mappers.CloudError
        }
    },
    serializer: serializer
};
var getOperationSpec = {
    httpMethod: "GET",
    path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/managedInstances/{managedInstanceName}/databases/{databaseName}/vulnerabilityAssessments/{vulnerabilityAssessmentName}/scans/{scanId}",
    urlParameters: [
        Parameters.resourceGroupName,
        Parameters.managedInstanceName,
        Parameters.databaseName,
        Parameters.vulnerabilityAssessmentName,
        Parameters.scanId,
        Parameters.subscriptionId
    ],
    queryParameters: [
        Parameters.apiVersion2
    ],
    headerParameters: [
        Parameters.acceptLanguage
    ],
    responses: {
        200: {
            bodyMapper: Mappers.VulnerabilityAssessmentScanRecord
        },
        default: {
            bodyMapper: Mappers.CloudError
        }
    },
    serializer: serializer
};
var exportMethodOperationSpec = {
    httpMethod: "POST",
    path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/managedInstances/{managedInstanceName}/databases/{databaseName}/vulnerabilityAssessments/{vulnerabilityAssessmentName}/scans/{scanId}/export",
    urlParameters: [
        Parameters.resourceGroupName,
        Parameters.managedInstanceName,
        Parameters.databaseName,
        Parameters.vulnerabilityAssessmentName,
        Parameters.scanId,
        Parameters.subscriptionId
    ],
    queryParameters: [
        Parameters.apiVersion2
    ],
    headerParameters: [
        Parameters.acceptLanguage
    ],
    responses: {
        200: {
            bodyMapper: Mappers.DatabaseVulnerabilityAssessmentScansExport
        },
        201: {
            bodyMapper: Mappers.DatabaseVulnerabilityAssessmentScansExport
        },
        default: {
            bodyMapper: Mappers.CloudError
        }
    },
    serializer: serializer
};
var beginInitiateScanOperationSpec = {
    httpMethod: "POST",
    path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/managedInstances/{managedInstanceName}/databases/{databaseName}/vulnerabilityAssessments/{vulnerabilityAssessmentName}/scans/{scanId}/initiateScan",
    urlParameters: [
        Parameters.resourceGroupName,
        Parameters.managedInstanceName,
        Parameters.databaseName,
        Parameters.vulnerabilityAssessmentName,
        Parameters.scanId,
        Parameters.subscriptionId
    ],
    queryParameters: [
        Parameters.apiVersion2
    ],
    headerParameters: [
        Parameters.acceptLanguage
    ],
    responses: {
        200: {},
        202: {},
        default: {
            bodyMapper: Mappers.CloudError
        }
    },
    serializer: serializer
};
var listByDatabaseNextOperationSpec = {
    httpMethod: "GET",
    baseUrl: "https://management.azure.com",
    path: "{nextLink}",
    urlParameters: [
        Parameters.nextPageLink
    ],
    headerParameters: [
        Parameters.acceptLanguage
    ],
    responses: {
        200: {
            bodyMapper: Mappers.VulnerabilityAssessmentScanRecordListResult
        },
        default: {
            bodyMapper: Mappers.CloudError
        }
    },
    serializer: serializer
};
//# sourceMappingURL=managedDatabaseVulnerabilityAssessmentScans.js.map