/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */
import { __assign } from "tslib";
import * as msRest from "@azure/ms-rest-js";
import * as Mappers from "../models/jobTargetGroupsMappers";
import * as Parameters from "../models/parameters";
/** Class representing a JobTargetGroups. */
var JobTargetGroups = /** @class */ (function () {
    /**
     * Create a JobTargetGroups.
     * @param {SqlManagementClientContext} client Reference to the service client.
     */
    function JobTargetGroups(client) {
        this.client = client;
    }
    JobTargetGroups.prototype.listByAgent = function (resourceGroupName, serverName, jobAgentName, options, callback) {
        return this.client.sendOperationRequest({
            resourceGroupName: resourceGroupName,
            serverName: serverName,
            jobAgentName: jobAgentName,
            options: options
        }, listByAgentOperationSpec, callback);
    };
    JobTargetGroups.prototype.get = function (resourceGroupName, serverName, jobAgentName, targetGroupName, options, callback) {
        return this.client.sendOperationRequest({
            resourceGroupName: resourceGroupName,
            serverName: serverName,
            jobAgentName: jobAgentName,
            targetGroupName: targetGroupName,
            options: options
        }, getOperationSpec, callback);
    };
    JobTargetGroups.prototype.createOrUpdate = function (resourceGroupName, serverName, jobAgentName, targetGroupName, parameters, options, callback) {
        return this.client.sendOperationRequest({
            resourceGroupName: resourceGroupName,
            serverName: serverName,
            jobAgentName: jobAgentName,
            targetGroupName: targetGroupName,
            parameters: parameters,
            options: options
        }, createOrUpdateOperationSpec, callback);
    };
    JobTargetGroups.prototype.deleteMethod = function (resourceGroupName, serverName, jobAgentName, targetGroupName, options, callback) {
        return this.client.sendOperationRequest({
            resourceGroupName: resourceGroupName,
            serverName: serverName,
            jobAgentName: jobAgentName,
            targetGroupName: targetGroupName,
            options: options
        }, deleteMethodOperationSpec, callback);
    };
    JobTargetGroups.prototype.listByAgentNext = function (nextPageLink, options, callback) {
        return this.client.sendOperationRequest({
            nextPageLink: nextPageLink,
            options: options
        }, listByAgentNextOperationSpec, callback);
    };
    return JobTargetGroups;
}());
export { JobTargetGroups };
// Operation Specifications
var serializer = new msRest.Serializer(Mappers);
var listByAgentOperationSpec = {
    httpMethod: "GET",
    path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/jobAgents/{jobAgentName}/targetGroups",
    urlParameters: [
        Parameters.resourceGroupName,
        Parameters.serverName,
        Parameters.jobAgentName,
        Parameters.subscriptionId
    ],
    queryParameters: [
        Parameters.apiVersion4
    ],
    headerParameters: [
        Parameters.acceptLanguage
    ],
    responses: {
        200: {
            bodyMapper: Mappers.JobTargetGroupListResult
        },
        default: {
            bodyMapper: Mappers.CloudError
        }
    },
    serializer: serializer
};
var getOperationSpec = {
    httpMethod: "GET",
    path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/jobAgents/{jobAgentName}/targetGroups/{targetGroupName}",
    urlParameters: [
        Parameters.resourceGroupName,
        Parameters.serverName,
        Parameters.jobAgentName,
        Parameters.targetGroupName,
        Parameters.subscriptionId
    ],
    queryParameters: [
        Parameters.apiVersion4
    ],
    headerParameters: [
        Parameters.acceptLanguage
    ],
    responses: {
        200: {
            bodyMapper: Mappers.JobTargetGroup
        },
        default: {
            bodyMapper: Mappers.CloudError
        }
    },
    serializer: serializer
};
var createOrUpdateOperationSpec = {
    httpMethod: "PUT",
    path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/jobAgents/{jobAgentName}/targetGroups/{targetGroupName}",
    urlParameters: [
        Parameters.resourceGroupName,
        Parameters.serverName,
        Parameters.jobAgentName,
        Parameters.targetGroupName,
        Parameters.subscriptionId
    ],
    queryParameters: [
        Parameters.apiVersion4
    ],
    headerParameters: [
        Parameters.acceptLanguage
    ],
    requestBody: {
        parameterPath: "parameters",
        mapper: __assign(__assign({}, Mappers.JobTargetGroup), { required: true })
    },
    responses: {
        200: {
            bodyMapper: Mappers.JobTargetGroup
        },
        201: {
            bodyMapper: Mappers.JobTargetGroup
        },
        default: {
            bodyMapper: Mappers.CloudError
        }
    },
    serializer: serializer
};
var deleteMethodOperationSpec = {
    httpMethod: "DELETE",
    path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/jobAgents/{jobAgentName}/targetGroups/{targetGroupName}",
    urlParameters: [
        Parameters.resourceGroupName,
        Parameters.serverName,
        Parameters.jobAgentName,
        Parameters.targetGroupName,
        Parameters.subscriptionId
    ],
    queryParameters: [
        Parameters.apiVersion4
    ],
    headerParameters: [
        Parameters.acceptLanguage
    ],
    responses: {
        200: {},
        204: {},
        default: {
            bodyMapper: Mappers.CloudError
        }
    },
    serializer: serializer
};
var listByAgentNextOperationSpec = {
    httpMethod: "GET",
    baseUrl: "https://management.azure.com",
    path: "{nextLink}",
    urlParameters: [
        Parameters.nextPageLink
    ],
    headerParameters: [
        Parameters.acceptLanguage
    ],
    responses: {
        200: {
            bodyMapper: Mappers.JobTargetGroupListResult
        },
        default: {
            bodyMapper: Mappers.CloudError
        }
    },
    serializer: serializer
};
//# sourceMappingURL=jobTargetGroups.js.map