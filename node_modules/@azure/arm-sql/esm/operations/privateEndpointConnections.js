/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */
import { __assign } from "tslib";
import * as msRest from "@azure/ms-rest-js";
import * as Mappers from "../models/privateEndpointConnectionsMappers";
import * as Parameters from "../models/parameters";
/** Class representing a PrivateEndpointConnections. */
var PrivateEndpointConnections = /** @class */ (function () {
    /**
     * Create a PrivateEndpointConnections.
     * @param {SqlManagementClientContext} client Reference to the service client.
     */
    function PrivateEndpointConnections(client) {
        this.client = client;
    }
    PrivateEndpointConnections.prototype.get = function (resourceGroupName, serverName, privateEndpointConnectionName, options, callback) {
        return this.client.sendOperationRequest({
            resourceGroupName: resourceGroupName,
            serverName: serverName,
            privateEndpointConnectionName: privateEndpointConnectionName,
            options: options
        }, getOperationSpec, callback);
    };
    /**
     * Approve or reject a private endpoint connection with a given name.
     * @param resourceGroupName The name of the resource group that contains the resource. You can
     * obtain this value from the Azure Resource Manager API or the portal.
     * @param serverName The name of the server.
     * @param privateEndpointConnectionName
     * @param parameters
     * @param [options] The optional parameters
     * @returns Promise<Models.PrivateEndpointConnectionsCreateOrUpdateResponse>
     */
    PrivateEndpointConnections.prototype.createOrUpdate = function (resourceGroupName, serverName, privateEndpointConnectionName, parameters, options) {
        return this.beginCreateOrUpdate(resourceGroupName, serverName, privateEndpointConnectionName, parameters, options)
            .then(function (lroPoller) { return lroPoller.pollUntilFinished(); });
    };
    /**
     * Deletes a private endpoint connection with a given name.
     * @param resourceGroupName The name of the resource group that contains the resource. You can
     * obtain this value from the Azure Resource Manager API or the portal.
     * @param serverName The name of the server.
     * @param privateEndpointConnectionName
     * @param [options] The optional parameters
     * @returns Promise<msRest.RestResponse>
     */
    PrivateEndpointConnections.prototype.deleteMethod = function (resourceGroupName, serverName, privateEndpointConnectionName, options) {
        return this.beginDeleteMethod(resourceGroupName, serverName, privateEndpointConnectionName, options)
            .then(function (lroPoller) { return lroPoller.pollUntilFinished(); });
    };
    PrivateEndpointConnections.prototype.listByServer = function (resourceGroupName, serverName, options, callback) {
        return this.client.sendOperationRequest({
            resourceGroupName: resourceGroupName,
            serverName: serverName,
            options: options
        }, listByServerOperationSpec, callback);
    };
    /**
     * Approve or reject a private endpoint connection with a given name.
     * @param resourceGroupName The name of the resource group that contains the resource. You can
     * obtain this value from the Azure Resource Manager API or the portal.
     * @param serverName The name of the server.
     * @param privateEndpointConnectionName
     * @param parameters
     * @param [options] The optional parameters
     * @returns Promise<msRestAzure.LROPoller>
     */
    PrivateEndpointConnections.prototype.beginCreateOrUpdate = function (resourceGroupName, serverName, privateEndpointConnectionName, parameters, options) {
        return this.client.sendLRORequest({
            resourceGroupName: resourceGroupName,
            serverName: serverName,
            privateEndpointConnectionName: privateEndpointConnectionName,
            parameters: parameters,
            options: options
        }, beginCreateOrUpdateOperationSpec, options);
    };
    /**
     * Deletes a private endpoint connection with a given name.
     * @param resourceGroupName The name of the resource group that contains the resource. You can
     * obtain this value from the Azure Resource Manager API or the portal.
     * @param serverName The name of the server.
     * @param privateEndpointConnectionName
     * @param [options] The optional parameters
     * @returns Promise<msRestAzure.LROPoller>
     */
    PrivateEndpointConnections.prototype.beginDeleteMethod = function (resourceGroupName, serverName, privateEndpointConnectionName, options) {
        return this.client.sendLRORequest({
            resourceGroupName: resourceGroupName,
            serverName: serverName,
            privateEndpointConnectionName: privateEndpointConnectionName,
            options: options
        }, beginDeleteMethodOperationSpec, options);
    };
    PrivateEndpointConnections.prototype.listByServerNext = function (nextPageLink, options, callback) {
        return this.client.sendOperationRequest({
            nextPageLink: nextPageLink,
            options: options
        }, listByServerNextOperationSpec, callback);
    };
    return PrivateEndpointConnections;
}());
export { PrivateEndpointConnections };
// Operation Specifications
var serializer = new msRest.Serializer(Mappers);
var getOperationSpec = {
    httpMethod: "GET",
    path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/privateEndpointConnections/{privateEndpointConnectionName}",
    urlParameters: [
        Parameters.resourceGroupName,
        Parameters.serverName,
        Parameters.privateEndpointConnectionName,
        Parameters.subscriptionId
    ],
    queryParameters: [
        Parameters.apiVersion3
    ],
    headerParameters: [
        Parameters.acceptLanguage
    ],
    responses: {
        200: {
            bodyMapper: Mappers.PrivateEndpointConnection
        },
        default: {
            bodyMapper: Mappers.CloudError
        }
    },
    serializer: serializer
};
var listByServerOperationSpec = {
    httpMethod: "GET",
    path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/privateEndpointConnections",
    urlParameters: [
        Parameters.resourceGroupName,
        Parameters.serverName,
        Parameters.subscriptionId
    ],
    queryParameters: [
        Parameters.apiVersion3
    ],
    headerParameters: [
        Parameters.acceptLanguage
    ],
    responses: {
        200: {
            bodyMapper: Mappers.PrivateEndpointConnectionListResult
        },
        default: {
            bodyMapper: Mappers.CloudError
        }
    },
    serializer: serializer
};
var beginCreateOrUpdateOperationSpec = {
    httpMethod: "PUT",
    path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/privateEndpointConnections/{privateEndpointConnectionName}",
    urlParameters: [
        Parameters.resourceGroupName,
        Parameters.serverName,
        Parameters.privateEndpointConnectionName,
        Parameters.subscriptionId
    ],
    queryParameters: [
        Parameters.apiVersion3
    ],
    headerParameters: [
        Parameters.acceptLanguage
    ],
    requestBody: {
        parameterPath: "parameters",
        mapper: __assign(__assign({}, Mappers.PrivateEndpointConnection), { required: true })
    },
    responses: {
        200: {
            bodyMapper: Mappers.PrivateEndpointConnection
        },
        202: {},
        default: {
            bodyMapper: Mappers.CloudError
        }
    },
    serializer: serializer
};
var beginDeleteMethodOperationSpec = {
    httpMethod: "DELETE",
    path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/privateEndpointConnections/{privateEndpointConnectionName}",
    urlParameters: [
        Parameters.resourceGroupName,
        Parameters.serverName,
        Parameters.privateEndpointConnectionName,
        Parameters.subscriptionId
    ],
    queryParameters: [
        Parameters.apiVersion3
    ],
    headerParameters: [
        Parameters.acceptLanguage
    ],
    responses: {
        200: {},
        202: {},
        204: {},
        default: {
            bodyMapper: Mappers.CloudError
        }
    },
    serializer: serializer
};
var listByServerNextOperationSpec = {
    httpMethod: "GET",
    baseUrl: "https://management.azure.com",
    path: "{nextLink}",
    urlParameters: [
        Parameters.nextPageLink
    ],
    headerParameters: [
        Parameters.acceptLanguage
    ],
    responses: {
        200: {
            bodyMapper: Mappers.PrivateEndpointConnectionListResult
        },
        default: {
            bodyMapper: Mappers.CloudError
        }
    },
    serializer: serializer
};
//# sourceMappingURL=privateEndpointConnections.js.map