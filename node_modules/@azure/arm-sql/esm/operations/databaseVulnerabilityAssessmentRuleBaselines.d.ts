import * as msRest from "@azure/ms-rest-js";
import * as Models from "../models";
import { SqlManagementClientContext } from "../sqlManagementClientContext";
/** Class representing a DatabaseVulnerabilityAssessmentRuleBaselines. */
export declare class DatabaseVulnerabilityAssessmentRuleBaselines {
    private readonly client;
    /**
     * Create a DatabaseVulnerabilityAssessmentRuleBaselines.
     * @param {SqlManagementClientContext} client Reference to the service client.
     */
    constructor(client: SqlManagementClientContext);
    /**
     * Gets a database's vulnerability assessment rule baseline.
     * @param resourceGroupName The name of the resource group that contains the resource. You can
     * obtain this value from the Azure Resource Manager API or the portal.
     * @param serverName The name of the server.
     * @param databaseName The name of the database for which the vulnerability assessment rule
     * baseline is defined.
     * @param ruleId The vulnerability assessment rule ID.
     * @param baselineName The name of the vulnerability assessment rule baseline (default implies a
     * baseline on a database level rule and master for server level rule). Possible values include:
     * 'master', 'default'
     * @param [options] The optional parameters
     * @returns Promise<Models.DatabaseVulnerabilityAssessmentRuleBaselinesGetResponse>
     */
    get(resourceGroupName: string, serverName: string, databaseName: string, ruleId: string, baselineName: Models.VulnerabilityAssessmentPolicyBaselineName, options?: msRest.RequestOptionsBase): Promise<Models.DatabaseVulnerabilityAssessmentRuleBaselinesGetResponse>;
    /**
     * @param resourceGroupName The name of the resource group that contains the resource. You can
     * obtain this value from the Azure Resource Manager API or the portal.
     * @param serverName The name of the server.
     * @param databaseName The name of the database for which the vulnerability assessment rule
     * baseline is defined.
     * @param ruleId The vulnerability assessment rule ID.
     * @param baselineName The name of the vulnerability assessment rule baseline (default implies a
     * baseline on a database level rule and master for server level rule). Possible values include:
     * 'master', 'default'
     * @param callback The callback
     */
    get(resourceGroupName: string, serverName: string, databaseName: string, ruleId: string, baselineName: Models.VulnerabilityAssessmentPolicyBaselineName, callback: msRest.ServiceCallback<Models.DatabaseVulnerabilityAssessmentRuleBaseline>): void;
    /**
     * @param resourceGroupName The name of the resource group that contains the resource. You can
     * obtain this value from the Azure Resource Manager API or the portal.
     * @param serverName The name of the server.
     * @param databaseName The name of the database for which the vulnerability assessment rule
     * baseline is defined.
     * @param ruleId The vulnerability assessment rule ID.
     * @param baselineName The name of the vulnerability assessment rule baseline (default implies a
     * baseline on a database level rule and master for server level rule). Possible values include:
     * 'master', 'default'
     * @param options The optional parameters
     * @param callback The callback
     */
    get(resourceGroupName: string, serverName: string, databaseName: string, ruleId: string, baselineName: Models.VulnerabilityAssessmentPolicyBaselineName, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.DatabaseVulnerabilityAssessmentRuleBaseline>): void;
    /**
     * Creates or updates a database's vulnerability assessment rule baseline.
     * @param resourceGroupName The name of the resource group that contains the resource. You can
     * obtain this value from the Azure Resource Manager API or the portal.
     * @param serverName The name of the server.
     * @param databaseName The name of the database for which the vulnerability assessment rule
     * baseline is defined.
     * @param ruleId The vulnerability assessment rule ID.
     * @param baselineName The name of the vulnerability assessment rule baseline (default implies a
     * baseline on a database level rule and master for server level rule). Possible values include:
     * 'master', 'default'
     * @param parameters The requested rule baseline resource.
     * @param [options] The optional parameters
     * @returns Promise<Models.DatabaseVulnerabilityAssessmentRuleBaselinesCreateOrUpdateResponse>
     */
    createOrUpdate(resourceGroupName: string, serverName: string, databaseName: string, ruleId: string, baselineName: Models.VulnerabilityAssessmentPolicyBaselineName, parameters: Models.DatabaseVulnerabilityAssessmentRuleBaseline, options?: msRest.RequestOptionsBase): Promise<Models.DatabaseVulnerabilityAssessmentRuleBaselinesCreateOrUpdateResponse>;
    /**
     * @param resourceGroupName The name of the resource group that contains the resource. You can
     * obtain this value from the Azure Resource Manager API or the portal.
     * @param serverName The name of the server.
     * @param databaseName The name of the database for which the vulnerability assessment rule
     * baseline is defined.
     * @param ruleId The vulnerability assessment rule ID.
     * @param baselineName The name of the vulnerability assessment rule baseline (default implies a
     * baseline on a database level rule and master for server level rule). Possible values include:
     * 'master', 'default'
     * @param parameters The requested rule baseline resource.
     * @param callback The callback
     */
    createOrUpdate(resourceGroupName: string, serverName: string, databaseName: string, ruleId: string, baselineName: Models.VulnerabilityAssessmentPolicyBaselineName, parameters: Models.DatabaseVulnerabilityAssessmentRuleBaseline, callback: msRest.ServiceCallback<Models.DatabaseVulnerabilityAssessmentRuleBaseline>): void;
    /**
     * @param resourceGroupName The name of the resource group that contains the resource. You can
     * obtain this value from the Azure Resource Manager API or the portal.
     * @param serverName The name of the server.
     * @param databaseName The name of the database for which the vulnerability assessment rule
     * baseline is defined.
     * @param ruleId The vulnerability assessment rule ID.
     * @param baselineName The name of the vulnerability assessment rule baseline (default implies a
     * baseline on a database level rule and master for server level rule). Possible values include:
     * 'master', 'default'
     * @param parameters The requested rule baseline resource.
     * @param options The optional parameters
     * @param callback The callback
     */
    createOrUpdate(resourceGroupName: string, serverName: string, databaseName: string, ruleId: string, baselineName: Models.VulnerabilityAssessmentPolicyBaselineName, parameters: Models.DatabaseVulnerabilityAssessmentRuleBaseline, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.DatabaseVulnerabilityAssessmentRuleBaseline>): void;
    /**
     * Removes the database's vulnerability assessment rule baseline.
     * @param resourceGroupName The name of the resource group that contains the resource. You can
     * obtain this value from the Azure Resource Manager API or the portal.
     * @param serverName The name of the server.
     * @param databaseName The name of the database for which the vulnerability assessment rule
     * baseline is defined.
     * @param ruleId The vulnerability assessment rule ID.
     * @param baselineName The name of the vulnerability assessment rule baseline (default implies a
     * baseline on a database level rule and master for server level rule). Possible values include:
     * 'master', 'default'
     * @param [options] The optional parameters
     * @returns Promise<msRest.RestResponse>
     */
    deleteMethod(resourceGroupName: string, serverName: string, databaseName: string, ruleId: string, baselineName: Models.VulnerabilityAssessmentPolicyBaselineName, options?: msRest.RequestOptionsBase): Promise<msRest.RestResponse>;
    /**
     * @param resourceGroupName The name of the resource group that contains the resource. You can
     * obtain this value from the Azure Resource Manager API or the portal.
     * @param serverName The name of the server.
     * @param databaseName The name of the database for which the vulnerability assessment rule
     * baseline is defined.
     * @param ruleId The vulnerability assessment rule ID.
     * @param baselineName The name of the vulnerability assessment rule baseline (default implies a
     * baseline on a database level rule and master for server level rule). Possible values include:
     * 'master', 'default'
     * @param callback The callback
     */
    deleteMethod(resourceGroupName: string, serverName: string, databaseName: string, ruleId: string, baselineName: Models.VulnerabilityAssessmentPolicyBaselineName, callback: msRest.ServiceCallback<void>): void;
    /**
     * @param resourceGroupName The name of the resource group that contains the resource. You can
     * obtain this value from the Azure Resource Manager API or the portal.
     * @param serverName The name of the server.
     * @param databaseName The name of the database for which the vulnerability assessment rule
     * baseline is defined.
     * @param ruleId The vulnerability assessment rule ID.
     * @param baselineName The name of the vulnerability assessment rule baseline (default implies a
     * baseline on a database level rule and master for server level rule). Possible values include:
     * 'master', 'default'
     * @param options The optional parameters
     * @param callback The callback
     */
    deleteMethod(resourceGroupName: string, serverName: string, databaseName: string, ruleId: string, baselineName: Models.VulnerabilityAssessmentPolicyBaselineName, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<void>): void;
}
//# sourceMappingURL=databaseVulnerabilityAssessmentRuleBaselines.d.ts.map