import * as msRest from "@azure/ms-rest-js";
import * as msRestAzure from "@azure/ms-rest-azure-js";
import * as Models from "../models";
import { SqlManagementClientContext } from "../sqlManagementClientContext";
/** Class representing a ManagedDatabaseVulnerabilityAssessmentScans. */
export declare class ManagedDatabaseVulnerabilityAssessmentScans {
    private readonly client;
    /**
     * Create a ManagedDatabaseVulnerabilityAssessmentScans.
     * @param {SqlManagementClientContext} client Reference to the service client.
     */
    constructor(client: SqlManagementClientContext);
    /**
     * Lists the vulnerability assessment scans of a database.
     * @param resourceGroupName The name of the resource group that contains the resource. You can
     * obtain this value from the Azure Resource Manager API or the portal.
     * @param managedInstanceName The name of the managed instance.
     * @param databaseName The name of the database.
     * @param [options] The optional parameters
     * @returns Promise<Models.ManagedDatabaseVulnerabilityAssessmentScansListByDatabaseResponse>
     */
    listByDatabase(resourceGroupName: string, managedInstanceName: string, databaseName: string, options?: msRest.RequestOptionsBase): Promise<Models.ManagedDatabaseVulnerabilityAssessmentScansListByDatabaseResponse>;
    /**
     * @param resourceGroupName The name of the resource group that contains the resource. You can
     * obtain this value from the Azure Resource Manager API or the portal.
     * @param managedInstanceName The name of the managed instance.
     * @param databaseName The name of the database.
     * @param callback The callback
     */
    listByDatabase(resourceGroupName: string, managedInstanceName: string, databaseName: string, callback: msRest.ServiceCallback<Models.VulnerabilityAssessmentScanRecordListResult>): void;
    /**
     * @param resourceGroupName The name of the resource group that contains the resource. You can
     * obtain this value from the Azure Resource Manager API or the portal.
     * @param managedInstanceName The name of the managed instance.
     * @param databaseName The name of the database.
     * @param options The optional parameters
     * @param callback The callback
     */
    listByDatabase(resourceGroupName: string, managedInstanceName: string, databaseName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.VulnerabilityAssessmentScanRecordListResult>): void;
    /**
     * Gets a vulnerability assessment scan record of a database.
     * @param resourceGroupName The name of the resource group that contains the resource. You can
     * obtain this value from the Azure Resource Manager API or the portal.
     * @param managedInstanceName The name of the managed instance.
     * @param databaseName The name of the database.
     * @param scanId The vulnerability assessment scan Id of the scan to retrieve.
     * @param [options] The optional parameters
     * @returns Promise<Models.ManagedDatabaseVulnerabilityAssessmentScansGetResponse>
     */
    get(resourceGroupName: string, managedInstanceName: string, databaseName: string, scanId: string, options?: msRest.RequestOptionsBase): Promise<Models.ManagedDatabaseVulnerabilityAssessmentScansGetResponse>;
    /**
     * @param resourceGroupName The name of the resource group that contains the resource. You can
     * obtain this value from the Azure Resource Manager API or the portal.
     * @param managedInstanceName The name of the managed instance.
     * @param databaseName The name of the database.
     * @param scanId The vulnerability assessment scan Id of the scan to retrieve.
     * @param callback The callback
     */
    get(resourceGroupName: string, managedInstanceName: string, databaseName: string, scanId: string, callback: msRest.ServiceCallback<Models.VulnerabilityAssessmentScanRecord>): void;
    /**
     * @param resourceGroupName The name of the resource group that contains the resource. You can
     * obtain this value from the Azure Resource Manager API or the portal.
     * @param managedInstanceName The name of the managed instance.
     * @param databaseName The name of the database.
     * @param scanId The vulnerability assessment scan Id of the scan to retrieve.
     * @param options The optional parameters
     * @param callback The callback
     */
    get(resourceGroupName: string, managedInstanceName: string, databaseName: string, scanId: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.VulnerabilityAssessmentScanRecord>): void;
    /**
     * Executes a Vulnerability Assessment database scan.
     * @param resourceGroupName The name of the resource group that contains the resource. You can
     * obtain this value from the Azure Resource Manager API or the portal.
     * @param managedInstanceName The name of the managed instance.
     * @param databaseName The name of the database.
     * @param scanId The vulnerability assessment scan Id of the scan to retrieve.
     * @param [options] The optional parameters
     * @returns Promise<msRest.RestResponse>
     */
    initiateScan(resourceGroupName: string, managedInstanceName: string, databaseName: string, scanId: string, options?: msRest.RequestOptionsBase): Promise<msRest.RestResponse>;
    /**
     * Convert an existing scan result to a human readable format. If already exists nothing happens
     * @param resourceGroupName The name of the resource group that contains the resource. You can
     * obtain this value from the Azure Resource Manager API or the portal.
     * @param managedInstanceName The name of the managed instance.
     * @param databaseName The name of the scanned database.
     * @param scanId The vulnerability assessment scan Id.
     * @param [options] The optional parameters
     * @returns Promise<Models.ManagedDatabaseVulnerabilityAssessmentScansExportMethodResponse>
     */
    exportMethod(resourceGroupName: string, managedInstanceName: string, databaseName: string, scanId: string, options?: msRest.RequestOptionsBase): Promise<Models.ManagedDatabaseVulnerabilityAssessmentScansExportMethodResponse>;
    /**
     * @param resourceGroupName The name of the resource group that contains the resource. You can
     * obtain this value from the Azure Resource Manager API or the portal.
     * @param managedInstanceName The name of the managed instance.
     * @param databaseName The name of the scanned database.
     * @param scanId The vulnerability assessment scan Id.
     * @param callback The callback
     */
    exportMethod(resourceGroupName: string, managedInstanceName: string, databaseName: string, scanId: string, callback: msRest.ServiceCallback<Models.DatabaseVulnerabilityAssessmentScansExport>): void;
    /**
     * @param resourceGroupName The name of the resource group that contains the resource. You can
     * obtain this value from the Azure Resource Manager API or the portal.
     * @param managedInstanceName The name of the managed instance.
     * @param databaseName The name of the scanned database.
     * @param scanId The vulnerability assessment scan Id.
     * @param options The optional parameters
     * @param callback The callback
     */
    exportMethod(resourceGroupName: string, managedInstanceName: string, databaseName: string, scanId: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.DatabaseVulnerabilityAssessmentScansExport>): void;
    /**
     * Executes a Vulnerability Assessment database scan.
     * @param resourceGroupName The name of the resource group that contains the resource. You can
     * obtain this value from the Azure Resource Manager API or the portal.
     * @param managedInstanceName The name of the managed instance.
     * @param databaseName The name of the database.
     * @param scanId The vulnerability assessment scan Id of the scan to retrieve.
     * @param [options] The optional parameters
     * @returns Promise<msRestAzure.LROPoller>
     */
    beginInitiateScan(resourceGroupName: string, managedInstanceName: string, databaseName: string, scanId: string, options?: msRest.RequestOptionsBase): Promise<msRestAzure.LROPoller>;
    /**
     * Lists the vulnerability assessment scans of a database.
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param [options] The optional parameters
     * @returns Promise<Models.ManagedDatabaseVulnerabilityAssessmentScansListByDatabaseNextResponse>
     */
    listByDatabaseNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.ManagedDatabaseVulnerabilityAssessmentScansListByDatabaseNextResponse>;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param callback The callback
     */
    listByDatabaseNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.VulnerabilityAssessmentScanRecordListResult>): void;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param options The optional parameters
     * @param callback The callback
     */
    listByDatabaseNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.VulnerabilityAssessmentScanRecordListResult>): void;
}
//# sourceMappingURL=managedDatabaseVulnerabilityAssessmentScans.d.ts.map