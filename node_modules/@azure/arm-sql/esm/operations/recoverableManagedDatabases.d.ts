import * as msRest from "@azure/ms-rest-js";
import * as Models from "../models";
import { SqlManagementClientContext } from "../sqlManagementClientContext";
/** Class representing a RecoverableManagedDatabases. */
export declare class RecoverableManagedDatabases {
    private readonly client;
    /**
     * Create a RecoverableManagedDatabases.
     * @param {SqlManagementClientContext} client Reference to the service client.
     */
    constructor(client: SqlManagementClientContext);
    /**
     * Gets a list of recoverable managed databases.
     * @param resourceGroupName The name of the resource group that contains the resource. You can
     * obtain this value from the Azure Resource Manager API or the portal.
     * @param managedInstanceName The name of the managed instance.
     * @param [options] The optional parameters
     * @returns Promise<Models.RecoverableManagedDatabasesListByInstanceResponse>
     */
    listByInstance(resourceGroupName: string, managedInstanceName: string, options?: msRest.RequestOptionsBase): Promise<Models.RecoverableManagedDatabasesListByInstanceResponse>;
    /**
     * @param resourceGroupName The name of the resource group that contains the resource. You can
     * obtain this value from the Azure Resource Manager API or the portal.
     * @param managedInstanceName The name of the managed instance.
     * @param callback The callback
     */
    listByInstance(resourceGroupName: string, managedInstanceName: string, callback: msRest.ServiceCallback<Models.RecoverableManagedDatabaseListResult>): void;
    /**
     * @param resourceGroupName The name of the resource group that contains the resource. You can
     * obtain this value from the Azure Resource Manager API or the portal.
     * @param managedInstanceName The name of the managed instance.
     * @param options The optional parameters
     * @param callback The callback
     */
    listByInstance(resourceGroupName: string, managedInstanceName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.RecoverableManagedDatabaseListResult>): void;
    /**
     * Gets a recoverable managed database.
     * @param resourceGroupName The name of the resource group that contains the resource. You can
     * obtain this value from the Azure Resource Manager API or the portal.
     * @param managedInstanceName The name of the managed instance.
     * @param recoverableDatabaseName
     * @param [options] The optional parameters
     * @returns Promise<Models.RecoverableManagedDatabasesGetResponse>
     */
    get(resourceGroupName: string, managedInstanceName: string, recoverableDatabaseName: string, options?: msRest.RequestOptionsBase): Promise<Models.RecoverableManagedDatabasesGetResponse>;
    /**
     * @param resourceGroupName The name of the resource group that contains the resource. You can
     * obtain this value from the Azure Resource Manager API or the portal.
     * @param managedInstanceName The name of the managed instance.
     * @param recoverableDatabaseName
     * @param callback The callback
     */
    get(resourceGroupName: string, managedInstanceName: string, recoverableDatabaseName: string, callback: msRest.ServiceCallback<Models.RecoverableManagedDatabase>): void;
    /**
     * @param resourceGroupName The name of the resource group that contains the resource. You can
     * obtain this value from the Azure Resource Manager API or the portal.
     * @param managedInstanceName The name of the managed instance.
     * @param recoverableDatabaseName
     * @param options The optional parameters
     * @param callback The callback
     */
    get(resourceGroupName: string, managedInstanceName: string, recoverableDatabaseName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.RecoverableManagedDatabase>): void;
    /**
     * Gets a list of recoverable managed databases.
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param [options] The optional parameters
     * @returns Promise<Models.RecoverableManagedDatabasesListByInstanceNextResponse>
     */
    listByInstanceNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.RecoverableManagedDatabasesListByInstanceNextResponse>;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param callback The callback
     */
    listByInstanceNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.RecoverableManagedDatabaseListResult>): void;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param options The optional parameters
     * @param callback The callback
     */
    listByInstanceNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.RecoverableManagedDatabaseListResult>): void;
}
//# sourceMappingURL=recoverableManagedDatabases.d.ts.map