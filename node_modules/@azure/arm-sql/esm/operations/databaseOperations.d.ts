import * as msRest from "@azure/ms-rest-js";
import * as Models from "../models";
import { SqlManagementClientContext } from "../sqlManagementClientContext";
/** Class representing a DatabaseOperations. */
export declare class DatabaseOperations {
    private readonly client;
    /**
     * Create a DatabaseOperations.
     * @param {SqlManagementClientContext} client Reference to the service client.
     */
    constructor(client: SqlManagementClientContext);
    /**
     * Cancels the asynchronous operation on the database.
     * @param resourceGroupName The name of the resource group that contains the resource. You can
     * obtain this value from the Azure Resource Manager API or the portal.
     * @param serverName The name of the server.
     * @param databaseName The name of the database.
     * @param operationId The operation identifier.
     * @param [options] The optional parameters
     * @returns Promise<msRest.RestResponse>
     */
    cancel(resourceGroupName: string, serverName: string, databaseName: string, operationId: string, options?: msRest.RequestOptionsBase): Promise<msRest.RestResponse>;
    /**
     * @param resourceGroupName The name of the resource group that contains the resource. You can
     * obtain this value from the Azure Resource Manager API or the portal.
     * @param serverName The name of the server.
     * @param databaseName The name of the database.
     * @param operationId The operation identifier.
     * @param callback The callback
     */
    cancel(resourceGroupName: string, serverName: string, databaseName: string, operationId: string, callback: msRest.ServiceCallback<void>): void;
    /**
     * @param resourceGroupName The name of the resource group that contains the resource. You can
     * obtain this value from the Azure Resource Manager API or the portal.
     * @param serverName The name of the server.
     * @param databaseName The name of the database.
     * @param operationId The operation identifier.
     * @param options The optional parameters
     * @param callback The callback
     */
    cancel(resourceGroupName: string, serverName: string, databaseName: string, operationId: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<void>): void;
    /**
     * Gets a list of operations performed on the database.
     * @param resourceGroupName The name of the resource group that contains the resource. You can
     * obtain this value from the Azure Resource Manager API or the portal.
     * @param serverName The name of the server.
     * @param databaseName The name of the database.
     * @param [options] The optional parameters
     * @returns Promise<Models.DatabaseOperationsListByDatabaseResponse>
     */
    listByDatabase(resourceGroupName: string, serverName: string, databaseName: string, options?: msRest.RequestOptionsBase): Promise<Models.DatabaseOperationsListByDatabaseResponse>;
    /**
     * @param resourceGroupName The name of the resource group that contains the resource. You can
     * obtain this value from the Azure Resource Manager API or the portal.
     * @param serverName The name of the server.
     * @param databaseName The name of the database.
     * @param callback The callback
     */
    listByDatabase(resourceGroupName: string, serverName: string, databaseName: string, callback: msRest.ServiceCallback<Models.DatabaseOperationListResult>): void;
    /**
     * @param resourceGroupName The name of the resource group that contains the resource. You can
     * obtain this value from the Azure Resource Manager API or the portal.
     * @param serverName The name of the server.
     * @param databaseName The name of the database.
     * @param options The optional parameters
     * @param callback The callback
     */
    listByDatabase(resourceGroupName: string, serverName: string, databaseName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.DatabaseOperationListResult>): void;
    /**
     * Gets a list of operations performed on the database.
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param [options] The optional parameters
     * @returns Promise<Models.DatabaseOperationsListByDatabaseNextResponse>
     */
    listByDatabaseNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.DatabaseOperationsListByDatabaseNextResponse>;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param callback The callback
     */
    listByDatabaseNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.DatabaseOperationListResult>): void;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param options The optional parameters
     * @param callback The callback
     */
    listByDatabaseNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.DatabaseOperationListResult>): void;
}
//# sourceMappingURL=databaseOperations.d.ts.map