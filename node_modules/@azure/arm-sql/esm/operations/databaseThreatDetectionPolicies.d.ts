import * as msRest from "@azure/ms-rest-js";
import * as Models from "../models";
import { SqlManagementClientContext } from "../sqlManagementClientContext";
/** Class representing a DatabaseThreatDetectionPolicies. */
export declare class DatabaseThreatDetectionPolicies {
    private readonly client;
    /**
     * Create a DatabaseThreatDetectionPolicies.
     * @param {SqlManagementClientContext} client Reference to the service client.
     */
    constructor(client: SqlManagementClientContext);
    /**
     * Gets a database's threat detection policy.
     * @param resourceGroupName The name of the resource group that contains the resource. You can
     * obtain this value from the Azure Resource Manager API or the portal.
     * @param serverName The name of the server.
     * @param databaseName The name of the database for which database Threat Detection policy is
     * defined.
     * @param [options] The optional parameters
     * @returns Promise<Models.DatabaseThreatDetectionPoliciesGetResponse>
     */
    get(resourceGroupName: string, serverName: string, databaseName: string, options?: msRest.RequestOptionsBase): Promise<Models.DatabaseThreatDetectionPoliciesGetResponse>;
    /**
     * @param resourceGroupName The name of the resource group that contains the resource. You can
     * obtain this value from the Azure Resource Manager API or the portal.
     * @param serverName The name of the server.
     * @param databaseName The name of the database for which database Threat Detection policy is
     * defined.
     * @param callback The callback
     */
    get(resourceGroupName: string, serverName: string, databaseName: string, callback: msRest.ServiceCallback<Models.DatabaseSecurityAlertPolicy>): void;
    /**
     * @param resourceGroupName The name of the resource group that contains the resource. You can
     * obtain this value from the Azure Resource Manager API or the portal.
     * @param serverName The name of the server.
     * @param databaseName The name of the database for which database Threat Detection policy is
     * defined.
     * @param options The optional parameters
     * @param callback The callback
     */
    get(resourceGroupName: string, serverName: string, databaseName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.DatabaseSecurityAlertPolicy>): void;
    /**
     * Creates or updates a database's threat detection policy.
     * @param resourceGroupName The name of the resource group that contains the resource. You can
     * obtain this value from the Azure Resource Manager API or the portal.
     * @param serverName The name of the server.
     * @param databaseName The name of the database for which database Threat Detection policy is
     * defined.
     * @param parameters The database Threat Detection policy.
     * @param [options] The optional parameters
     * @returns Promise<Models.DatabaseThreatDetectionPoliciesCreateOrUpdateResponse>
     */
    createOrUpdate(resourceGroupName: string, serverName: string, databaseName: string, parameters: Models.DatabaseSecurityAlertPolicy, options?: msRest.RequestOptionsBase): Promise<Models.DatabaseThreatDetectionPoliciesCreateOrUpdateResponse>;
    /**
     * @param resourceGroupName The name of the resource group that contains the resource. You can
     * obtain this value from the Azure Resource Manager API or the portal.
     * @param serverName The name of the server.
     * @param databaseName The name of the database for which database Threat Detection policy is
     * defined.
     * @param parameters The database Threat Detection policy.
     * @param callback The callback
     */
    createOrUpdate(resourceGroupName: string, serverName: string, databaseName: string, parameters: Models.DatabaseSecurityAlertPolicy, callback: msRest.ServiceCallback<Models.DatabaseSecurityAlertPolicy>): void;
    /**
     * @param resourceGroupName The name of the resource group that contains the resource. You can
     * obtain this value from the Azure Resource Manager API or the portal.
     * @param serverName The name of the server.
     * @param databaseName The name of the database for which database Threat Detection policy is
     * defined.
     * @param parameters The database Threat Detection policy.
     * @param options The optional parameters
     * @param callback The callback
     */
    createOrUpdate(resourceGroupName: string, serverName: string, databaseName: string, parameters: Models.DatabaseSecurityAlertPolicy, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.DatabaseSecurityAlertPolicy>): void;
}
//# sourceMappingURL=databaseThreatDetectionPolicies.d.ts.map