import * as msRest from "@azure/ms-rest-js";
import * as Models from "../models";
import { SqlManagementClientContext } from "../sqlManagementClientContext";
/** Class representing a JobCredentials. */
export declare class JobCredentials {
    private readonly client;
    /**
     * Create a JobCredentials.
     * @param {SqlManagementClientContext} client Reference to the service client.
     */
    constructor(client: SqlManagementClientContext);
    /**
     * Gets a list of jobs credentials.
     * @param resourceGroupName The name of the resource group that contains the resource. You can
     * obtain this value from the Azure Resource Manager API or the portal.
     * @param serverName The name of the server.
     * @param jobAgentName The name of the job agent.
     * @param [options] The optional parameters
     * @returns Promise<Models.JobCredentialsListByAgentResponse>
     */
    listByAgent(resourceGroupName: string, serverName: string, jobAgentName: string, options?: msRest.RequestOptionsBase): Promise<Models.JobCredentialsListByAgentResponse>;
    /**
     * @param resourceGroupName The name of the resource group that contains the resource. You can
     * obtain this value from the Azure Resource Manager API or the portal.
     * @param serverName The name of the server.
     * @param jobAgentName The name of the job agent.
     * @param callback The callback
     */
    listByAgent(resourceGroupName: string, serverName: string, jobAgentName: string, callback: msRest.ServiceCallback<Models.JobCredentialListResult>): void;
    /**
     * @param resourceGroupName The name of the resource group that contains the resource. You can
     * obtain this value from the Azure Resource Manager API or the portal.
     * @param serverName The name of the server.
     * @param jobAgentName The name of the job agent.
     * @param options The optional parameters
     * @param callback The callback
     */
    listByAgent(resourceGroupName: string, serverName: string, jobAgentName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.JobCredentialListResult>): void;
    /**
     * Gets a jobs credential.
     * @param resourceGroupName The name of the resource group that contains the resource. You can
     * obtain this value from the Azure Resource Manager API or the portal.
     * @param serverName The name of the server.
     * @param jobAgentName The name of the job agent.
     * @param credentialName The name of the credential.
     * @param [options] The optional parameters
     * @returns Promise<Models.JobCredentialsGetResponse>
     */
    get(resourceGroupName: string, serverName: string, jobAgentName: string, credentialName: string, options?: msRest.RequestOptionsBase): Promise<Models.JobCredentialsGetResponse>;
    /**
     * @param resourceGroupName The name of the resource group that contains the resource. You can
     * obtain this value from the Azure Resource Manager API or the portal.
     * @param serverName The name of the server.
     * @param jobAgentName The name of the job agent.
     * @param credentialName The name of the credential.
     * @param callback The callback
     */
    get(resourceGroupName: string, serverName: string, jobAgentName: string, credentialName: string, callback: msRest.ServiceCallback<Models.JobCredential>): void;
    /**
     * @param resourceGroupName The name of the resource group that contains the resource. You can
     * obtain this value from the Azure Resource Manager API or the portal.
     * @param serverName The name of the server.
     * @param jobAgentName The name of the job agent.
     * @param credentialName The name of the credential.
     * @param options The optional parameters
     * @param callback The callback
     */
    get(resourceGroupName: string, serverName: string, jobAgentName: string, credentialName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.JobCredential>): void;
    /**
     * Creates or updates a job credential.
     * @param resourceGroupName The name of the resource group that contains the resource. You can
     * obtain this value from the Azure Resource Manager API or the portal.
     * @param serverName The name of the server.
     * @param jobAgentName The name of the job agent.
     * @param credentialName The name of the credential.
     * @param parameters The requested job credential state.
     * @param [options] The optional parameters
     * @returns Promise<Models.JobCredentialsCreateOrUpdateResponse>
     */
    createOrUpdate(resourceGroupName: string, serverName: string, jobAgentName: string, credentialName: string, parameters: Models.JobCredential, options?: msRest.RequestOptionsBase): Promise<Models.JobCredentialsCreateOrUpdateResponse>;
    /**
     * @param resourceGroupName The name of the resource group that contains the resource. You can
     * obtain this value from the Azure Resource Manager API or the portal.
     * @param serverName The name of the server.
     * @param jobAgentName The name of the job agent.
     * @param credentialName The name of the credential.
     * @param parameters The requested job credential state.
     * @param callback The callback
     */
    createOrUpdate(resourceGroupName: string, serverName: string, jobAgentName: string, credentialName: string, parameters: Models.JobCredential, callback: msRest.ServiceCallback<Models.JobCredential>): void;
    /**
     * @param resourceGroupName The name of the resource group that contains the resource. You can
     * obtain this value from the Azure Resource Manager API or the portal.
     * @param serverName The name of the server.
     * @param jobAgentName The name of the job agent.
     * @param credentialName The name of the credential.
     * @param parameters The requested job credential state.
     * @param options The optional parameters
     * @param callback The callback
     */
    createOrUpdate(resourceGroupName: string, serverName: string, jobAgentName: string, credentialName: string, parameters: Models.JobCredential, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.JobCredential>): void;
    /**
     * Deletes a job credential.
     * @param resourceGroupName The name of the resource group that contains the resource. You can
     * obtain this value from the Azure Resource Manager API or the portal.
     * @param serverName The name of the server.
     * @param jobAgentName The name of the job agent.
     * @param credentialName The name of the credential.
     * @param [options] The optional parameters
     * @returns Promise<msRest.RestResponse>
     */
    deleteMethod(resourceGroupName: string, serverName: string, jobAgentName: string, credentialName: string, options?: msRest.RequestOptionsBase): Promise<msRest.RestResponse>;
    /**
     * @param resourceGroupName The name of the resource group that contains the resource. You can
     * obtain this value from the Azure Resource Manager API or the portal.
     * @param serverName The name of the server.
     * @param jobAgentName The name of the job agent.
     * @param credentialName The name of the credential.
     * @param callback The callback
     */
    deleteMethod(resourceGroupName: string, serverName: string, jobAgentName: string, credentialName: string, callback: msRest.ServiceCallback<void>): void;
    /**
     * @param resourceGroupName The name of the resource group that contains the resource. You can
     * obtain this value from the Azure Resource Manager API or the portal.
     * @param serverName The name of the server.
     * @param jobAgentName The name of the job agent.
     * @param credentialName The name of the credential.
     * @param options The optional parameters
     * @param callback The callback
     */
    deleteMethod(resourceGroupName: string, serverName: string, jobAgentName: string, credentialName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<void>): void;
    /**
     * Gets a list of jobs credentials.
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param [options] The optional parameters
     * @returns Promise<Models.JobCredentialsListByAgentNextResponse>
     */
    listByAgentNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.JobCredentialsListByAgentNextResponse>;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param callback The callback
     */
    listByAgentNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.JobCredentialListResult>): void;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param options The optional parameters
     * @param callback The callback
     */
    listByAgentNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.JobCredentialListResult>): void;
}
//# sourceMappingURL=jobCredentials.d.ts.map