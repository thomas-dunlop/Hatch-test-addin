import * as msRest from "@azure/ms-rest-js";
import * as Models from "../models";
import { StorageManagementClientContext } from "../storageManagementClientContext";
/** Class representing a DeletedAccounts. */
export declare class DeletedAccounts {
    private readonly client;
    /**
     * Create a DeletedAccounts.
     * @param {StorageManagementClientContext} client Reference to the service client.
     */
    constructor(client: StorageManagementClientContext);
    /**
     * Lists deleted accounts under the subscription.
     * @param [options] The optional parameters
     * @returns Promise<Models.DeletedAccountsListResponse>
     */
    list(options?: msRest.RequestOptionsBase): Promise<Models.DeletedAccountsListResponse>;
    /**
     * @param callback The callback
     */
    list(callback: msRest.ServiceCallback<Models.DeletedAccountListResult>): void;
    /**
     * @param options The optional parameters
     * @param callback The callback
     */
    list(options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.DeletedAccountListResult>): void;
    /**
     * Get properties of specified deleted account resource.
     * @param deletedAccountName Name of the deleted storage account.
     * @param location The location of the deleted storage account.
     * @param [options] The optional parameters
     * @returns Promise<Models.DeletedAccountsGetResponse>
     */
    get(deletedAccountName: string, location: string, options?: msRest.RequestOptionsBase): Promise<Models.DeletedAccountsGetResponse>;
    /**
     * @param deletedAccountName Name of the deleted storage account.
     * @param location The location of the deleted storage account.
     * @param callback The callback
     */
    get(deletedAccountName: string, location: string, callback: msRest.ServiceCallback<Models.DeletedAccount>): void;
    /**
     * @param deletedAccountName Name of the deleted storage account.
     * @param location The location of the deleted storage account.
     * @param options The optional parameters
     * @param callback The callback
     */
    get(deletedAccountName: string, location: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.DeletedAccount>): void;
    /**
     * Lists deleted accounts under the subscription.
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param [options] The optional parameters
     * @returns Promise<Models.DeletedAccountsListNextResponse>
     */
    listNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.DeletedAccountsListNextResponse>;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param callback The callback
     */
    listNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.DeletedAccountListResult>): void;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param options The optional parameters
     * @param callback The callback
     */
    listNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.DeletedAccountListResult>): void;
}
//# sourceMappingURL=deletedAccounts.d.ts.map