/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */
import { __assign } from "tslib";
import * as msRest from "@azure/ms-rest-js";
import * as Mappers from "../models/blobInventoryPoliciesMappers";
import * as Parameters from "../models/parameters";
/** Class representing a BlobInventoryPolicies. */
var BlobInventoryPolicies = /** @class */ (function () {
    /**
     * Create a BlobInventoryPolicies.
     * @param {StorageManagementClientContext} client Reference to the service client.
     */
    function BlobInventoryPolicies(client) {
        this.client = client;
    }
    BlobInventoryPolicies.prototype.get = function (resourceGroupName, accountName, options, callback) {
        return this.client.sendOperationRequest({
            resourceGroupName: resourceGroupName,
            accountName: accountName,
            options: options
        }, getOperationSpec, callback);
    };
    BlobInventoryPolicies.prototype.createOrUpdate = function (resourceGroupName, accountName, policy, options, callback) {
        return this.client.sendOperationRequest({
            resourceGroupName: resourceGroupName,
            accountName: accountName,
            policy: policy,
            options: options
        }, createOrUpdateOperationSpec, callback);
    };
    BlobInventoryPolicies.prototype.deleteMethod = function (resourceGroupName, accountName, options, callback) {
        return this.client.sendOperationRequest({
            resourceGroupName: resourceGroupName,
            accountName: accountName,
            options: options
        }, deleteMethodOperationSpec, callback);
    };
    BlobInventoryPolicies.prototype.list = function (resourceGroupName, accountName, options, callback) {
        return this.client.sendOperationRequest({
            resourceGroupName: resourceGroupName,
            accountName: accountName,
            options: options
        }, listOperationSpec, callback);
    };
    return BlobInventoryPolicies;
}());
export { BlobInventoryPolicies };
// Operation Specifications
var serializer = new msRest.Serializer(Mappers);
var getOperationSpec = {
    httpMethod: "GET",
    path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/inventoryPolicies/{blobInventoryPolicyName}",
    urlParameters: [
        Parameters.resourceGroupName,
        Parameters.accountName,
        Parameters.subscriptionId,
        Parameters.blobInventoryPolicyName
    ],
    queryParameters: [
        Parameters.apiVersion
    ],
    headerParameters: [
        Parameters.acceptLanguage
    ],
    responses: {
        200: {
            bodyMapper: Mappers.BlobInventoryPolicy
        },
        default: {
            bodyMapper: Mappers.ErrorResponse
        }
    },
    serializer: serializer
};
var createOrUpdateOperationSpec = {
    httpMethod: "PUT",
    path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/inventoryPolicies/{blobInventoryPolicyName}",
    urlParameters: [
        Parameters.resourceGroupName,
        Parameters.accountName,
        Parameters.subscriptionId,
        Parameters.blobInventoryPolicyName
    ],
    queryParameters: [
        Parameters.apiVersion
    ],
    headerParameters: [
        Parameters.acceptLanguage
    ],
    requestBody: {
        parameterPath: {
            policy: "policy",
            systemData: [
                "options",
                "systemData"
            ]
        },
        mapper: __assign(__assign({}, Mappers.BlobInventoryPolicy), { required: true })
    },
    responses: {
        200: {
            bodyMapper: Mappers.BlobInventoryPolicy
        },
        default: {
            bodyMapper: Mappers.ErrorResponse
        }
    },
    serializer: serializer
};
var deleteMethodOperationSpec = {
    httpMethod: "DELETE",
    path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/inventoryPolicies/{blobInventoryPolicyName}",
    urlParameters: [
        Parameters.resourceGroupName,
        Parameters.accountName,
        Parameters.subscriptionId,
        Parameters.blobInventoryPolicyName
    ],
    queryParameters: [
        Parameters.apiVersion
    ],
    headerParameters: [
        Parameters.acceptLanguage
    ],
    responses: {
        200: {},
        204: {},
        default: {
            bodyMapper: Mappers.ErrorResponse
        }
    },
    serializer: serializer
};
var listOperationSpec = {
    httpMethod: "GET",
    path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/inventoryPolicies",
    urlParameters: [
        Parameters.resourceGroupName,
        Parameters.accountName,
        Parameters.subscriptionId
    ],
    queryParameters: [
        Parameters.apiVersion
    ],
    headerParameters: [
        Parameters.acceptLanguage
    ],
    responses: {
        200: {
            bodyMapper: Mappers.ListBlobInventoryPolicy
        },
        default: {
            bodyMapper: Mappers.ErrorResponse
        }
    },
    serializer: serializer
};
//# sourceMappingURL=blobInventoryPolicies.js.map