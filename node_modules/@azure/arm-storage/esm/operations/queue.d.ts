import * as msRest from "@azure/ms-rest-js";
import * as Models from "../models";
import { StorageManagementClientContext } from "../storageManagementClientContext";
/** Class representing a Queue. */
export declare class Queue {
    private readonly client;
    /**
     * Create a Queue.
     * @param {StorageManagementClientContext} client Reference to the service client.
     */
    constructor(client: StorageManagementClientContext);
    /**
     * Creates a new queue with the specified queue name, under the specified account.
     * @param resourceGroupName The name of the resource group within the user's subscription. The name
     * is case insensitive.
     * @param accountName The name of the storage account within the specified resource group. Storage
     * account names must be between 3 and 24 characters in length and use numbers and lower-case
     * letters only.
     * @param queueName A queue name must be unique within a storage account and must be between 3 and
     * 63 characters.The name must comprise of lowercase alphanumeric and dash(-) characters only, it
     * should begin and end with an alphanumeric character and it cannot have two consecutive dash(-)
     * characters.
     * @param [options] The optional parameters
     * @returns Promise<Models.QueueCreateResponse>
     */
    create(resourceGroupName: string, accountName: string, queueName: string, options?: Models.QueueCreateOptionalParams): Promise<Models.QueueCreateResponse>;
    /**
     * @param resourceGroupName The name of the resource group within the user's subscription. The name
     * is case insensitive.
     * @param accountName The name of the storage account within the specified resource group. Storage
     * account names must be between 3 and 24 characters in length and use numbers and lower-case
     * letters only.
     * @param queueName A queue name must be unique within a storage account and must be between 3 and
     * 63 characters.The name must comprise of lowercase alphanumeric and dash(-) characters only, it
     * should begin and end with an alphanumeric character and it cannot have two consecutive dash(-)
     * characters.
     * @param callback The callback
     */
    create(resourceGroupName: string, accountName: string, queueName: string, callback: msRest.ServiceCallback<Models.StorageQueue>): void;
    /**
     * @param resourceGroupName The name of the resource group within the user's subscription. The name
     * is case insensitive.
     * @param accountName The name of the storage account within the specified resource group. Storage
     * account names must be between 3 and 24 characters in length and use numbers and lower-case
     * letters only.
     * @param queueName A queue name must be unique within a storage account and must be between 3 and
     * 63 characters.The name must comprise of lowercase alphanumeric and dash(-) characters only, it
     * should begin and end with an alphanumeric character and it cannot have two consecutive dash(-)
     * characters.
     * @param options The optional parameters
     * @param callback The callback
     */
    create(resourceGroupName: string, accountName: string, queueName: string, options: Models.QueueCreateOptionalParams, callback: msRest.ServiceCallback<Models.StorageQueue>): void;
    /**
     * Creates a new queue with the specified queue name, under the specified account.
     * @param resourceGroupName The name of the resource group within the user's subscription. The name
     * is case insensitive.
     * @param accountName The name of the storage account within the specified resource group. Storage
     * account names must be between 3 and 24 characters in length and use numbers and lower-case
     * letters only.
     * @param queueName A queue name must be unique within a storage account and must be between 3 and
     * 63 characters.The name must comprise of lowercase alphanumeric and dash(-) characters only, it
     * should begin and end with an alphanumeric character and it cannot have two consecutive dash(-)
     * characters.
     * @param [options] The optional parameters
     * @returns Promise<Models.QueueUpdateResponse>
     */
    update(resourceGroupName: string, accountName: string, queueName: string, options?: Models.QueueUpdateOptionalParams): Promise<Models.QueueUpdateResponse>;
    /**
     * @param resourceGroupName The name of the resource group within the user's subscription. The name
     * is case insensitive.
     * @param accountName The name of the storage account within the specified resource group. Storage
     * account names must be between 3 and 24 characters in length and use numbers and lower-case
     * letters only.
     * @param queueName A queue name must be unique within a storage account and must be between 3 and
     * 63 characters.The name must comprise of lowercase alphanumeric and dash(-) characters only, it
     * should begin and end with an alphanumeric character and it cannot have two consecutive dash(-)
     * characters.
     * @param callback The callback
     */
    update(resourceGroupName: string, accountName: string, queueName: string, callback: msRest.ServiceCallback<Models.StorageQueue>): void;
    /**
     * @param resourceGroupName The name of the resource group within the user's subscription. The name
     * is case insensitive.
     * @param accountName The name of the storage account within the specified resource group. Storage
     * account names must be between 3 and 24 characters in length and use numbers and lower-case
     * letters only.
     * @param queueName A queue name must be unique within a storage account and must be between 3 and
     * 63 characters.The name must comprise of lowercase alphanumeric and dash(-) characters only, it
     * should begin and end with an alphanumeric character and it cannot have two consecutive dash(-)
     * characters.
     * @param options The optional parameters
     * @param callback The callback
     */
    update(resourceGroupName: string, accountName: string, queueName: string, options: Models.QueueUpdateOptionalParams, callback: msRest.ServiceCallback<Models.StorageQueue>): void;
    /**
     * Gets the queue with the specified queue name, under the specified account if it exists.
     * @param resourceGroupName The name of the resource group within the user's subscription. The name
     * is case insensitive.
     * @param accountName The name of the storage account within the specified resource group. Storage
     * account names must be between 3 and 24 characters in length and use numbers and lower-case
     * letters only.
     * @param queueName A queue name must be unique within a storage account and must be between 3 and
     * 63 characters.The name must comprise of lowercase alphanumeric and dash(-) characters only, it
     * should begin and end with an alphanumeric character and it cannot have two consecutive dash(-)
     * characters.
     * @param [options] The optional parameters
     * @returns Promise<Models.QueueGetResponse>
     */
    get(resourceGroupName: string, accountName: string, queueName: string, options?: msRest.RequestOptionsBase): Promise<Models.QueueGetResponse>;
    /**
     * @param resourceGroupName The name of the resource group within the user's subscription. The name
     * is case insensitive.
     * @param accountName The name of the storage account within the specified resource group. Storage
     * account names must be between 3 and 24 characters in length and use numbers and lower-case
     * letters only.
     * @param queueName A queue name must be unique within a storage account and must be between 3 and
     * 63 characters.The name must comprise of lowercase alphanumeric and dash(-) characters only, it
     * should begin and end with an alphanumeric character and it cannot have two consecutive dash(-)
     * characters.
     * @param callback The callback
     */
    get(resourceGroupName: string, accountName: string, queueName: string, callback: msRest.ServiceCallback<Models.StorageQueue>): void;
    /**
     * @param resourceGroupName The name of the resource group within the user's subscription. The name
     * is case insensitive.
     * @param accountName The name of the storage account within the specified resource group. Storage
     * account names must be between 3 and 24 characters in length and use numbers and lower-case
     * letters only.
     * @param queueName A queue name must be unique within a storage account and must be between 3 and
     * 63 characters.The name must comprise of lowercase alphanumeric and dash(-) characters only, it
     * should begin and end with an alphanumeric character and it cannot have two consecutive dash(-)
     * characters.
     * @param options The optional parameters
     * @param callback The callback
     */
    get(resourceGroupName: string, accountName: string, queueName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.StorageQueue>): void;
    /**
     * Deletes the queue with the specified queue name, under the specified account if it exists.
     * @param resourceGroupName The name of the resource group within the user's subscription. The name
     * is case insensitive.
     * @param accountName The name of the storage account within the specified resource group. Storage
     * account names must be between 3 and 24 characters in length and use numbers and lower-case
     * letters only.
     * @param queueName A queue name must be unique within a storage account and must be between 3 and
     * 63 characters.The name must comprise of lowercase alphanumeric and dash(-) characters only, it
     * should begin and end with an alphanumeric character and it cannot have two consecutive dash(-)
     * characters.
     * @param [options] The optional parameters
     * @returns Promise<msRest.RestResponse>
     */
    deleteMethod(resourceGroupName: string, accountName: string, queueName: string, options?: msRest.RequestOptionsBase): Promise<msRest.RestResponse>;
    /**
     * @param resourceGroupName The name of the resource group within the user's subscription. The name
     * is case insensitive.
     * @param accountName The name of the storage account within the specified resource group. Storage
     * account names must be between 3 and 24 characters in length and use numbers and lower-case
     * letters only.
     * @param queueName A queue name must be unique within a storage account and must be between 3 and
     * 63 characters.The name must comprise of lowercase alphanumeric and dash(-) characters only, it
     * should begin and end with an alphanumeric character and it cannot have two consecutive dash(-)
     * characters.
     * @param callback The callback
     */
    deleteMethod(resourceGroupName: string, accountName: string, queueName: string, callback: msRest.ServiceCallback<void>): void;
    /**
     * @param resourceGroupName The name of the resource group within the user's subscription. The name
     * is case insensitive.
     * @param accountName The name of the storage account within the specified resource group. Storage
     * account names must be between 3 and 24 characters in length and use numbers and lower-case
     * letters only.
     * @param queueName A queue name must be unique within a storage account and must be between 3 and
     * 63 characters.The name must comprise of lowercase alphanumeric and dash(-) characters only, it
     * should begin and end with an alphanumeric character and it cannot have two consecutive dash(-)
     * characters.
     * @param options The optional parameters
     * @param callback The callback
     */
    deleteMethod(resourceGroupName: string, accountName: string, queueName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<void>): void;
    /**
     * Gets a list of all the queues under the specified storage account
     * @param resourceGroupName The name of the resource group within the user's subscription. The name
     * is case insensitive.
     * @param accountName The name of the storage account within the specified resource group. Storage
     * account names must be between 3 and 24 characters in length and use numbers and lower-case
     * letters only.
     * @param [options] The optional parameters
     * @returns Promise<Models.QueueListResponse>
     */
    list(resourceGroupName: string, accountName: string, options?: Models.QueueListOptionalParams): Promise<Models.QueueListResponse>;
    /**
     * @param resourceGroupName The name of the resource group within the user's subscription. The name
     * is case insensitive.
     * @param accountName The name of the storage account within the specified resource group. Storage
     * account names must be between 3 and 24 characters in length and use numbers and lower-case
     * letters only.
     * @param callback The callback
     */
    list(resourceGroupName: string, accountName: string, callback: msRest.ServiceCallback<Models.ListQueueResource>): void;
    /**
     * @param resourceGroupName The name of the resource group within the user's subscription. The name
     * is case insensitive.
     * @param accountName The name of the storage account within the specified resource group. Storage
     * account names must be between 3 and 24 characters in length and use numbers and lower-case
     * letters only.
     * @param options The optional parameters
     * @param callback The callback
     */
    list(resourceGroupName: string, accountName: string, options: Models.QueueListOptionalParams, callback: msRest.ServiceCallback<Models.ListQueueResource>): void;
    /**
     * Gets a list of all the queues under the specified storage account
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param [options] The optional parameters
     * @returns Promise<Models.QueueListNextResponse>
     */
    listNext(nextPageLink: string, options?: Models.QueueListNextOptionalParams): Promise<Models.QueueListNextResponse>;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param callback The callback
     */
    listNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.ListQueueResource>): void;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param options The optional parameters
     * @param callback The callback
     */
    listNext(nextPageLink: string, options: Models.QueueListNextOptionalParams, callback: msRest.ServiceCallback<Models.ListQueueResource>): void;
}
//# sourceMappingURL=queue.d.ts.map