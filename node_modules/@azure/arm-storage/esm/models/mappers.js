/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */
import { __assign } from "tslib";
import { CloudErrorMapper, BaseResourceMapper } from "@azure/ms-rest-azure-js";
export var CloudError = CloudErrorMapper;
export var BaseResource = BaseResourceMapper;
export var OperationDisplay = {
    serializedName: "Operation_display",
    type: {
        name: "Composite",
        className: "OperationDisplay",
        modelProperties: {
            provider: {
                serializedName: "provider",
                type: {
                    name: "String"
                }
            },
            resource: {
                serializedName: "resource",
                type: {
                    name: "String"
                }
            },
            operation: {
                serializedName: "operation",
                type: {
                    name: "String"
                }
            },
            description: {
                serializedName: "description",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var Dimension = {
    serializedName: "Dimension",
    type: {
        name: "Composite",
        className: "Dimension",
        modelProperties: {
            name: {
                serializedName: "name",
                type: {
                    name: "String"
                }
            },
            displayName: {
                serializedName: "displayName",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var MetricSpecification = {
    serializedName: "MetricSpecification",
    type: {
        name: "Composite",
        className: "MetricSpecification",
        modelProperties: {
            name: {
                serializedName: "name",
                type: {
                    name: "String"
                }
            },
            displayName: {
                serializedName: "displayName",
                type: {
                    name: "String"
                }
            },
            displayDescription: {
                serializedName: "displayDescription",
                type: {
                    name: "String"
                }
            },
            unit: {
                serializedName: "unit",
                type: {
                    name: "String"
                }
            },
            dimensions: {
                serializedName: "dimensions",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "Dimension"
                        }
                    }
                }
            },
            aggregationType: {
                serializedName: "aggregationType",
                type: {
                    name: "String"
                }
            },
            fillGapWithZero: {
                serializedName: "fillGapWithZero",
                type: {
                    name: "Boolean"
                }
            },
            category: {
                serializedName: "category",
                type: {
                    name: "String"
                }
            },
            resourceIdDimensionNameOverride: {
                serializedName: "resourceIdDimensionNameOverride",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var ServiceSpecification = {
    serializedName: "ServiceSpecification",
    type: {
        name: "Composite",
        className: "ServiceSpecification",
        modelProperties: {
            metricSpecifications: {
                serializedName: "metricSpecifications",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "MetricSpecification"
                        }
                    }
                }
            }
        }
    }
};
export var Operation = {
    serializedName: "Operation",
    type: {
        name: "Composite",
        className: "Operation",
        modelProperties: {
            name: {
                serializedName: "name",
                type: {
                    name: "String"
                }
            },
            display: {
                serializedName: "display",
                type: {
                    name: "Composite",
                    className: "OperationDisplay"
                }
            },
            origin: {
                serializedName: "origin",
                type: {
                    name: "String"
                }
            },
            serviceSpecification: {
                serializedName: "properties.serviceSpecification",
                type: {
                    name: "Composite",
                    className: "ServiceSpecification"
                }
            }
        }
    }
};
export var StorageAccountCheckNameAvailabilityParameters = {
    serializedName: "StorageAccountCheckNameAvailabilityParameters",
    type: {
        name: "Composite",
        className: "StorageAccountCheckNameAvailabilityParameters",
        modelProperties: {
            name: {
                required: true,
                serializedName: "name",
                type: {
                    name: "String"
                }
            },
            type: {
                required: true,
                isConstant: true,
                serializedName: "type",
                defaultValue: 'Microsoft.Storage/storageAccounts',
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var SKUCapability = {
    serializedName: "SKUCapability",
    type: {
        name: "Composite",
        className: "SKUCapability",
        modelProperties: {
            name: {
                readOnly: true,
                serializedName: "name",
                type: {
                    name: "String"
                }
            },
            value: {
                readOnly: true,
                serializedName: "value",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var Restriction = {
    serializedName: "Restriction",
    type: {
        name: "Composite",
        className: "Restriction",
        modelProperties: {
            type: {
                readOnly: true,
                serializedName: "type",
                type: {
                    name: "String"
                }
            },
            values: {
                readOnly: true,
                serializedName: "values",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String"
                        }
                    }
                }
            },
            reasonCode: {
                serializedName: "reasonCode",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var SkuInformation = {
    serializedName: "SkuInformation",
    type: {
        name: "Composite",
        className: "SkuInformation",
        modelProperties: {
            name: {
                required: true,
                serializedName: "name",
                type: {
                    name: "String"
                }
            },
            tier: {
                serializedName: "tier",
                type: {
                    name: "Enum",
                    allowedValues: [
                        "Standard",
                        "Premium"
                    ]
                }
            },
            resourceType: {
                readOnly: true,
                serializedName: "resourceType",
                type: {
                    name: "String"
                }
            },
            kind: {
                readOnly: true,
                serializedName: "kind",
                type: {
                    name: "String"
                }
            },
            locations: {
                readOnly: true,
                serializedName: "locations",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String"
                        }
                    }
                }
            },
            capabilities: {
                readOnly: true,
                serializedName: "capabilities",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "SKUCapability"
                        }
                    }
                }
            },
            restrictions: {
                serializedName: "restrictions",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "Restriction"
                        }
                    }
                }
            }
        }
    }
};
export var CheckNameAvailabilityResult = {
    serializedName: "CheckNameAvailabilityResult",
    type: {
        name: "Composite",
        className: "CheckNameAvailabilityResult",
        modelProperties: {
            nameAvailable: {
                readOnly: true,
                serializedName: "nameAvailable",
                type: {
                    name: "Boolean"
                }
            },
            reason: {
                readOnly: true,
                serializedName: "reason",
                type: {
                    name: "Enum",
                    allowedValues: [
                        "AccountNameInvalid",
                        "AlreadyExists"
                    ]
                }
            },
            message: {
                readOnly: true,
                serializedName: "message",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var CustomDomain = {
    serializedName: "CustomDomain",
    type: {
        name: "Composite",
        className: "CustomDomain",
        modelProperties: {
            name: {
                required: true,
                serializedName: "name",
                type: {
                    name: "String"
                }
            },
            useSubDomainName: {
                serializedName: "useSubDomainName",
                type: {
                    name: "Boolean"
                }
            }
        }
    }
};
export var EncryptionService = {
    serializedName: "EncryptionService",
    type: {
        name: "Composite",
        className: "EncryptionService",
        modelProperties: {
            enabled: {
                serializedName: "enabled",
                type: {
                    name: "Boolean"
                }
            },
            lastEnabledTime: {
                readOnly: true,
                serializedName: "lastEnabledTime",
                type: {
                    name: "DateTime"
                }
            },
            keyType: {
                serializedName: "keyType",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var EncryptionServices = {
    serializedName: "EncryptionServices",
    type: {
        name: "Composite",
        className: "EncryptionServices",
        modelProperties: {
            blob: {
                serializedName: "blob",
                type: {
                    name: "Composite",
                    className: "EncryptionService"
                }
            },
            file: {
                serializedName: "file",
                type: {
                    name: "Composite",
                    className: "EncryptionService"
                }
            },
            table: {
                serializedName: "table",
                type: {
                    name: "Composite",
                    className: "EncryptionService"
                }
            },
            queue: {
                serializedName: "queue",
                type: {
                    name: "Composite",
                    className: "EncryptionService"
                }
            }
        }
    }
};
export var KeyVaultProperties = {
    serializedName: "KeyVaultProperties",
    type: {
        name: "Composite",
        className: "KeyVaultProperties",
        modelProperties: {
            keyName: {
                serializedName: "keyname",
                type: {
                    name: "String"
                }
            },
            keyVersion: {
                serializedName: "keyversion",
                type: {
                    name: "String"
                }
            },
            keyVaultUri: {
                serializedName: "keyvaulturi",
                type: {
                    name: "String"
                }
            },
            currentVersionedKeyIdentifier: {
                readOnly: true,
                serializedName: "currentVersionedKeyIdentifier",
                type: {
                    name: "String"
                }
            },
            lastKeyRotationTimestamp: {
                readOnly: true,
                serializedName: "lastKeyRotationTimestamp",
                type: {
                    name: "DateTime"
                }
            }
        }
    }
};
export var EncryptionIdentity = {
    serializedName: "EncryptionIdentity",
    type: {
        name: "Composite",
        className: "EncryptionIdentity",
        modelProperties: {
            encryptionUserAssignedIdentity: {
                serializedName: "userAssignedIdentity",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var Encryption = {
    serializedName: "Encryption",
    type: {
        name: "Composite",
        className: "Encryption",
        modelProperties: {
            services: {
                serializedName: "services",
                type: {
                    name: "Composite",
                    className: "EncryptionServices"
                }
            },
            keySource: {
                required: true,
                serializedName: "keySource",
                defaultValue: 'Microsoft.Storage',
                type: {
                    name: "String"
                }
            },
            requireInfrastructureEncryption: {
                serializedName: "requireInfrastructureEncryption",
                type: {
                    name: "Boolean"
                }
            },
            keyVaultProperties: {
                serializedName: "keyvaultproperties",
                type: {
                    name: "Composite",
                    className: "KeyVaultProperties"
                }
            },
            encryptionIdentity: {
                serializedName: "identity",
                type: {
                    name: "Composite",
                    className: "EncryptionIdentity"
                }
            }
        }
    }
};
export var UserAssignedIdentity = {
    serializedName: "UserAssignedIdentity",
    type: {
        name: "Composite",
        className: "UserAssignedIdentity",
        modelProperties: {
            principalId: {
                readOnly: true,
                serializedName: "principalId",
                type: {
                    name: "String"
                }
            },
            clientId: {
                readOnly: true,
                serializedName: "clientId",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var ResourceAccessRule = {
    serializedName: "ResourceAccessRule",
    type: {
        name: "Composite",
        className: "ResourceAccessRule",
        modelProperties: {
            tenantId: {
                serializedName: "tenantId",
                type: {
                    name: "String"
                }
            },
            resourceId: {
                serializedName: "resourceId",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var VirtualNetworkRule = {
    serializedName: "VirtualNetworkRule",
    type: {
        name: "Composite",
        className: "VirtualNetworkRule",
        modelProperties: {
            virtualNetworkResourceId: {
                required: true,
                serializedName: "id",
                type: {
                    name: "String"
                }
            },
            action: {
                serializedName: "action",
                defaultValue: 'Allow',
                type: {
                    name: "Enum",
                    allowedValues: [
                        "Allow"
                    ]
                }
            },
            state: {
                serializedName: "state",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var IPRule = {
    serializedName: "IPRule",
    type: {
        name: "Composite",
        className: "IPRule",
        modelProperties: {
            iPAddressOrRange: {
                required: true,
                serializedName: "value",
                type: {
                    name: "String"
                }
            },
            action: {
                serializedName: "action",
                defaultValue: 'Allow',
                type: {
                    name: "Enum",
                    allowedValues: [
                        "Allow"
                    ]
                }
            }
        }
    }
};
export var NetworkRuleSet = {
    serializedName: "NetworkRuleSet",
    type: {
        name: "Composite",
        className: "NetworkRuleSet",
        modelProperties: {
            bypass: {
                serializedName: "bypass",
                defaultValue: 'AzureServices',
                type: {
                    name: "String"
                }
            },
            resourceAccessRules: {
                serializedName: "resourceAccessRules",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "ResourceAccessRule"
                        }
                    }
                }
            },
            virtualNetworkRules: {
                serializedName: "virtualNetworkRules",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "VirtualNetworkRule"
                        }
                    }
                }
            },
            ipRules: {
                serializedName: "ipRules",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "IPRule"
                        }
                    }
                }
            },
            defaultAction: {
                required: true,
                serializedName: "defaultAction",
                defaultValue: 'Allow',
                type: {
                    name: "Enum",
                    allowedValues: [
                        "Allow",
                        "Deny"
                    ]
                }
            }
        }
    }
};
export var ActiveDirectoryProperties = {
    serializedName: "ActiveDirectoryProperties",
    type: {
        name: "Composite",
        className: "ActiveDirectoryProperties",
        modelProperties: {
            domainName: {
                required: true,
                serializedName: "domainName",
                type: {
                    name: "String"
                }
            },
            netBiosDomainName: {
                required: true,
                serializedName: "netBiosDomainName",
                type: {
                    name: "String"
                }
            },
            forestName: {
                required: true,
                serializedName: "forestName",
                type: {
                    name: "String"
                }
            },
            domainGuid: {
                required: true,
                serializedName: "domainGuid",
                type: {
                    name: "String"
                }
            },
            domainSid: {
                required: true,
                serializedName: "domainSid",
                type: {
                    name: "String"
                }
            },
            azureStorageSid: {
                required: true,
                serializedName: "azureStorageSid",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var AzureFilesIdentityBasedAuthentication = {
    serializedName: "AzureFilesIdentityBasedAuthentication",
    type: {
        name: "Composite",
        className: "AzureFilesIdentityBasedAuthentication",
        modelProperties: {
            directoryServiceOptions: {
                required: true,
                serializedName: "directoryServiceOptions",
                type: {
                    name: "String"
                }
            },
            activeDirectoryProperties: {
                serializedName: "activeDirectoryProperties",
                type: {
                    name: "Composite",
                    className: "ActiveDirectoryProperties"
                }
            }
        }
    }
};
export var RoutingPreference = {
    serializedName: "RoutingPreference",
    type: {
        name: "Composite",
        className: "RoutingPreference",
        modelProperties: {
            routingChoice: {
                serializedName: "routingChoice",
                type: {
                    name: "String"
                }
            },
            publishMicrosoftEndpoints: {
                serializedName: "publishMicrosoftEndpoints",
                type: {
                    name: "Boolean"
                }
            },
            publishInternetEndpoints: {
                serializedName: "publishInternetEndpoints",
                type: {
                    name: "Boolean"
                }
            }
        }
    }
};
export var Identity = {
    serializedName: "Identity",
    type: {
        name: "Composite",
        className: "Identity",
        modelProperties: {
            principalId: {
                readOnly: true,
                serializedName: "principalId",
                type: {
                    name: "String"
                }
            },
            tenantId: {
                readOnly: true,
                serializedName: "tenantId",
                type: {
                    name: "String"
                }
            },
            type: {
                required: true,
                serializedName: "type",
                type: {
                    name: "String"
                }
            },
            userAssignedIdentities: {
                serializedName: "userAssignedIdentities",
                type: {
                    name: "Dictionary",
                    value: {
                        type: {
                            name: "Composite",
                            className: "UserAssignedIdentity"
                        }
                    }
                }
            }
        }
    }
};
export var ExtendedLocation = {
    serializedName: "ExtendedLocation",
    type: {
        name: "Composite",
        className: "ExtendedLocation",
        modelProperties: {
            name: {
                serializedName: "name",
                type: {
                    name: "String"
                }
            },
            type: {
                serializedName: "type",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var Sku = {
    serializedName: "Sku",
    type: {
        name: "Composite",
        className: "Sku",
        modelProperties: {
            name: {
                required: true,
                serializedName: "name",
                type: {
                    name: "String"
                }
            },
            tier: {
                serializedName: "tier",
                type: {
                    name: "Enum",
                    allowedValues: [
                        "Standard",
                        "Premium"
                    ]
                }
            }
        }
    }
};
export var StorageAccountCreateParameters = {
    serializedName: "StorageAccountCreateParameters",
    type: {
        name: "Composite",
        className: "StorageAccountCreateParameters",
        modelProperties: {
            sku: {
                required: true,
                serializedName: "sku",
                type: {
                    name: "Composite",
                    className: "Sku"
                }
            },
            kind: {
                required: true,
                serializedName: "kind",
                type: {
                    name: "String"
                }
            },
            location: {
                required: true,
                serializedName: "location",
                type: {
                    name: "String"
                }
            },
            extendedLocation: {
                serializedName: "extendedLocation",
                type: {
                    name: "Composite",
                    className: "ExtendedLocation"
                }
            },
            tags: {
                serializedName: "tags",
                type: {
                    name: "Dictionary",
                    value: {
                        type: {
                            name: "String"
                        }
                    }
                }
            },
            identity: {
                serializedName: "identity",
                type: {
                    name: "Composite",
                    className: "Identity"
                }
            },
            customDomain: {
                serializedName: "properties.customDomain",
                type: {
                    name: "Composite",
                    className: "CustomDomain"
                }
            },
            encryption: {
                serializedName: "properties.encryption",
                type: {
                    name: "Composite",
                    className: "Encryption"
                }
            },
            networkRuleSet: {
                serializedName: "properties.networkAcls",
                type: {
                    name: "Composite",
                    className: "NetworkRuleSet"
                }
            },
            accessTier: {
                serializedName: "properties.accessTier",
                type: {
                    name: "Enum",
                    allowedValues: [
                        "Hot",
                        "Cool"
                    ]
                }
            },
            azureFilesIdentityBasedAuthentication: {
                serializedName: "properties.azureFilesIdentityBasedAuthentication",
                type: {
                    name: "Composite",
                    className: "AzureFilesIdentityBasedAuthentication"
                }
            },
            enableHttpsTrafficOnly: {
                serializedName: "properties.supportsHttpsTrafficOnly",
                type: {
                    name: "Boolean"
                }
            },
            isHnsEnabled: {
                serializedName: "properties.isHnsEnabled",
                type: {
                    name: "Boolean"
                }
            },
            largeFileSharesState: {
                serializedName: "properties.largeFileSharesState",
                type: {
                    name: "String"
                }
            },
            routingPreference: {
                serializedName: "properties.routingPreference",
                type: {
                    name: "Composite",
                    className: "RoutingPreference"
                }
            },
            allowBlobPublicAccess: {
                serializedName: "properties.allowBlobPublicAccess",
                type: {
                    name: "Boolean"
                }
            },
            minimumTlsVersion: {
                serializedName: "properties.minimumTlsVersion",
                type: {
                    name: "String"
                }
            },
            allowSharedKeyAccess: {
                serializedName: "properties.allowSharedKeyAccess",
                type: {
                    name: "Boolean"
                }
            },
            enableNfsV3: {
                serializedName: "properties.isNfsV3Enabled",
                type: {
                    name: "Boolean"
                }
            }
        }
    }
};
export var StorageAccountMicrosoftEndpoints = {
    serializedName: "StorageAccountMicrosoftEndpoints",
    type: {
        name: "Composite",
        className: "StorageAccountMicrosoftEndpoints",
        modelProperties: {
            blob: {
                readOnly: true,
                serializedName: "blob",
                type: {
                    name: "String"
                }
            },
            queue: {
                readOnly: true,
                serializedName: "queue",
                type: {
                    name: "String"
                }
            },
            table: {
                readOnly: true,
                serializedName: "table",
                type: {
                    name: "String"
                }
            },
            file: {
                readOnly: true,
                serializedName: "file",
                type: {
                    name: "String"
                }
            },
            web: {
                readOnly: true,
                serializedName: "web",
                type: {
                    name: "String"
                }
            },
            dfs: {
                readOnly: true,
                serializedName: "dfs",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var StorageAccountInternetEndpoints = {
    serializedName: "StorageAccountInternetEndpoints",
    type: {
        name: "Composite",
        className: "StorageAccountInternetEndpoints",
        modelProperties: {
            blob: {
                readOnly: true,
                serializedName: "blob",
                type: {
                    name: "String"
                }
            },
            file: {
                readOnly: true,
                serializedName: "file",
                type: {
                    name: "String"
                }
            },
            web: {
                readOnly: true,
                serializedName: "web",
                type: {
                    name: "String"
                }
            },
            dfs: {
                readOnly: true,
                serializedName: "dfs",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var Endpoints = {
    serializedName: "Endpoints",
    type: {
        name: "Composite",
        className: "Endpoints",
        modelProperties: {
            blob: {
                readOnly: true,
                serializedName: "blob",
                type: {
                    name: "String"
                }
            },
            queue: {
                readOnly: true,
                serializedName: "queue",
                type: {
                    name: "String"
                }
            },
            table: {
                readOnly: true,
                serializedName: "table",
                type: {
                    name: "String"
                }
            },
            file: {
                readOnly: true,
                serializedName: "file",
                type: {
                    name: "String"
                }
            },
            web: {
                readOnly: true,
                serializedName: "web",
                type: {
                    name: "String"
                }
            },
            dfs: {
                readOnly: true,
                serializedName: "dfs",
                type: {
                    name: "String"
                }
            },
            microsoftEndpoints: {
                serializedName: "microsoftEndpoints",
                type: {
                    name: "Composite",
                    className: "StorageAccountMicrosoftEndpoints"
                }
            },
            internetEndpoints: {
                serializedName: "internetEndpoints",
                type: {
                    name: "Composite",
                    className: "StorageAccountInternetEndpoints"
                }
            }
        }
    }
};
export var GeoReplicationStats = {
    serializedName: "GeoReplicationStats",
    type: {
        name: "Composite",
        className: "GeoReplicationStats",
        modelProperties: {
            status: {
                readOnly: true,
                serializedName: "status",
                type: {
                    name: "String"
                }
            },
            lastSyncTime: {
                readOnly: true,
                serializedName: "lastSyncTime",
                type: {
                    name: "DateTime"
                }
            },
            canFailover: {
                readOnly: true,
                serializedName: "canFailover",
                type: {
                    name: "Boolean"
                }
            }
        }
    }
};
export var BlobRestoreRange = {
    serializedName: "BlobRestoreRange",
    type: {
        name: "Composite",
        className: "BlobRestoreRange",
        modelProperties: {
            startRange: {
                required: true,
                serializedName: "startRange",
                type: {
                    name: "String"
                }
            },
            endRange: {
                required: true,
                serializedName: "endRange",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var BlobRestoreParameters = {
    serializedName: "BlobRestoreParameters",
    type: {
        name: "Composite",
        className: "BlobRestoreParameters",
        modelProperties: {
            timeToRestore: {
                required: true,
                serializedName: "timeToRestore",
                type: {
                    name: "DateTime"
                }
            },
            blobRanges: {
                required: true,
                serializedName: "blobRanges",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "BlobRestoreRange"
                        }
                    }
                }
            }
        }
    }
};
export var BlobRestoreStatus = {
    serializedName: "BlobRestoreStatus",
    type: {
        name: "Composite",
        className: "BlobRestoreStatus",
        modelProperties: {
            status: {
                readOnly: true,
                serializedName: "status",
                type: {
                    name: "String"
                }
            },
            failureReason: {
                readOnly: true,
                serializedName: "failureReason",
                type: {
                    name: "String"
                }
            },
            restoreId: {
                readOnly: true,
                serializedName: "restoreId",
                type: {
                    name: "String"
                }
            },
            parameters: {
                readOnly: true,
                serializedName: "parameters",
                type: {
                    name: "Composite",
                    className: "BlobRestoreParameters"
                }
            }
        }
    }
};
export var PrivateEndpoint = {
    serializedName: "PrivateEndpoint",
    type: {
        name: "Composite",
        className: "PrivateEndpoint",
        modelProperties: {
            id: {
                readOnly: true,
                serializedName: "id",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var PrivateLinkServiceConnectionState = {
    serializedName: "PrivateLinkServiceConnectionState",
    type: {
        name: "Composite",
        className: "PrivateLinkServiceConnectionState",
        modelProperties: {
            status: {
                serializedName: "status",
                type: {
                    name: "String"
                }
            },
            description: {
                serializedName: "description",
                type: {
                    name: "String"
                }
            },
            actionRequired: {
                serializedName: "actionRequired",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var Resource = {
    serializedName: "Resource",
    type: {
        name: "Composite",
        className: "Resource",
        modelProperties: {
            id: {
                readOnly: true,
                serializedName: "id",
                type: {
                    name: "String"
                }
            },
            name: {
                readOnly: true,
                serializedName: "name",
                type: {
                    name: "String"
                }
            },
            type: {
                readOnly: true,
                serializedName: "type",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var PrivateEndpointConnection = {
    serializedName: "PrivateEndpointConnection",
    type: {
        name: "Composite",
        className: "PrivateEndpointConnection",
        modelProperties: __assign(__assign({}, Resource.type.modelProperties), { privateEndpoint: {
                serializedName: "properties.privateEndpoint",
                type: {
                    name: "Composite",
                    className: "PrivateEndpoint"
                }
            }, privateLinkServiceConnectionState: {
                required: true,
                serializedName: "properties.privateLinkServiceConnectionState",
                type: {
                    name: "Composite",
                    className: "PrivateLinkServiceConnectionState"
                }
            }, provisioningState: {
                serializedName: "properties.provisioningState",
                type: {
                    name: "String"
                }
            } })
    }
};
export var ProxyResource = {
    serializedName: "ProxyResource",
    type: {
        name: "Composite",
        className: "ProxyResource",
        modelProperties: __assign({}, Resource.type.modelProperties)
    }
};
export var DeletedAccount = {
    serializedName: "DeletedAccount",
    type: {
        name: "Composite",
        className: "DeletedAccount",
        modelProperties: __assign(__assign({}, ProxyResource.type.modelProperties), { storageAccountResourceId: {
                readOnly: true,
                serializedName: "properties.storageAccountResourceId",
                type: {
                    name: "String"
                }
            }, location: {
                readOnly: true,
                serializedName: "properties.location",
                type: {
                    name: "String"
                }
            }, restoreReference: {
                readOnly: true,
                serializedName: "properties.restoreReference",
                type: {
                    name: "String"
                }
            }, creationTime: {
                readOnly: true,
                serializedName: "properties.creationTime",
                type: {
                    name: "String"
                }
            }, deletionTime: {
                readOnly: true,
                serializedName: "properties.deletionTime",
                type: {
                    name: "String"
                }
            } })
    }
};
export var TrackedResource = {
    serializedName: "TrackedResource",
    type: {
        name: "Composite",
        className: "TrackedResource",
        modelProperties: __assign(__assign({}, Resource.type.modelProperties), { tags: {
                serializedName: "tags",
                type: {
                    name: "Dictionary",
                    value: {
                        type: {
                            name: "String"
                        }
                    }
                }
            }, location: {
                required: true,
                serializedName: "location",
                type: {
                    name: "String"
                }
            } })
    }
};
export var StorageAccount = {
    serializedName: "StorageAccount",
    type: {
        name: "Composite",
        className: "StorageAccount",
        modelProperties: __assign(__assign({}, TrackedResource.type.modelProperties), { sku: {
                readOnly: true,
                serializedName: "sku",
                type: {
                    name: "Composite",
                    className: "Sku"
                }
            }, kind: {
                readOnly: true,
                serializedName: "kind",
                type: {
                    name: "String"
                }
            }, identity: {
                serializedName: "identity",
                type: {
                    name: "Composite",
                    className: "Identity"
                }
            }, extendedLocation: {
                serializedName: "extendedLocation",
                type: {
                    name: "Composite",
                    className: "ExtendedLocation"
                }
            }, provisioningState: {
                readOnly: true,
                serializedName: "properties.provisioningState",
                type: {
                    name: "Enum",
                    allowedValues: [
                        "Creating",
                        "ResolvingDNS",
                        "Succeeded"
                    ]
                }
            }, primaryEndpoints: {
                readOnly: true,
                serializedName: "properties.primaryEndpoints",
                type: {
                    name: "Composite",
                    className: "Endpoints"
                }
            }, primaryLocation: {
                readOnly: true,
                serializedName: "properties.primaryLocation",
                type: {
                    name: "String"
                }
            }, statusOfPrimary: {
                readOnly: true,
                serializedName: "properties.statusOfPrimary",
                type: {
                    name: "Enum",
                    allowedValues: [
                        "available",
                        "unavailable"
                    ]
                }
            }, lastGeoFailoverTime: {
                readOnly: true,
                serializedName: "properties.lastGeoFailoverTime",
                type: {
                    name: "DateTime"
                }
            }, secondaryLocation: {
                readOnly: true,
                serializedName: "properties.secondaryLocation",
                type: {
                    name: "String"
                }
            }, statusOfSecondary: {
                readOnly: true,
                serializedName: "properties.statusOfSecondary",
                type: {
                    name: "Enum",
                    allowedValues: [
                        "available",
                        "unavailable"
                    ]
                }
            }, creationTime: {
                readOnly: true,
                serializedName: "properties.creationTime",
                type: {
                    name: "DateTime"
                }
            }, customDomain: {
                readOnly: true,
                serializedName: "properties.customDomain",
                type: {
                    name: "Composite",
                    className: "CustomDomain"
                }
            }, secondaryEndpoints: {
                readOnly: true,
                serializedName: "properties.secondaryEndpoints",
                type: {
                    name: "Composite",
                    className: "Endpoints"
                }
            }, encryption: {
                readOnly: true,
                serializedName: "properties.encryption",
                type: {
                    name: "Composite",
                    className: "Encryption"
                }
            }, accessTier: {
                readOnly: true,
                serializedName: "properties.accessTier",
                type: {
                    name: "Enum",
                    allowedValues: [
                        "Hot",
                        "Cool"
                    ]
                }
            }, azureFilesIdentityBasedAuthentication: {
                serializedName: "properties.azureFilesIdentityBasedAuthentication",
                type: {
                    name: "Composite",
                    className: "AzureFilesIdentityBasedAuthentication"
                }
            }, enableHttpsTrafficOnly: {
                serializedName: "properties.supportsHttpsTrafficOnly",
                type: {
                    name: "Boolean"
                }
            }, networkRuleSet: {
                readOnly: true,
                serializedName: "properties.networkAcls",
                type: {
                    name: "Composite",
                    className: "NetworkRuleSet"
                }
            }, isHnsEnabled: {
                serializedName: "properties.isHnsEnabled",
                type: {
                    name: "Boolean"
                }
            }, geoReplicationStats: {
                readOnly: true,
                serializedName: "properties.geoReplicationStats",
                type: {
                    name: "Composite",
                    className: "GeoReplicationStats"
                }
            }, failoverInProgress: {
                readOnly: true,
                serializedName: "properties.failoverInProgress",
                type: {
                    name: "Boolean"
                }
            }, largeFileSharesState: {
                serializedName: "properties.largeFileSharesState",
                type: {
                    name: "String"
                }
            }, privateEndpointConnections: {
                readOnly: true,
                serializedName: "properties.privateEndpointConnections",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "PrivateEndpointConnection"
                        }
                    }
                }
            }, routingPreference: {
                serializedName: "properties.routingPreference",
                type: {
                    name: "Composite",
                    className: "RoutingPreference"
                }
            }, blobRestoreStatus: {
                readOnly: true,
                serializedName: "properties.blobRestoreStatus",
                type: {
                    name: "Composite",
                    className: "BlobRestoreStatus"
                }
            }, allowBlobPublicAccess: {
                serializedName: "properties.allowBlobPublicAccess",
                type: {
                    name: "Boolean"
                }
            }, minimumTlsVersion: {
                serializedName: "properties.minimumTlsVersion",
                type: {
                    name: "String"
                }
            }, allowSharedKeyAccess: {
                serializedName: "properties.allowSharedKeyAccess",
                type: {
                    name: "Boolean"
                }
            }, enableNfsV3: {
                serializedName: "properties.isNfsV3Enabled",
                type: {
                    name: "Boolean"
                }
            } })
    }
};
export var StorageAccountKey = {
    serializedName: "StorageAccountKey",
    type: {
        name: "Composite",
        className: "StorageAccountKey",
        modelProperties: {
            keyName: {
                readOnly: true,
                serializedName: "keyName",
                type: {
                    name: "String"
                }
            },
            value: {
                readOnly: true,
                serializedName: "value",
                type: {
                    name: "String"
                }
            },
            permissions: {
                readOnly: true,
                serializedName: "permissions",
                type: {
                    name: "Enum",
                    allowedValues: [
                        "Read",
                        "Full"
                    ]
                }
            }
        }
    }
};
export var StorageAccountListKeysResult = {
    serializedName: "StorageAccountListKeysResult",
    type: {
        name: "Composite",
        className: "StorageAccountListKeysResult",
        modelProperties: {
            keys: {
                readOnly: true,
                serializedName: "keys",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "StorageAccountKey"
                        }
                    }
                }
            }
        }
    }
};
export var StorageAccountRegenerateKeyParameters = {
    serializedName: "StorageAccountRegenerateKeyParameters",
    type: {
        name: "Composite",
        className: "StorageAccountRegenerateKeyParameters",
        modelProperties: {
            keyName: {
                required: true,
                serializedName: "keyName",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var StorageAccountUpdateParameters = {
    serializedName: "StorageAccountUpdateParameters",
    type: {
        name: "Composite",
        className: "StorageAccountUpdateParameters",
        modelProperties: {
            sku: {
                serializedName: "sku",
                type: {
                    name: "Composite",
                    className: "Sku"
                }
            },
            tags: {
                serializedName: "tags",
                type: {
                    name: "Dictionary",
                    value: {
                        type: {
                            name: "String"
                        }
                    }
                }
            },
            identity: {
                serializedName: "identity",
                type: {
                    name: "Composite",
                    className: "Identity"
                }
            },
            customDomain: {
                serializedName: "properties.customDomain",
                type: {
                    name: "Composite",
                    className: "CustomDomain"
                }
            },
            encryption: {
                serializedName: "properties.encryption",
                type: {
                    name: "Composite",
                    className: "Encryption"
                }
            },
            accessTier: {
                serializedName: "properties.accessTier",
                type: {
                    name: "Enum",
                    allowedValues: [
                        "Hot",
                        "Cool"
                    ]
                }
            },
            azureFilesIdentityBasedAuthentication: {
                serializedName: "properties.azureFilesIdentityBasedAuthentication",
                type: {
                    name: "Composite",
                    className: "AzureFilesIdentityBasedAuthentication"
                }
            },
            enableHttpsTrafficOnly: {
                serializedName: "properties.supportsHttpsTrafficOnly",
                type: {
                    name: "Boolean"
                }
            },
            networkRuleSet: {
                serializedName: "properties.networkAcls",
                type: {
                    name: "Composite",
                    className: "NetworkRuleSet"
                }
            },
            largeFileSharesState: {
                serializedName: "properties.largeFileSharesState",
                type: {
                    name: "String"
                }
            },
            routingPreference: {
                serializedName: "properties.routingPreference",
                type: {
                    name: "Composite",
                    className: "RoutingPreference"
                }
            },
            allowBlobPublicAccess: {
                serializedName: "properties.allowBlobPublicAccess",
                type: {
                    name: "Boolean"
                }
            },
            minimumTlsVersion: {
                serializedName: "properties.minimumTlsVersion",
                type: {
                    name: "String"
                }
            },
            allowSharedKeyAccess: {
                serializedName: "properties.allowSharedKeyAccess",
                type: {
                    name: "Boolean"
                }
            },
            kind: {
                serializedName: "kind",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var UsageName = {
    serializedName: "UsageName",
    type: {
        name: "Composite",
        className: "UsageName",
        modelProperties: {
            value: {
                readOnly: true,
                serializedName: "value",
                type: {
                    name: "String"
                }
            },
            localizedValue: {
                readOnly: true,
                serializedName: "localizedValue",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var Usage = {
    serializedName: "Usage",
    type: {
        name: "Composite",
        className: "Usage",
        modelProperties: {
            unit: {
                readOnly: true,
                serializedName: "unit",
                type: {
                    name: "Enum",
                    allowedValues: [
                        "Count",
                        "Bytes",
                        "Seconds",
                        "Percent",
                        "CountsPerSecond",
                        "BytesPerSecond"
                    ]
                }
            },
            currentValue: {
                readOnly: true,
                serializedName: "currentValue",
                type: {
                    name: "Number"
                }
            },
            limit: {
                readOnly: true,
                serializedName: "limit",
                type: {
                    name: "Number"
                }
            },
            name: {
                readOnly: true,
                serializedName: "name",
                type: {
                    name: "Composite",
                    className: "UsageName"
                }
            }
        }
    }
};
export var AccountSasParameters = {
    serializedName: "AccountSasParameters",
    type: {
        name: "Composite",
        className: "AccountSasParameters",
        modelProperties: {
            services: {
                required: true,
                serializedName: "signedServices",
                type: {
                    name: "String"
                }
            },
            resourceTypes: {
                required: true,
                serializedName: "signedResourceTypes",
                type: {
                    name: "String"
                }
            },
            permissions: {
                required: true,
                serializedName: "signedPermission",
                type: {
                    name: "String"
                }
            },
            iPAddressOrRange: {
                serializedName: "signedIp",
                type: {
                    name: "String"
                }
            },
            protocols: {
                serializedName: "signedProtocol",
                type: {
                    name: "Enum",
                    allowedValues: [
                        "https,http",
                        "https"
                    ]
                }
            },
            sharedAccessStartTime: {
                serializedName: "signedStart",
                type: {
                    name: "DateTime"
                }
            },
            sharedAccessExpiryTime: {
                required: true,
                serializedName: "signedExpiry",
                type: {
                    name: "DateTime"
                }
            },
            keyToSign: {
                serializedName: "keyToSign",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var ListAccountSasResponse = {
    serializedName: "ListAccountSasResponse",
    type: {
        name: "Composite",
        className: "ListAccountSasResponse",
        modelProperties: {
            accountSasToken: {
                readOnly: true,
                serializedName: "accountSasToken",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var ServiceSasParameters = {
    serializedName: "ServiceSasParameters",
    type: {
        name: "Composite",
        className: "ServiceSasParameters",
        modelProperties: {
            canonicalizedResource: {
                required: true,
                serializedName: "canonicalizedResource",
                type: {
                    name: "String"
                }
            },
            resource: {
                serializedName: "signedResource",
                type: {
                    name: "String"
                }
            },
            permissions: {
                serializedName: "signedPermission",
                type: {
                    name: "String"
                }
            },
            iPAddressOrRange: {
                serializedName: "signedIp",
                type: {
                    name: "String"
                }
            },
            protocols: {
                serializedName: "signedProtocol",
                type: {
                    name: "Enum",
                    allowedValues: [
                        "https,http",
                        "https"
                    ]
                }
            },
            sharedAccessStartTime: {
                serializedName: "signedStart",
                type: {
                    name: "DateTime"
                }
            },
            sharedAccessExpiryTime: {
                serializedName: "signedExpiry",
                type: {
                    name: "DateTime"
                }
            },
            identifier: {
                serializedName: "signedIdentifier",
                constraints: {
                    MaxLength: 64
                },
                type: {
                    name: "String"
                }
            },
            partitionKeyStart: {
                serializedName: "startPk",
                type: {
                    name: "String"
                }
            },
            partitionKeyEnd: {
                serializedName: "endPk",
                type: {
                    name: "String"
                }
            },
            rowKeyStart: {
                serializedName: "startRk",
                type: {
                    name: "String"
                }
            },
            rowKeyEnd: {
                serializedName: "endRk",
                type: {
                    name: "String"
                }
            },
            keyToSign: {
                serializedName: "keyToSign",
                type: {
                    name: "String"
                }
            },
            cacheControl: {
                serializedName: "rscc",
                type: {
                    name: "String"
                }
            },
            contentDisposition: {
                serializedName: "rscd",
                type: {
                    name: "String"
                }
            },
            contentEncoding: {
                serializedName: "rsce",
                type: {
                    name: "String"
                }
            },
            contentLanguage: {
                serializedName: "rscl",
                type: {
                    name: "String"
                }
            },
            contentType: {
                serializedName: "rsct",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var ListServiceSasResponse = {
    serializedName: "ListServiceSasResponse",
    type: {
        name: "Composite",
        className: "ListServiceSasResponse",
        modelProperties: {
            serviceSasToken: {
                readOnly: true,
                serializedName: "serviceSasToken",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var DateAfterModification = {
    serializedName: "DateAfterModification",
    type: {
        name: "Composite",
        className: "DateAfterModification",
        modelProperties: {
            daysAfterModificationGreaterThan: {
                serializedName: "daysAfterModificationGreaterThan",
                constraints: {
                    InclusiveMinimum: 0,
                    MultipleOf: 1
                },
                type: {
                    name: "Number"
                }
            },
            daysAfterLastAccessTimeGreaterThan: {
                serializedName: "daysAfterLastAccessTimeGreaterThan",
                constraints: {
                    InclusiveMinimum: 0,
                    MultipleOf: 1
                },
                type: {
                    name: "Number"
                }
            }
        }
    }
};
export var ManagementPolicyBaseBlob = {
    serializedName: "ManagementPolicyBaseBlob",
    type: {
        name: "Composite",
        className: "ManagementPolicyBaseBlob",
        modelProperties: {
            tierToCool: {
                serializedName: "tierToCool",
                type: {
                    name: "Composite",
                    className: "DateAfterModification"
                }
            },
            tierToArchive: {
                serializedName: "tierToArchive",
                type: {
                    name: "Composite",
                    className: "DateAfterModification"
                }
            },
            deleteProperty: {
                serializedName: "delete",
                type: {
                    name: "Composite",
                    className: "DateAfterModification"
                }
            },
            enableAutoTierToHotFromCool: {
                serializedName: "enableAutoTierToHotFromCool",
                type: {
                    name: "Boolean"
                }
            }
        }
    }
};
export var DateAfterCreation = {
    serializedName: "DateAfterCreation",
    type: {
        name: "Composite",
        className: "DateAfterCreation",
        modelProperties: {
            daysAfterCreationGreaterThan: {
                required: true,
                serializedName: "daysAfterCreationGreaterThan",
                constraints: {
                    InclusiveMinimum: 0,
                    MultipleOf: 1
                },
                type: {
                    name: "Number"
                }
            }
        }
    }
};
export var ManagementPolicySnapShot = {
    serializedName: "ManagementPolicySnapShot",
    type: {
        name: "Composite",
        className: "ManagementPolicySnapShot",
        modelProperties: {
            tierToCool: {
                serializedName: "tierToCool",
                type: {
                    name: "Composite",
                    className: "DateAfterCreation"
                }
            },
            tierToArchive: {
                serializedName: "tierToArchive",
                type: {
                    name: "Composite",
                    className: "DateAfterCreation"
                }
            },
            deleteProperty: {
                serializedName: "delete",
                type: {
                    name: "Composite",
                    className: "DateAfterCreation"
                }
            }
        }
    }
};
export var ManagementPolicyVersion = {
    serializedName: "ManagementPolicyVersion",
    type: {
        name: "Composite",
        className: "ManagementPolicyVersion",
        modelProperties: {
            tierToCool: {
                serializedName: "tierToCool",
                type: {
                    name: "Composite",
                    className: "DateAfterCreation"
                }
            },
            tierToArchive: {
                serializedName: "tierToArchive",
                type: {
                    name: "Composite",
                    className: "DateAfterCreation"
                }
            },
            deleteProperty: {
                serializedName: "delete",
                type: {
                    name: "Composite",
                    className: "DateAfterCreation"
                }
            }
        }
    }
};
export var ManagementPolicyAction = {
    serializedName: "ManagementPolicyAction",
    type: {
        name: "Composite",
        className: "ManagementPolicyAction",
        modelProperties: {
            baseBlob: {
                serializedName: "baseBlob",
                type: {
                    name: "Composite",
                    className: "ManagementPolicyBaseBlob"
                }
            },
            snapshot: {
                serializedName: "snapshot",
                type: {
                    name: "Composite",
                    className: "ManagementPolicySnapShot"
                }
            },
            version: {
                serializedName: "version",
                type: {
                    name: "Composite",
                    className: "ManagementPolicyVersion"
                }
            }
        }
    }
};
export var TagFilter = {
    serializedName: "TagFilter",
    type: {
        name: "Composite",
        className: "TagFilter",
        modelProperties: {
            name: {
                required: true,
                serializedName: "name",
                constraints: {
                    MaxLength: 128,
                    MinLength: 1
                },
                type: {
                    name: "String"
                }
            },
            op: {
                required: true,
                serializedName: "op",
                type: {
                    name: "String"
                }
            },
            value: {
                required: true,
                serializedName: "value",
                constraints: {
                    MaxLength: 256,
                    MinLength: 0
                },
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var ManagementPolicyFilter = {
    serializedName: "ManagementPolicyFilter",
    type: {
        name: "Composite",
        className: "ManagementPolicyFilter",
        modelProperties: {
            prefixMatch: {
                serializedName: "prefixMatch",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String"
                        }
                    }
                }
            },
            blobTypes: {
                required: true,
                serializedName: "blobTypes",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String"
                        }
                    }
                }
            },
            blobIndexMatch: {
                serializedName: "blobIndexMatch",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "TagFilter"
                        }
                    }
                }
            }
        }
    }
};
export var ManagementPolicyDefinition = {
    serializedName: "ManagementPolicyDefinition",
    type: {
        name: "Composite",
        className: "ManagementPolicyDefinition",
        modelProperties: {
            actions: {
                required: true,
                serializedName: "actions",
                type: {
                    name: "Composite",
                    className: "ManagementPolicyAction"
                }
            },
            filters: {
                serializedName: "filters",
                type: {
                    name: "Composite",
                    className: "ManagementPolicyFilter"
                }
            }
        }
    }
};
export var ManagementPolicyRule = {
    serializedName: "ManagementPolicyRule",
    type: {
        name: "Composite",
        className: "ManagementPolicyRule",
        modelProperties: {
            enabled: {
                serializedName: "enabled",
                type: {
                    name: "Boolean"
                }
            },
            name: {
                required: true,
                serializedName: "name",
                type: {
                    name: "String"
                }
            },
            type: {
                required: true,
                isConstant: true,
                serializedName: "type",
                defaultValue: 'Lifecycle',
                type: {
                    name: "String"
                }
            },
            definition: {
                required: true,
                serializedName: "definition",
                type: {
                    name: "Composite",
                    className: "ManagementPolicyDefinition"
                }
            }
        }
    }
};
export var ManagementPolicySchema = {
    serializedName: "ManagementPolicySchema",
    type: {
        name: "Composite",
        className: "ManagementPolicySchema",
        modelProperties: {
            rules: {
                required: true,
                serializedName: "rules",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "ManagementPolicyRule"
                        }
                    }
                }
            }
        }
    }
};
export var ManagementPolicy = {
    serializedName: "ManagementPolicy",
    type: {
        name: "Composite",
        className: "ManagementPolicy",
        modelProperties: __assign(__assign({}, Resource.type.modelProperties), { lastModifiedTime: {
                readOnly: true,
                serializedName: "properties.lastModifiedTime",
                type: {
                    name: "DateTime"
                }
            }, policy: {
                required: true,
                serializedName: "properties.policy",
                type: {
                    name: "Composite",
                    className: "ManagementPolicySchema"
                }
            } })
    }
};
export var EncryptionScopeKeyVaultProperties = {
    serializedName: "EncryptionScopeKeyVaultProperties",
    type: {
        name: "Composite",
        className: "EncryptionScopeKeyVaultProperties",
        modelProperties: {
            keyUri: {
                serializedName: "keyUri",
                type: {
                    name: "String"
                }
            },
            currentVersionedKeyIdentifier: {
                readOnly: true,
                serializedName: "currentVersionedKeyIdentifier",
                type: {
                    name: "String"
                }
            },
            lastKeyRotationTimestamp: {
                readOnly: true,
                serializedName: "lastKeyRotationTimestamp",
                type: {
                    name: "DateTime"
                }
            }
        }
    }
};
export var EncryptionScope = {
    serializedName: "EncryptionScope",
    type: {
        name: "Composite",
        className: "EncryptionScope",
        modelProperties: __assign(__assign({}, Resource.type.modelProperties), { source: {
                serializedName: "properties.source",
                type: {
                    name: "String"
                }
            }, state: {
                serializedName: "properties.state",
                type: {
                    name: "String"
                }
            }, creationTime: {
                readOnly: true,
                serializedName: "properties.creationTime",
                type: {
                    name: "DateTime"
                }
            }, lastModifiedTime: {
                readOnly: true,
                serializedName: "properties.lastModifiedTime",
                type: {
                    name: "DateTime"
                }
            }, keyVaultProperties: {
                serializedName: "properties.keyVaultProperties",
                type: {
                    name: "Composite",
                    className: "EncryptionScopeKeyVaultProperties"
                }
            }, requireInfrastructureEncryption: {
                serializedName: "properties.requireInfrastructureEncryption",
                type: {
                    name: "Boolean"
                }
            } })
    }
};
export var ObjectReplicationPolicyFilter = {
    serializedName: "ObjectReplicationPolicyFilter",
    type: {
        name: "Composite",
        className: "ObjectReplicationPolicyFilter",
        modelProperties: {
            prefixMatch: {
                serializedName: "prefixMatch",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String"
                        }
                    }
                }
            },
            minCreationTime: {
                serializedName: "minCreationTime",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var ObjectReplicationPolicyRule = {
    serializedName: "ObjectReplicationPolicyRule",
    type: {
        name: "Composite",
        className: "ObjectReplicationPolicyRule",
        modelProperties: {
            ruleId: {
                serializedName: "ruleId",
                type: {
                    name: "String"
                }
            },
            sourceContainer: {
                required: true,
                serializedName: "sourceContainer",
                type: {
                    name: "String"
                }
            },
            destinationContainer: {
                required: true,
                serializedName: "destinationContainer",
                type: {
                    name: "String"
                }
            },
            filters: {
                serializedName: "filters",
                type: {
                    name: "Composite",
                    className: "ObjectReplicationPolicyFilter"
                }
            }
        }
    }
};
export var ObjectReplicationPolicy = {
    serializedName: "ObjectReplicationPolicy",
    type: {
        name: "Composite",
        className: "ObjectReplicationPolicy",
        modelProperties: __assign(__assign({}, Resource.type.modelProperties), { policyId: {
                readOnly: true,
                serializedName: "properties.policyId",
                type: {
                    name: "String"
                }
            }, enabledTime: {
                readOnly: true,
                serializedName: "properties.enabledTime",
                type: {
                    name: "DateTime"
                }
            }, sourceAccount: {
                required: true,
                serializedName: "properties.sourceAccount",
                type: {
                    name: "String"
                }
            }, destinationAccount: {
                required: true,
                serializedName: "properties.destinationAccount",
                type: {
                    name: "String"
                }
            }, rules: {
                serializedName: "properties.rules",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "ObjectReplicationPolicyRule"
                        }
                    }
                }
            } })
    }
};
export var BlobInventoryPolicyFilter = {
    serializedName: "BlobInventoryPolicyFilter",
    type: {
        name: "Composite",
        className: "BlobInventoryPolicyFilter",
        modelProperties: {
            prefixMatch: {
                serializedName: "prefixMatch",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String"
                        }
                    }
                }
            },
            blobTypes: {
                required: true,
                serializedName: "blobTypes",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String"
                        }
                    }
                }
            },
            includeBlobVersions: {
                serializedName: "includeBlobVersions",
                type: {
                    name: "Boolean"
                }
            },
            includeSnapshots: {
                serializedName: "includeSnapshots",
                type: {
                    name: "Boolean"
                }
            }
        }
    }
};
export var BlobInventoryPolicyDefinition = {
    serializedName: "BlobInventoryPolicyDefinition",
    type: {
        name: "Composite",
        className: "BlobInventoryPolicyDefinition",
        modelProperties: {
            filters: {
                required: true,
                serializedName: "filters",
                type: {
                    name: "Composite",
                    className: "BlobInventoryPolicyFilter"
                }
            }
        }
    }
};
export var BlobInventoryPolicyRule = {
    serializedName: "BlobInventoryPolicyRule",
    type: {
        name: "Composite",
        className: "BlobInventoryPolicyRule",
        modelProperties: {
            enabled: {
                required: true,
                serializedName: "enabled",
                type: {
                    name: "Boolean"
                }
            },
            name: {
                required: true,
                serializedName: "name",
                type: {
                    name: "String"
                }
            },
            definition: {
                required: true,
                serializedName: "definition",
                type: {
                    name: "Composite",
                    className: "BlobInventoryPolicyDefinition"
                }
            }
        }
    }
};
export var BlobInventoryPolicySchema = {
    serializedName: "BlobInventoryPolicySchema",
    type: {
        name: "Composite",
        className: "BlobInventoryPolicySchema",
        modelProperties: {
            enabled: {
                required: true,
                serializedName: "enabled",
                type: {
                    name: "Boolean"
                }
            },
            destination: {
                required: true,
                serializedName: "destination",
                type: {
                    name: "String"
                }
            },
            type: {
                required: true,
                isConstant: true,
                serializedName: "type",
                defaultValue: 'Inventory',
                type: {
                    name: "String"
                }
            },
            rules: {
                required: true,
                serializedName: "rules",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "BlobInventoryPolicyRule"
                        }
                    }
                }
            }
        }
    }
};
export var SystemData = {
    serializedName: "systemData",
    type: {
        name: "Composite",
        className: "SystemData",
        modelProperties: {
            createdBy: {
                serializedName: "createdBy",
                type: {
                    name: "String"
                }
            },
            createdByType: {
                serializedName: "createdByType",
                type: {
                    name: "String"
                }
            },
            createdAt: {
                serializedName: "createdAt",
                type: {
                    name: "DateTime"
                }
            },
            lastModifiedBy: {
                serializedName: "lastModifiedBy",
                type: {
                    name: "String"
                }
            },
            lastModifiedByType: {
                serializedName: "lastModifiedByType",
                type: {
                    name: "String"
                }
            },
            lastModifiedAt: {
                serializedName: "lastModifiedAt",
                type: {
                    name: "DateTime"
                }
            }
        }
    }
};
export var BlobInventoryPolicy = {
    serializedName: "BlobInventoryPolicy",
    type: {
        name: "Composite",
        className: "BlobInventoryPolicy",
        modelProperties: __assign(__assign({}, Resource.type.modelProperties), { lastModifiedTime: {
                readOnly: true,
                serializedName: "properties.lastModifiedTime",
                type: {
                    name: "DateTime"
                }
            }, policy: {
                required: true,
                serializedName: "properties.policy",
                defaultValue: {},
                type: {
                    name: "Composite",
                    className: "BlobInventoryPolicySchema"
                }
            }, systemData: {
                serializedName: "systemData",
                type: {
                    name: "Composite",
                    className: "SystemData"
                }
            } })
    }
};
export var ErrorResponseBody = {
    serializedName: "ErrorResponseBody",
    type: {
        name: "Composite",
        className: "ErrorResponseBody",
        modelProperties: {
            code: {
                serializedName: "code",
                type: {
                    name: "String"
                }
            },
            message: {
                serializedName: "message",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var ErrorResponse = {
    serializedName: "ErrorResponse",
    type: {
        name: "Composite",
        className: "ErrorResponse",
        modelProperties: {
            error: {
                serializedName: "error",
                type: {
                    name: "Composite",
                    className: "ErrorResponseBody"
                }
            }
        }
    }
};
export var AzureEntityResource = {
    serializedName: "AzureEntityResource",
    type: {
        name: "Composite",
        className: "AzureEntityResource",
        modelProperties: __assign(__assign({}, Resource.type.modelProperties), { etag: {
                readOnly: true,
                serializedName: "etag",
                type: {
                    name: "String"
                }
            } })
    }
};
export var PrivateLinkResource = {
    serializedName: "PrivateLinkResource",
    type: {
        name: "Composite",
        className: "PrivateLinkResource",
        modelProperties: __assign(__assign({}, Resource.type.modelProperties), { groupId: {
                readOnly: true,
                serializedName: "properties.groupId",
                type: {
                    name: "String"
                }
            }, requiredMembers: {
                readOnly: true,
                serializedName: "properties.requiredMembers",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String"
                        }
                    }
                }
            }, requiredZoneNames: {
                serializedName: "properties.requiredZoneNames",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String"
                        }
                    }
                }
            } })
    }
};
export var PrivateLinkResourceListResult = {
    serializedName: "PrivateLinkResourceListResult",
    type: {
        name: "Composite",
        className: "PrivateLinkResourceListResult",
        modelProperties: {
            value: {
                serializedName: "value",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "PrivateLinkResource"
                        }
                    }
                }
            }
        }
    }
};
export var UpdateHistoryProperty = {
    serializedName: "UpdateHistoryProperty",
    type: {
        name: "Composite",
        className: "UpdateHistoryProperty",
        modelProperties: {
            update: {
                readOnly: true,
                serializedName: "update",
                type: {
                    name: "String"
                }
            },
            immutabilityPeriodSinceCreationInDays: {
                readOnly: true,
                serializedName: "immutabilityPeriodSinceCreationInDays",
                type: {
                    name: "Number"
                }
            },
            timestamp: {
                readOnly: true,
                serializedName: "timestamp",
                type: {
                    name: "DateTime"
                }
            },
            objectIdentifier: {
                readOnly: true,
                serializedName: "objectIdentifier",
                type: {
                    name: "String"
                }
            },
            tenantId: {
                readOnly: true,
                serializedName: "tenantId",
                type: {
                    name: "String"
                }
            },
            upn: {
                readOnly: true,
                serializedName: "upn",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var ImmutabilityPolicyProperties = {
    serializedName: "ImmutabilityPolicyProperties",
    type: {
        name: "Composite",
        className: "ImmutabilityPolicyProperties",
        modelProperties: {
            immutabilityPeriodSinceCreationInDays: {
                serializedName: "properties.immutabilityPeriodSinceCreationInDays",
                type: {
                    name: "Number"
                }
            },
            state: {
                readOnly: true,
                serializedName: "properties.state",
                type: {
                    name: "String"
                }
            },
            allowProtectedAppendWrites: {
                serializedName: "properties.allowProtectedAppendWrites",
                type: {
                    name: "Boolean"
                }
            },
            etag: {
                readOnly: true,
                serializedName: "etag",
                type: {
                    name: "String"
                }
            },
            updateHistory: {
                readOnly: true,
                serializedName: "updateHistory",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "UpdateHistoryProperty"
                        }
                    }
                }
            }
        }
    }
};
export var TagProperty = {
    serializedName: "TagProperty",
    type: {
        name: "Composite",
        className: "TagProperty",
        modelProperties: {
            tag: {
                readOnly: true,
                serializedName: "tag",
                type: {
                    name: "String"
                }
            },
            timestamp: {
                readOnly: true,
                serializedName: "timestamp",
                type: {
                    name: "DateTime"
                }
            },
            objectIdentifier: {
                readOnly: true,
                serializedName: "objectIdentifier",
                type: {
                    name: "String"
                }
            },
            tenantId: {
                readOnly: true,
                serializedName: "tenantId",
                type: {
                    name: "String"
                }
            },
            upn: {
                readOnly: true,
                serializedName: "upn",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var LegalHoldProperties = {
    serializedName: "LegalHoldProperties",
    type: {
        name: "Composite",
        className: "LegalHoldProperties",
        modelProperties: {
            hasLegalHold: {
                readOnly: true,
                serializedName: "hasLegalHold",
                type: {
                    name: "Boolean"
                }
            },
            tags: {
                serializedName: "tags",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "TagProperty"
                        }
                    }
                }
            }
        }
    }
};
export var BlobContainer = {
    serializedName: "BlobContainer",
    type: {
        name: "Composite",
        className: "BlobContainer",
        modelProperties: __assign(__assign({}, AzureEntityResource.type.modelProperties), { version: {
                readOnly: true,
                serializedName: "properties.version",
                type: {
                    name: "String"
                }
            }, deleted: {
                readOnly: true,
                serializedName: "properties.deleted",
                type: {
                    name: "Boolean"
                }
            }, deletedTime: {
                readOnly: true,
                serializedName: "properties.deletedTime",
                type: {
                    name: "DateTime"
                }
            }, remainingRetentionDays: {
                readOnly: true,
                serializedName: "properties.remainingRetentionDays",
                type: {
                    name: "Number"
                }
            }, defaultEncryptionScope: {
                serializedName: "properties.defaultEncryptionScope",
                type: {
                    name: "String"
                }
            }, denyEncryptionScopeOverride: {
                serializedName: "properties.denyEncryptionScopeOverride",
                type: {
                    name: "Boolean"
                }
            }, publicAccess: {
                serializedName: "properties.publicAccess",
                type: {
                    name: "Enum",
                    allowedValues: [
                        "Container",
                        "Blob",
                        "None"
                    ]
                }
            }, lastModifiedTime: {
                readOnly: true,
                serializedName: "properties.lastModifiedTime",
                type: {
                    name: "DateTime"
                }
            }, leaseStatus: {
                readOnly: true,
                serializedName: "properties.leaseStatus",
                type: {
                    name: "String"
                }
            }, leaseState: {
                readOnly: true,
                serializedName: "properties.leaseState",
                type: {
                    name: "String"
                }
            }, leaseDuration: {
                readOnly: true,
                serializedName: "properties.leaseDuration",
                type: {
                    name: "String"
                }
            }, metadata: {
                serializedName: "properties.metadata",
                type: {
                    name: "Dictionary",
                    value: {
                        type: {
                            name: "String"
                        }
                    }
                }
            }, immutabilityPolicy: {
                readOnly: true,
                serializedName: "properties.immutabilityPolicy",
                type: {
                    name: "Composite",
                    className: "ImmutabilityPolicyProperties"
                }
            }, legalHold: {
                readOnly: true,
                serializedName: "properties.legalHold",
                type: {
                    name: "Composite",
                    className: "LegalHoldProperties"
                }
            }, hasLegalHold: {
                readOnly: true,
                serializedName: "properties.hasLegalHold",
                type: {
                    name: "Boolean"
                }
            }, hasImmutabilityPolicy: {
                readOnly: true,
                serializedName: "properties.hasImmutabilityPolicy",
                type: {
                    name: "Boolean"
                }
            } })
    }
};
export var ImmutabilityPolicy = {
    serializedName: "ImmutabilityPolicy",
    type: {
        name: "Composite",
        className: "ImmutabilityPolicy",
        modelProperties: __assign(__assign({}, AzureEntityResource.type.modelProperties), { immutabilityPeriodSinceCreationInDays: {
                serializedName: "properties.immutabilityPeriodSinceCreationInDays",
                type: {
                    name: "Number"
                }
            }, state: {
                readOnly: true,
                serializedName: "properties.state",
                type: {
                    name: "String"
                }
            }, allowProtectedAppendWrites: {
                serializedName: "properties.allowProtectedAppendWrites",
                type: {
                    name: "Boolean"
                }
            } })
    }
};
export var LegalHold = {
    serializedName: "LegalHold",
    type: {
        name: "Composite",
        className: "LegalHold",
        modelProperties: {
            hasLegalHold: {
                readOnly: true,
                serializedName: "hasLegalHold",
                type: {
                    name: "Boolean"
                }
            },
            tags: {
                required: true,
                serializedName: "tags",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String"
                        }
                    }
                }
            }
        }
    }
};
export var ListContainerItem = {
    serializedName: "ListContainerItem",
    type: {
        name: "Composite",
        className: "ListContainerItem",
        modelProperties: __assign(__assign({}, AzureEntityResource.type.modelProperties), { version: {
                readOnly: true,
                serializedName: "properties.version",
                type: {
                    name: "String"
                }
            }, deleted: {
                readOnly: true,
                serializedName: "properties.deleted",
                type: {
                    name: "Boolean"
                }
            }, deletedTime: {
                readOnly: true,
                serializedName: "properties.deletedTime",
                type: {
                    name: "DateTime"
                }
            }, remainingRetentionDays: {
                readOnly: true,
                serializedName: "properties.remainingRetentionDays",
                type: {
                    name: "Number"
                }
            }, defaultEncryptionScope: {
                serializedName: "properties.defaultEncryptionScope",
                type: {
                    name: "String"
                }
            }, denyEncryptionScopeOverride: {
                serializedName: "properties.denyEncryptionScopeOverride",
                type: {
                    name: "Boolean"
                }
            }, publicAccess: {
                serializedName: "properties.publicAccess",
                type: {
                    name: "Enum",
                    allowedValues: [
                        "Container",
                        "Blob",
                        "None"
                    ]
                }
            }, lastModifiedTime: {
                readOnly: true,
                serializedName: "properties.lastModifiedTime",
                type: {
                    name: "DateTime"
                }
            }, leaseStatus: {
                readOnly: true,
                serializedName: "properties.leaseStatus",
                type: {
                    name: "String"
                }
            }, leaseState: {
                readOnly: true,
                serializedName: "properties.leaseState",
                type: {
                    name: "String"
                }
            }, leaseDuration: {
                readOnly: true,
                serializedName: "properties.leaseDuration",
                type: {
                    name: "String"
                }
            }, metadata: {
                serializedName: "properties.metadata",
                type: {
                    name: "Dictionary",
                    value: {
                        type: {
                            name: "String"
                        }
                    }
                }
            }, immutabilityPolicy: {
                readOnly: true,
                serializedName: "properties.immutabilityPolicy",
                type: {
                    name: "Composite",
                    className: "ImmutabilityPolicyProperties"
                }
            }, legalHold: {
                readOnly: true,
                serializedName: "properties.legalHold",
                type: {
                    name: "Composite",
                    className: "LegalHoldProperties"
                }
            }, hasLegalHold: {
                readOnly: true,
                serializedName: "properties.hasLegalHold",
                type: {
                    name: "Boolean"
                }
            }, hasImmutabilityPolicy: {
                readOnly: true,
                serializedName: "properties.hasImmutabilityPolicy",
                type: {
                    name: "Boolean"
                }
            } })
    }
};
export var CorsRule = {
    serializedName: "CorsRule",
    type: {
        name: "Composite",
        className: "CorsRule",
        modelProperties: {
            allowedOrigins: {
                required: true,
                serializedName: "allowedOrigins",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String"
                        }
                    }
                }
            },
            allowedMethods: {
                required: true,
                serializedName: "allowedMethods",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String"
                        }
                    }
                }
            },
            maxAgeInSeconds: {
                required: true,
                serializedName: "maxAgeInSeconds",
                type: {
                    name: "Number"
                }
            },
            exposedHeaders: {
                required: true,
                serializedName: "exposedHeaders",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String"
                        }
                    }
                }
            },
            allowedHeaders: {
                required: true,
                serializedName: "allowedHeaders",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String"
                        }
                    }
                }
            }
        }
    }
};
export var CorsRules = {
    serializedName: "CorsRules",
    type: {
        name: "Composite",
        className: "CorsRules",
        modelProperties: {
            corsRules: {
                serializedName: "corsRules",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "CorsRule"
                        }
                    }
                }
            }
        }
    }
};
export var DeleteRetentionPolicy = {
    serializedName: "DeleteRetentionPolicy",
    type: {
        name: "Composite",
        className: "DeleteRetentionPolicy",
        modelProperties: {
            enabled: {
                serializedName: "enabled",
                type: {
                    name: "Boolean"
                }
            },
            days: {
                serializedName: "days",
                constraints: {
                    InclusiveMaximum: 365,
                    InclusiveMinimum: 1
                },
                type: {
                    name: "Number"
                }
            }
        }
    }
};
export var ChangeFeed = {
    serializedName: "ChangeFeed",
    type: {
        name: "Composite",
        className: "ChangeFeed",
        modelProperties: {
            enabled: {
                serializedName: "enabled",
                type: {
                    name: "Boolean"
                }
            },
            retentionInDays: {
                serializedName: "retentionInDays",
                constraints: {
                    InclusiveMaximum: 146000,
                    InclusiveMinimum: 1
                },
                type: {
                    name: "Number"
                }
            }
        }
    }
};
export var RestorePolicyProperties = {
    serializedName: "RestorePolicyProperties",
    type: {
        name: "Composite",
        className: "RestorePolicyProperties",
        modelProperties: {
            enabled: {
                required: true,
                serializedName: "enabled",
                type: {
                    name: "Boolean"
                }
            },
            days: {
                serializedName: "days",
                constraints: {
                    InclusiveMaximum: 365,
                    InclusiveMinimum: 1
                },
                type: {
                    name: "Number"
                }
            },
            lastEnabledTime: {
                readOnly: true,
                serializedName: "lastEnabledTime",
                type: {
                    name: "DateTime"
                }
            },
            minRestoreTime: {
                readOnly: true,
                serializedName: "minRestoreTime",
                type: {
                    name: "DateTime"
                }
            }
        }
    }
};
export var LastAccessTimeTrackingPolicy = {
    serializedName: "LastAccessTimeTrackingPolicy",
    type: {
        name: "Composite",
        className: "LastAccessTimeTrackingPolicy",
        modelProperties: {
            enable: {
                required: true,
                serializedName: "enable",
                type: {
                    name: "Boolean"
                }
            },
            name: {
                serializedName: "name",
                type: {
                    name: "String"
                }
            },
            trackingGranularityInDays: {
                serializedName: "trackingGranularityInDays",
                type: {
                    name: "Number"
                }
            },
            blobType: {
                serializedName: "blobType",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String"
                        }
                    }
                }
            }
        }
    }
};
export var BlobServiceProperties = {
    serializedName: "BlobServiceProperties",
    type: {
        name: "Composite",
        className: "BlobServiceProperties",
        modelProperties: __assign(__assign({}, Resource.type.modelProperties), { cors: {
                serializedName: "properties.cors",
                type: {
                    name: "Composite",
                    className: "CorsRules"
                }
            }, defaultServiceVersion: {
                serializedName: "properties.defaultServiceVersion",
                type: {
                    name: "String"
                }
            }, deleteRetentionPolicy: {
                serializedName: "properties.deleteRetentionPolicy",
                type: {
                    name: "Composite",
                    className: "DeleteRetentionPolicy"
                }
            }, isVersioningEnabled: {
                serializedName: "properties.isVersioningEnabled",
                type: {
                    name: "Boolean"
                }
            }, automaticSnapshotPolicyEnabled: {
                serializedName: "properties.automaticSnapshotPolicyEnabled",
                type: {
                    name: "Boolean"
                }
            }, changeFeed: {
                serializedName: "properties.changeFeed",
                type: {
                    name: "Composite",
                    className: "ChangeFeed"
                }
            }, restorePolicy: {
                serializedName: "properties.restorePolicy",
                type: {
                    name: "Composite",
                    className: "RestorePolicyProperties"
                }
            }, containerDeleteRetentionPolicy: {
                serializedName: "properties.containerDeleteRetentionPolicy",
                type: {
                    name: "Composite",
                    className: "DeleteRetentionPolicy"
                }
            }, lastAccessTimeTrackingPolicy: {
                serializedName: "properties.lastAccessTimeTrackingPolicy",
                type: {
                    name: "Composite",
                    className: "LastAccessTimeTrackingPolicy"
                }
            }, sku: {
                readOnly: true,
                serializedName: "sku",
                type: {
                    name: "Composite",
                    className: "Sku"
                }
            } })
    }
};
export var LeaseContainerRequest = {
    serializedName: "LeaseContainerRequest",
    type: {
        name: "Composite",
        className: "LeaseContainerRequest",
        modelProperties: {
            action: {
                required: true,
                serializedName: "action",
                type: {
                    name: "String"
                }
            },
            leaseId: {
                serializedName: "leaseId",
                type: {
                    name: "String"
                }
            },
            breakPeriod: {
                serializedName: "breakPeriod",
                type: {
                    name: "Number"
                }
            },
            leaseDuration: {
                serializedName: "leaseDuration",
                type: {
                    name: "Number"
                }
            },
            proposedLeaseId: {
                serializedName: "proposedLeaseId",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var LeaseContainerResponse = {
    serializedName: "LeaseContainerResponse",
    type: {
        name: "Composite",
        className: "LeaseContainerResponse",
        modelProperties: {
            leaseId: {
                serializedName: "leaseId",
                type: {
                    name: "String"
                }
            },
            leaseTimeSeconds: {
                serializedName: "leaseTimeSeconds",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var Multichannel = {
    serializedName: "Multichannel",
    type: {
        name: "Composite",
        className: "Multichannel",
        modelProperties: {
            enabled: {
                serializedName: "enabled",
                type: {
                    name: "Boolean"
                }
            }
        }
    }
};
export var SmbSetting = {
    serializedName: "SmbSetting",
    type: {
        name: "Composite",
        className: "SmbSetting",
        modelProperties: {
            multichannel: {
                serializedName: "multichannel",
                type: {
                    name: "Composite",
                    className: "Multichannel"
                }
            },
            versions: {
                serializedName: "versions",
                type: {
                    name: "String"
                }
            },
            authenticationMethods: {
                serializedName: "authenticationMethods",
                type: {
                    name: "String"
                }
            },
            kerberosTicketEncryption: {
                serializedName: "kerberosTicketEncryption",
                type: {
                    name: "String"
                }
            },
            channelEncryption: {
                serializedName: "channelEncryption",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var ProtocolSettings = {
    serializedName: "ProtocolSettings",
    type: {
        name: "Composite",
        className: "ProtocolSettings",
        modelProperties: {
            smb: {
                serializedName: "smb",
                type: {
                    name: "Composite",
                    className: "SmbSetting"
                }
            }
        }
    }
};
export var FileServiceProperties = {
    serializedName: "FileServiceProperties",
    type: {
        name: "Composite",
        className: "FileServiceProperties",
        modelProperties: __assign(__assign({}, Resource.type.modelProperties), { cors: {
                serializedName: "properties.cors",
                type: {
                    name: "Composite",
                    className: "CorsRules"
                }
            }, shareDeleteRetentionPolicy: {
                serializedName: "properties.shareDeleteRetentionPolicy",
                type: {
                    name: "Composite",
                    className: "DeleteRetentionPolicy"
                }
            }, protocolSettings: {
                serializedName: "properties.protocolSettings",
                type: {
                    name: "Composite",
                    className: "ProtocolSettings"
                }
            }, sku: {
                readOnly: true,
                serializedName: "sku",
                type: {
                    name: "Composite",
                    className: "Sku"
                }
            } })
    }
};
export var FileServiceItems = {
    serializedName: "FileServiceItems",
    type: {
        name: "Composite",
        className: "FileServiceItems",
        modelProperties: {
            value: {
                readOnly: true,
                serializedName: "value",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "FileServiceProperties"
                        }
                    }
                }
            }
        }
    }
};
export var FileShare = {
    serializedName: "FileShare",
    type: {
        name: "Composite",
        className: "FileShare",
        modelProperties: __assign(__assign({}, AzureEntityResource.type.modelProperties), { lastModifiedTime: {
                readOnly: true,
                serializedName: "properties.lastModifiedTime",
                type: {
                    name: "DateTime"
                }
            }, metadata: {
                serializedName: "properties.metadata",
                type: {
                    name: "Dictionary",
                    value: {
                        type: {
                            name: "String"
                        }
                    }
                }
            }, shareQuota: {
                serializedName: "properties.shareQuota",
                constraints: {
                    InclusiveMaximum: 102400,
                    InclusiveMinimum: 1
                },
                type: {
                    name: "Number"
                }
            }, enabledProtocols: {
                serializedName: "properties.enabledProtocols",
                type: {
                    name: "String"
                }
            }, rootSquash: {
                serializedName: "properties.rootSquash",
                type: {
                    name: "String"
                }
            }, version: {
                readOnly: true,
                serializedName: "properties.version",
                type: {
                    name: "String"
                }
            }, deleted: {
                readOnly: true,
                serializedName: "properties.deleted",
                type: {
                    name: "Boolean"
                }
            }, deletedTime: {
                readOnly: true,
                serializedName: "properties.deletedTime",
                type: {
                    name: "DateTime"
                }
            }, remainingRetentionDays: {
                readOnly: true,
                serializedName: "properties.remainingRetentionDays",
                type: {
                    name: "Number"
                }
            }, accessTier: {
                serializedName: "properties.accessTier",
                type: {
                    name: "String"
                }
            }, accessTierChangeTime: {
                readOnly: true,
                serializedName: "properties.accessTierChangeTime",
                type: {
                    name: "DateTime"
                }
            }, accessTierStatus: {
                readOnly: true,
                serializedName: "properties.accessTierStatus",
                type: {
                    name: "String"
                }
            }, shareUsageBytes: {
                readOnly: true,
                serializedName: "properties.shareUsageBytes",
                type: {
                    name: "Number"
                }
            }, snapshotTime: {
                readOnly: true,
                serializedName: "properties.snapshotTime",
                type: {
                    name: "DateTime"
                }
            } })
    }
};
export var DeletedShare = {
    serializedName: "DeletedShare",
    type: {
        name: "Composite",
        className: "DeletedShare",
        modelProperties: {
            deletedShareName: {
                required: true,
                serializedName: "deletedShareName",
                type: {
                    name: "String"
                }
            },
            deletedShareVersion: {
                required: true,
                serializedName: "deletedShareVersion",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var FileShareItem = {
    serializedName: "FileShareItem",
    type: {
        name: "Composite",
        className: "FileShareItem",
        modelProperties: __assign(__assign({}, AzureEntityResource.type.modelProperties), { lastModifiedTime: {
                readOnly: true,
                serializedName: "properties.lastModifiedTime",
                type: {
                    name: "DateTime"
                }
            }, metadata: {
                serializedName: "properties.metadata",
                type: {
                    name: "Dictionary",
                    value: {
                        type: {
                            name: "String"
                        }
                    }
                }
            }, shareQuota: {
                serializedName: "properties.shareQuota",
                constraints: {
                    InclusiveMaximum: 102400,
                    InclusiveMinimum: 1
                },
                type: {
                    name: "Number"
                }
            }, enabledProtocols: {
                serializedName: "properties.enabledProtocols",
                type: {
                    name: "String"
                }
            }, rootSquash: {
                serializedName: "properties.rootSquash",
                type: {
                    name: "String"
                }
            }, version: {
                readOnly: true,
                serializedName: "properties.version",
                type: {
                    name: "String"
                }
            }, deleted: {
                readOnly: true,
                serializedName: "properties.deleted",
                type: {
                    name: "Boolean"
                }
            }, deletedTime: {
                readOnly: true,
                serializedName: "properties.deletedTime",
                type: {
                    name: "DateTime"
                }
            }, remainingRetentionDays: {
                readOnly: true,
                serializedName: "properties.remainingRetentionDays",
                type: {
                    name: "Number"
                }
            }, accessTier: {
                serializedName: "properties.accessTier",
                type: {
                    name: "String"
                }
            }, accessTierChangeTime: {
                readOnly: true,
                serializedName: "properties.accessTierChangeTime",
                type: {
                    name: "DateTime"
                }
            }, accessTierStatus: {
                readOnly: true,
                serializedName: "properties.accessTierStatus",
                type: {
                    name: "String"
                }
            }, shareUsageBytes: {
                readOnly: true,
                serializedName: "properties.shareUsageBytes",
                type: {
                    name: "Number"
                }
            }, snapshotTime: {
                readOnly: true,
                serializedName: "properties.snapshotTime",
                type: {
                    name: "DateTime"
                }
            } })
    }
};
export var QueueServiceProperties = {
    serializedName: "QueueServiceProperties",
    type: {
        name: "Composite",
        className: "QueueServiceProperties",
        modelProperties: __assign(__assign({}, Resource.type.modelProperties), { cors: {
                serializedName: "properties.cors",
                type: {
                    name: "Composite",
                    className: "CorsRules"
                }
            } })
    }
};
export var ListQueueServices = {
    serializedName: "ListQueueServices",
    type: {
        name: "Composite",
        className: "ListQueueServices",
        modelProperties: {
            value: {
                readOnly: true,
                serializedName: "value",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "QueueServiceProperties"
                        }
                    }
                }
            }
        }
    }
};
export var StorageQueue = {
    serializedName: "StorageQueue",
    type: {
        name: "Composite",
        className: "StorageQueue",
        modelProperties: __assign(__assign({}, Resource.type.modelProperties), { metadata: {
                serializedName: "properties.metadata",
                type: {
                    name: "Dictionary",
                    value: {
                        type: {
                            name: "String"
                        }
                    }
                }
            }, approximateMessageCount: {
                readOnly: true,
                serializedName: "properties.approximateMessageCount",
                type: {
                    name: "Number"
                }
            } })
    }
};
export var ListQueue = {
    serializedName: "ListQueue",
    type: {
        name: "Composite",
        className: "ListQueue",
        modelProperties: __assign(__assign({}, Resource.type.modelProperties), { metadata: {
                serializedName: "properties.metadata",
                type: {
                    name: "Dictionary",
                    value: {
                        type: {
                            name: "String"
                        }
                    }
                }
            } })
    }
};
export var TableServiceProperties = {
    serializedName: "TableServiceProperties",
    type: {
        name: "Composite",
        className: "TableServiceProperties",
        modelProperties: __assign(__assign({}, Resource.type.modelProperties), { cors: {
                serializedName: "properties.cors",
                type: {
                    name: "Composite",
                    className: "CorsRules"
                }
            } })
    }
};
export var ListTableServices = {
    serializedName: "ListTableServices",
    type: {
        name: "Composite",
        className: "ListTableServices",
        modelProperties: {
            value: {
                readOnly: true,
                serializedName: "value",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "TableServiceProperties"
                        }
                    }
                }
            }
        }
    }
};
export var Table = {
    serializedName: "Table",
    type: {
        name: "Composite",
        className: "Table",
        modelProperties: __assign(__assign({}, Resource.type.modelProperties), { tableName: {
                readOnly: true,
                serializedName: "properties.tableName",
                type: {
                    name: "String"
                }
            } })
    }
};
export var BlobContainersCreateOrUpdateImmutabilityPolicyHeaders = {
    serializedName: "blobcontainers-createorupdateimmutabilitypolicy-headers",
    type: {
        name: "Composite",
        className: "BlobContainersCreateOrUpdateImmutabilityPolicyHeaders",
        modelProperties: {
            eTag: {
                serializedName: "etag",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var BlobContainersGetImmutabilityPolicyHeaders = {
    serializedName: "blobcontainers-getimmutabilitypolicy-headers",
    type: {
        name: "Composite",
        className: "BlobContainersGetImmutabilityPolicyHeaders",
        modelProperties: {
            eTag: {
                serializedName: "etag",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var BlobContainersDeleteImmutabilityPolicyHeaders = {
    serializedName: "blobcontainers-deleteimmutabilitypolicy-headers",
    type: {
        name: "Composite",
        className: "BlobContainersDeleteImmutabilityPolicyHeaders",
        modelProperties: {
            eTag: {
                serializedName: "etag",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var BlobContainersLockImmutabilityPolicyHeaders = {
    serializedName: "blobcontainers-lockimmutabilitypolicy-headers",
    type: {
        name: "Composite",
        className: "BlobContainersLockImmutabilityPolicyHeaders",
        modelProperties: {
            eTag: {
                serializedName: "etag",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var BlobContainersExtendImmutabilityPolicyHeaders = {
    serializedName: "blobcontainers-extendimmutabilitypolicy-headers",
    type: {
        name: "Composite",
        className: "BlobContainersExtendImmutabilityPolicyHeaders",
        modelProperties: {
            eTag: {
                serializedName: "etag",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var OperationListResult = {
    serializedName: "OperationListResult",
    type: {
        name: "Composite",
        className: "OperationListResult",
        modelProperties: {
            value: {
                serializedName: "",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "Operation"
                        }
                    }
                }
            }
        }
    }
};
export var StorageSkuListResult = {
    serializedName: "StorageSkuListResult",
    type: {
        name: "Composite",
        className: "StorageSkuListResult",
        modelProperties: {
            value: {
                readOnly: true,
                serializedName: "",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "SkuInformation"
                        }
                    }
                }
            }
        }
    }
};
export var StorageAccountListResult = {
    serializedName: "StorageAccountListResult",
    type: {
        name: "Composite",
        className: "StorageAccountListResult",
        modelProperties: {
            value: {
                readOnly: true,
                serializedName: "",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "StorageAccount"
                        }
                    }
                }
            },
            nextLink: {
                readOnly: true,
                serializedName: "nextLink",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var DeletedAccountListResult = {
    serializedName: "DeletedAccountListResult",
    type: {
        name: "Composite",
        className: "DeletedAccountListResult",
        modelProperties: {
            value: {
                readOnly: true,
                serializedName: "",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "DeletedAccount"
                        }
                    }
                }
            },
            nextLink: {
                readOnly: true,
                serializedName: "nextLink",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var UsageListResult = {
    serializedName: "UsageListResult",
    type: {
        name: "Composite",
        className: "UsageListResult",
        modelProperties: {
            value: {
                serializedName: "",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "Usage"
                        }
                    }
                }
            }
        }
    }
};
export var ListBlobInventoryPolicy = {
    serializedName: "ListBlobInventoryPolicy",
    type: {
        name: "Composite",
        className: "ListBlobInventoryPolicy",
        modelProperties: {
            value: {
                readOnly: true,
                serializedName: "",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "BlobInventoryPolicy"
                        }
                    }
                }
            }
        }
    }
};
export var PrivateEndpointConnectionListResult = {
    serializedName: "PrivateEndpointConnectionListResult",
    type: {
        name: "Composite",
        className: "PrivateEndpointConnectionListResult",
        modelProperties: {
            value: {
                serializedName: "",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "PrivateEndpointConnection"
                        }
                    }
                }
            }
        }
    }
};
export var ObjectReplicationPolicies = {
    serializedName: "ObjectReplicationPolicies",
    type: {
        name: "Composite",
        className: "ObjectReplicationPolicies",
        modelProperties: {
            value: {
                serializedName: "",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "ObjectReplicationPolicy"
                        }
                    }
                }
            }
        }
    }
};
export var EncryptionScopeListResult = {
    serializedName: "EncryptionScopeListResult",
    type: {
        name: "Composite",
        className: "EncryptionScopeListResult",
        modelProperties: {
            value: {
                readOnly: true,
                serializedName: "",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "EncryptionScope"
                        }
                    }
                }
            },
            nextLink: {
                readOnly: true,
                serializedName: "nextLink",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var BlobServiceItems = {
    serializedName: "BlobServiceItems",
    type: {
        name: "Composite",
        className: "BlobServiceItems",
        modelProperties: {
            value: {
                readOnly: true,
                serializedName: "",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "BlobServiceProperties"
                        }
                    }
                }
            }
        }
    }
};
export var ListContainerItems = {
    serializedName: "ListContainerItems",
    type: {
        name: "Composite",
        className: "ListContainerItems",
        modelProperties: {
            value: {
                readOnly: true,
                serializedName: "",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "ListContainerItem"
                        }
                    }
                }
            },
            nextLink: {
                readOnly: true,
                serializedName: "nextLink",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var FileShareItems = {
    serializedName: "FileShareItems",
    type: {
        name: "Composite",
        className: "FileShareItems",
        modelProperties: {
            value: {
                readOnly: true,
                serializedName: "",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "FileShareItem"
                        }
                    }
                }
            },
            nextLink: {
                readOnly: true,
                serializedName: "nextLink",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var ListQueueResource = {
    serializedName: "ListQueueResource",
    type: {
        name: "Composite",
        className: "ListQueueResource",
        modelProperties: {
            value: {
                readOnly: true,
                serializedName: "",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "ListQueue"
                        }
                    }
                }
            },
            nextLink: {
                readOnly: true,
                serializedName: "nextLink",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var ListTableResource = {
    serializedName: "ListTableResource",
    type: {
        name: "Composite",
        className: "ListTableResource",
        modelProperties: {
            value: {
                readOnly: true,
                serializedName: "",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "Table"
                        }
                    }
                }
            },
            nextLink: {
                readOnly: true,
                serializedName: "nextLink",
                type: {
                    name: "String"
                }
            }
        }
    }
};
//# sourceMappingURL=mappers.js.map