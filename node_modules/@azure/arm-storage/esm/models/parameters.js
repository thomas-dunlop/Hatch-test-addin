/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */
export var acceptLanguage = {
    parameterPath: "acceptLanguage",
    mapper: {
        serializedName: "accept-language",
        defaultValue: 'en-US',
        type: {
            name: "String"
        }
    }
};
export var accountName = {
    parameterPath: "accountName",
    mapper: {
        required: true,
        serializedName: "accountName",
        constraints: {
            MaxLength: 24,
            MinLength: 3
        },
        type: {
            name: "String"
        }
    }
};
export var apiVersion = {
    parameterPath: "apiVersion",
    mapper: {
        required: true,
        serializedName: "api-version",
        constraints: {
            MinLength: 1
        },
        type: {
            name: "String"
        }
    }
};
export var blobInventoryPolicyName = {
    parameterPath: "blobInventoryPolicyName",
    mapper: {
        required: true,
        isConstant: true,
        serializedName: "blobInventoryPolicyName",
        defaultValue: 'default',
        type: {
            name: "String"
        }
    }
};
export var blobServicesName = {
    parameterPath: "blobServicesName",
    mapper: {
        required: true,
        isConstant: true,
        serializedName: "BlobServicesName",
        defaultValue: 'default',
        type: {
            name: "String"
        }
    }
};
export var containerName = {
    parameterPath: "containerName",
    mapper: {
        required: true,
        serializedName: "containerName",
        constraints: {
            MaxLength: 63,
            MinLength: 3
        },
        type: {
            name: "String"
        }
    }
};
export var deletedAccountName = {
    parameterPath: "deletedAccountName",
    mapper: {
        required: true,
        serializedName: "deletedAccountName",
        constraints: {
            MaxLength: 24,
            MinLength: 3
        },
        type: {
            name: "String"
        }
    }
};
export var encryptionScopeName = {
    parameterPath: "encryptionScopeName",
    mapper: {
        required: true,
        serializedName: "encryptionScopeName",
        constraints: {
            MaxLength: 63,
            MinLength: 3
        },
        type: {
            name: "String"
        }
    }
};
export var expand0 = {
    parameterPath: [
        "options",
        "expand"
    ],
    mapper: {
        serializedName: "$expand",
        type: {
            name: "Enum",
            allowedValues: [
                "geoReplicationStats",
                "blobRestoreStatus"
            ]
        }
    }
};
export var expand1 = {
    parameterPath: [
        "options",
        "expand"
    ],
    mapper: {
        serializedName: "$expand",
        type: {
            name: "Enum",
            allowedValues: [
                "kerb"
            ]
        }
    }
};
export var expand2 = {
    parameterPath: [
        "options",
        "expand"
    ],
    mapper: {
        serializedName: "$expand",
        type: {
            name: "Enum",
            allowedValues: [
                "deleted",
                "snapshots"
            ]
        }
    }
};
export var expand3 = {
    parameterPath: [
        "options",
        "expand"
    ],
    mapper: {
        serializedName: "$expand",
        type: {
            name: "Enum",
            allowedValues: [
                "snapshots"
            ]
        }
    }
};
export var expand4 = {
    parameterPath: [
        "options",
        "expand"
    ],
    mapper: {
        serializedName: "$expand",
        type: {
            name: "Enum",
            allowedValues: [
                "stats"
            ]
        }
    }
};
export var fileServicesName = {
    parameterPath: "fileServicesName",
    mapper: {
        required: true,
        isConstant: true,
        serializedName: "FileServicesName",
        defaultValue: 'default',
        type: {
            name: "String"
        }
    }
};
export var filter = {
    parameterPath: [
        "options",
        "filter"
    ],
    mapper: {
        serializedName: "$filter",
        type: {
            name: "String"
        }
    }
};
export var ifMatch0 = {
    parameterPath: [
        "options",
        "ifMatch"
    ],
    mapper: {
        serializedName: "If-Match",
        type: {
            name: "String"
        }
    }
};
export var ifMatch1 = {
    parameterPath: "ifMatch",
    mapper: {
        required: true,
        serializedName: "If-Match",
        type: {
            name: "String"
        }
    }
};
export var immutabilityPolicyName = {
    parameterPath: "immutabilityPolicyName",
    mapper: {
        required: true,
        isConstant: true,
        serializedName: "immutabilityPolicyName",
        defaultValue: 'default',
        type: {
            name: "String"
        }
    }
};
export var include = {
    parameterPath: [
        "options",
        "include"
    ],
    mapper: {
        serializedName: "$include",
        type: {
            name: "String"
        }
    }
};
export var location = {
    parameterPath: "location",
    mapper: {
        required: true,
        serializedName: "location",
        type: {
            name: "String"
        }
    }
};
export var managementPolicyName = {
    parameterPath: "managementPolicyName",
    mapper: {
        required: true,
        isConstant: true,
        serializedName: "managementPolicyName",
        defaultValue: 'default',
        type: {
            name: "String"
        }
    }
};
export var maxpagesize = {
    parameterPath: [
        "options",
        "maxpagesize"
    ],
    mapper: {
        serializedName: "$maxpagesize",
        type: {
            name: "String"
        }
    }
};
export var nextPageLink = {
    parameterPath: "nextPageLink",
    mapper: {
        required: true,
        serializedName: "nextLink",
        type: {
            name: "String"
        }
    },
    skipEncoding: true
};
export var objectReplicationPolicyId = {
    parameterPath: "objectReplicationPolicyId",
    mapper: {
        required: true,
        serializedName: "objectReplicationPolicyId",
        constraints: {
            MinLength: 1
        },
        type: {
            name: "String"
        }
    }
};
export var privateEndpointConnectionName = {
    parameterPath: "privateEndpointConnectionName",
    mapper: {
        required: true,
        serializedName: "privateEndpointConnectionName",
        type: {
            name: "String"
        }
    }
};
export var queueName = {
    parameterPath: "queueName",
    mapper: {
        required: true,
        serializedName: "queueName",
        constraints: {
            MaxLength: 63,
            MinLength: 3,
            Pattern: /^[a-z0-9]([a-z0-9]|(-(?!-))){1,61}[a-z0-9]$/
        },
        type: {
            name: "String"
        }
    }
};
export var queueServiceName = {
    parameterPath: "queueServiceName",
    mapper: {
        required: true,
        isConstant: true,
        serializedName: "queueServiceName",
        defaultValue: 'default',
        type: {
            name: "String"
        }
    }
};
export var resourceGroupName = {
    parameterPath: "resourceGroupName",
    mapper: {
        required: true,
        serializedName: "resourceGroupName",
        constraints: {
            MaxLength: 90,
            MinLength: 1,
            Pattern: /^[-\w\._\(\)]+$/
        },
        type: {
            name: "String"
        }
    }
};
export var shareName = {
    parameterPath: "shareName",
    mapper: {
        required: true,
        serializedName: "shareName",
        constraints: {
            MaxLength: 63,
            MinLength: 3
        },
        type: {
            name: "String"
        }
    }
};
export var subscriptionId = {
    parameterPath: "subscriptionId",
    mapper: {
        required: true,
        serializedName: "subscriptionId",
        constraints: {
            MinLength: 1
        },
        type: {
            name: "String"
        }
    }
};
export var tableName = {
    parameterPath: "tableName",
    mapper: {
        required: true,
        serializedName: "tableName",
        constraints: {
            MaxLength: 63,
            MinLength: 3,
            Pattern: /^[A-Za-z][A-Za-z0-9]{2,62}$/
        },
        type: {
            name: "String"
        }
    }
};
export var tableServiceName = {
    parameterPath: "tableServiceName",
    mapper: {
        required: true,
        isConstant: true,
        serializedName: "tableServiceName",
        defaultValue: 'default',
        type: {
            name: "String"
        }
    }
};
export var xMsSnapshot = {
    parameterPath: [
        "options",
        "xMsSnapshot"
    ],
    mapper: {
        serializedName: "x-ms-snapshot",
        type: {
            name: "String"
        }
    }
};
//# sourceMappingURL=parameters.js.map