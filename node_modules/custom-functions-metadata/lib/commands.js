// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT license.
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.generate = void 0;
const fs_1 = require("fs");
const office_addin_usage_data_1 = require("office-addin-usage-data");
const generate_1 = require("./generate");
/* global console */
function generate(inputPath, outputPath) {
    return __awaiter(this, void 0, void 0, function* () {
        try {
            if (!inputPath) {
                throw new Error("You need to provide the path to the source file for custom functions.");
            }
            const results = yield (0, generate_1.generateCustomFunctionsMetadata)(inputPath);
            if (results.errors.length > 0) {
                console.error("Errors found:");
                results.errors.forEach((err) => console.log(err));
            }
            else {
                if (outputPath) {
                    try {
                        (0, fs_1.writeFileSync)(outputPath, results.metadataJson);
                    }
                    catch (err) {
                        throw new Error(`Cannot write to file: ${outputPath}.`);
                    }
                }
                else {
                    console.log(results.metadataJson);
                }
            }
        }
        catch (err) {
            (0, office_addin_usage_data_1.logErrorMessage)(err);
        }
    });
}
exports.generate = generate;
//# sourceMappingURL=commands.js.map